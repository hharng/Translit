using System.Text;

// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Generated at 2018-09-18 14:31:36Z
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace NickBuhro.Translit
{
	partial class Transliteration
	{

		internal static string Cyrillic2LatinRussian(string text)
		{
			var sb = new StringBuilder();
			var state = 0;			
			for (var i = 0; i < text.Length; i++)
			{
				var c = text[i];
				switch (state)
				{
					case 0:	// ""
						switch (c)
						{
							case '’':
								sb.Append("\'");
								break;
							case 'i':
								sb.Append("i");
								break;
							case 'I':
								sb.Append("I");
								break;
							case '№':
								sb.Append("#");
								break;
							case 'а':
								sb.Append("a");
								break;
							case 'А':
								sb.Append("A");
								break;
							case 'б':
								sb.Append("b");
								break;
							case 'Б':
								sb.Append("B");
								break;
							case 'в':
								sb.Append("v");
								break;
							case 'В':
								sb.Append("V");
								break;
							case 'г':
								sb.Append("g");
								break;
							case 'Г':
								sb.Append("G");
								break;
							case 'д':
								sb.Append("d");
								break;
							case 'Д':
								sb.Append("D");
								break;
							case 'е':
								sb.Append("e");
								break;
							case 'Е':
								sb.Append("E");
								break;
							case 'ё':
								sb.Append("yo");
								break;
							case 'Ё':
								sb.Append("Yo");
								break;
							case 'ж':
								sb.Append("zh");
								break;
							case 'Ж':
								sb.Append("Zh");
								break;
							case 'з':
								sb.Append("z");
								break;
							case 'З':
								sb.Append("Z");
								break;
							case 'и':
								sb.Append("i");
								break;
							case 'И':
								sb.Append("I");
								break;
							case 'й':
								sb.Append("j");
								break;
							case 'Й':
								sb.Append("J");
								break;
							case 'к':
								sb.Append("k");
								break;
							case 'К':
								sb.Append("K");
								break;
							case 'л':
								sb.Append("l");
								break;
							case 'Л':
								sb.Append("L");
								break;
							case 'м':
								sb.Append("m");
								break;
							case 'М':
								sb.Append("M");
								break;
							case 'н':
								sb.Append("n");
								break;
							case 'Н':
								sb.Append("N");
								break;
							case 'о':
								sb.Append("o");
								break;
							case 'О':
								sb.Append("O");
								break;
							case 'п':
								sb.Append("p");
								break;
							case 'П':
								sb.Append("P");
								break;
							case 'р':
								sb.Append("r");
								break;
							case 'Р':
								sb.Append("R");
								break;
							case 'с':
								sb.Append("s");
								break;
							case 'С':
								sb.Append("S");
								break;
							case 'т':
								sb.Append("t");
								break;
							case 'Т':
								sb.Append("T");
								break;
							case 'у':
								sb.Append("u");
								break;
							case 'У':
								sb.Append("U");
								break;
							case 'ф':
								sb.Append("f");
								break;
							case 'Ф':
								sb.Append("F");
								break;
							case 'х':
								sb.Append("x");
								break;
							case 'Х':
								sb.Append("X");
								break;
							case 'ц':
								state = 1;	// "ц";
								break;
							case 'Ц':
								state = 2;	// "Ц";
								break;
							case 'ч':
								sb.Append("ch");
								break;
							case 'Ч':
								sb.Append("Ch");
								break;
							case 'ш':
								sb.Append("sh");
								break;
							case 'Ш':
								sb.Append("Sh");
								break;
							case 'щ':
								sb.Append("shh");
								break;
							case 'Щ':
								sb.Append("Shh");
								break;
							case 'ъ':
								sb.Append("``");
								break;
							case 'Ъ':
								sb.Append("``");
								break;
							case 'ы':
								sb.Append("y`");
								break;
							case 'Ы':
								sb.Append("Y`");
								break;
							case 'ь':
								sb.Append("`");
								break;
							case 'Ь':
								sb.Append("`");
								break;
							case 'э':
								sb.Append("e`");
								break;
							case 'Э':
								sb.Append("E`");
								break;
							case 'ю':
								sb.Append("yu");
								break;
							case 'Ю':
								sb.Append("Yu");
								break;
							case 'я':
								sb.Append("ya");
								break;
							case 'Я':
								sb.Append("Ya");
								break;
							case 'ѣ':
								sb.Append("ye");
								break;
							case 'Ѣ':
								sb.Append("Ye");
								break;
							case 'ѳ':
								sb.Append("fh");
								break;
							case 'Ѳ':
								sb.Append("Fh");
								break;
							case 'ѵ':
								sb.Append("yh");
								break;
							case 'Ѵ':
								sb.Append("Yh");
								break;
							default:
								sb.Append(c);
								break;
						}
						break;				
					case 1:	// "ц"
						switch (c)
						{
							case '’':
								sb.Append("cz\'");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("ce");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("cE");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("ci");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("cI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("cj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("cJ");
								state = 0;	// "";
								break;
							case '№':
								sb.Append("cz#");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("cy");
								state = 0;	// "";
								break;
							case 'Y':
								sb.Append("cY");
								state = 0;	// "";
								break;
							case 'а':
								sb.Append("cza");
								state = 0;	// "";
								break;
							case 'А':
								sb.Append("czA");
								state = 0;	// "";
								break;
							case 'б':
								sb.Append("czb");
								state = 0;	// "";
								break;
							case 'Б':
								sb.Append("czB");
								state = 0;	// "";
								break;
							case 'в':
								sb.Append("czv");
								state = 0;	// "";
								break;
							case 'В':
								sb.Append("czV");
								state = 0;	// "";
								break;
							case 'г':
								sb.Append("czg");
								state = 0;	// "";
								break;
							case 'Г':
								sb.Append("czG");
								state = 0;	// "";
								break;
							case 'д':
								sb.Append("czd");
								state = 0;	// "";
								break;
							case 'Д':
								sb.Append("czD");
								state = 0;	// "";
								break;
							case 'е':
								sb.Append("ce");
								state = 0;	// "";
								break;
							case 'Е':
								sb.Append("cE");
								state = 0;	// "";
								break;
							case 'ё':
								sb.Append("cyo");
								state = 0;	// "";
								break;
							case 'Ё':
								sb.Append("cYo");
								state = 0;	// "";
								break;
							case 'ж':
								sb.Append("czzh");
								state = 0;	// "";
								break;
							case 'Ж':
								sb.Append("czZh");
								state = 0;	// "";
								break;
							case 'з':
								sb.Append("czz");
								state = 0;	// "";
								break;
							case 'З':
								sb.Append("czZ");
								state = 0;	// "";
								break;
							case 'и':
								sb.Append("ci");
								state = 0;	// "";
								break;
							case 'И':
								sb.Append("cI");
								state = 0;	// "";
								break;
							case 'й':
								sb.Append("cj");
								state = 0;	// "";
								break;
							case 'Й':
								sb.Append("cJ");
								state = 0;	// "";
								break;
							case 'к':
								sb.Append("czk");
								state = 0;	// "";
								break;
							case 'К':
								sb.Append("czK");
								state = 0;	// "";
								break;
							case 'л':
								sb.Append("czl");
								state = 0;	// "";
								break;
							case 'Л':
								sb.Append("czL");
								state = 0;	// "";
								break;
							case 'м':
								sb.Append("czm");
								state = 0;	// "";
								break;
							case 'М':
								sb.Append("czM");
								state = 0;	// "";
								break;
							case 'н':
								sb.Append("czn");
								state = 0;	// "";
								break;
							case 'Н':
								sb.Append("czN");
								state = 0;	// "";
								break;
							case 'о':
								sb.Append("czo");
								state = 0;	// "";
								break;
							case 'О':
								sb.Append("czO");
								state = 0;	// "";
								break;
							case 'п':
								sb.Append("czp");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("czP");
								state = 0;	// "";
								break;
							case 'р':
								sb.Append("czr");
								state = 0;	// "";
								break;
							case 'Р':
								sb.Append("czR");
								state = 0;	// "";
								break;
							case 'с':
								sb.Append("czs");
								state = 0;	// "";
								break;
							case 'С':
								sb.Append("czS");
								state = 0;	// "";
								break;
							case 'т':
								sb.Append("czt");
								state = 0;	// "";
								break;
							case 'Т':
								sb.Append("czT");
								state = 0;	// "";
								break;
							case 'у':
								sb.Append("czu");
								state = 0;	// "";
								break;
							case 'У':
								sb.Append("czU");
								state = 0;	// "";
								break;
							case 'ф':
								sb.Append("czf");
								state = 0;	// "";
								break;
							case 'Ф':
								sb.Append("czF");
								state = 0;	// "";
								break;
							case 'х':
								sb.Append("czx");
								state = 0;	// "";
								break;
							case 'Х':
								sb.Append("czX");
								state = 0;	// "";
								break;
							case 'ц':
								sb.Append("cz");
								break;
							case 'Ц':
								sb.Append("cz");
								state = 2;	// "Ц";
								break;
							case 'ч':
								sb.Append("czch");
								state = 0;	// "";
								break;
							case 'Ч':
								sb.Append("czCh");
								state = 0;	// "";
								break;
							case 'ш':
								sb.Append("czsh");
								state = 0;	// "";
								break;
							case 'Ш':
								sb.Append("czSh");
								state = 0;	// "";
								break;
							case 'щ':
								sb.Append("czshh");
								state = 0;	// "";
								break;
							case 'Щ':
								sb.Append("czShh");
								state = 0;	// "";
								break;
							case 'ъ':
								sb.Append("cz``");
								state = 0;	// "";
								break;
							case 'Ъ':
								sb.Append("cz``");
								state = 0;	// "";
								break;
							case 'ы':
								sb.Append("cy`");
								state = 0;	// "";
								break;
							case 'Ы':
								sb.Append("cY`");
								state = 0;	// "";
								break;
							case 'ь':
								sb.Append("cz`");
								state = 0;	// "";
								break;
							case 'Ь':
								sb.Append("cz`");
								state = 0;	// "";
								break;
							case 'э':
								sb.Append("ce`");
								state = 0;	// "";
								break;
							case 'Э':
								sb.Append("cE`");
								state = 0;	// "";
								break;
							case 'ю':
								sb.Append("cyu");
								state = 0;	// "";
								break;
							case 'Ю':
								sb.Append("cYu");
								state = 0;	// "";
								break;
							case 'я':
								sb.Append("cya");
								state = 0;	// "";
								break;
							case 'Я':
								sb.Append("cYa");
								state = 0;	// "";
								break;
							case 'ѣ':
								sb.Append("cye");
								state = 0;	// "";
								break;
							case 'Ѣ':
								sb.Append("cYe");
								state = 0;	// "";
								break;
							case 'ѳ':
								sb.Append("czfh");
								state = 0;	// "";
								break;
							case 'Ѳ':
								sb.Append("czFh");
								state = 0;	// "";
								break;
							case 'ѵ':
								sb.Append("cyh");
								state = 0;	// "";
								break;
							case 'Ѵ':
								sb.Append("cYh");
								state = 0;	// "";
								break;
							default:
								sb.Append("cz");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 2:	// "Ц"
						switch (c)
						{
							case '’':
								sb.Append("Cz\'");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Ce");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("CE");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Ci");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("CI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Cj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("CJ");
								state = 0;	// "";
								break;
							case '№':
								sb.Append("Cz#");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Cy");
								state = 0;	// "";
								break;
							case 'Y':
								sb.Append("CY");
								state = 0;	// "";
								break;
							case 'а':
								sb.Append("Cza");
								state = 0;	// "";
								break;
							case 'А':
								sb.Append("CzA");
								state = 0;	// "";
								break;
							case 'б':
								sb.Append("Czb");
								state = 0;	// "";
								break;
							case 'Б':
								sb.Append("CzB");
								state = 0;	// "";
								break;
							case 'в':
								sb.Append("Czv");
								state = 0;	// "";
								break;
							case 'В':
								sb.Append("CzV");
								state = 0;	// "";
								break;
							case 'г':
								sb.Append("Czg");
								state = 0;	// "";
								break;
							case 'Г':
								sb.Append("CzG");
								state = 0;	// "";
								break;
							case 'д':
								sb.Append("Czd");
								state = 0;	// "";
								break;
							case 'Д':
								sb.Append("CzD");
								state = 0;	// "";
								break;
							case 'е':
								sb.Append("Ce");
								state = 0;	// "";
								break;
							case 'Е':
								sb.Append("CE");
								state = 0;	// "";
								break;
							case 'ё':
								sb.Append("Cyo");
								state = 0;	// "";
								break;
							case 'Ё':
								sb.Append("CYo");
								state = 0;	// "";
								break;
							case 'ж':
								sb.Append("Czzh");
								state = 0;	// "";
								break;
							case 'Ж':
								sb.Append("CzZh");
								state = 0;	// "";
								break;
							case 'з':
								sb.Append("Czz");
								state = 0;	// "";
								break;
							case 'З':
								sb.Append("CzZ");
								state = 0;	// "";
								break;
							case 'и':
								sb.Append("Ci");
								state = 0;	// "";
								break;
							case 'И':
								sb.Append("CI");
								state = 0;	// "";
								break;
							case 'й':
								sb.Append("Cj");
								state = 0;	// "";
								break;
							case 'Й':
								sb.Append("CJ");
								state = 0;	// "";
								break;
							case 'к':
								sb.Append("Czk");
								state = 0;	// "";
								break;
							case 'К':
								sb.Append("CzK");
								state = 0;	// "";
								break;
							case 'л':
								sb.Append("Czl");
								state = 0;	// "";
								break;
							case 'Л':
								sb.Append("CzL");
								state = 0;	// "";
								break;
							case 'м':
								sb.Append("Czm");
								state = 0;	// "";
								break;
							case 'М':
								sb.Append("CzM");
								state = 0;	// "";
								break;
							case 'н':
								sb.Append("Czn");
								state = 0;	// "";
								break;
							case 'Н':
								sb.Append("CzN");
								state = 0;	// "";
								break;
							case 'о':
								sb.Append("Czo");
								state = 0;	// "";
								break;
							case 'О':
								sb.Append("CzO");
								state = 0;	// "";
								break;
							case 'п':
								sb.Append("Czp");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("CzP");
								state = 0;	// "";
								break;
							case 'р':
								sb.Append("Czr");
								state = 0;	// "";
								break;
							case 'Р':
								sb.Append("CzR");
								state = 0;	// "";
								break;
							case 'с':
								sb.Append("Czs");
								state = 0;	// "";
								break;
							case 'С':
								sb.Append("CzS");
								state = 0;	// "";
								break;
							case 'т':
								sb.Append("Czt");
								state = 0;	// "";
								break;
							case 'Т':
								sb.Append("CzT");
								state = 0;	// "";
								break;
							case 'у':
								sb.Append("Czu");
								state = 0;	// "";
								break;
							case 'У':
								sb.Append("CzU");
								state = 0;	// "";
								break;
							case 'ф':
								sb.Append("Czf");
								state = 0;	// "";
								break;
							case 'Ф':
								sb.Append("CzF");
								state = 0;	// "";
								break;
							case 'х':
								sb.Append("Czx");
								state = 0;	// "";
								break;
							case 'Х':
								sb.Append("CzX");
								state = 0;	// "";
								break;
							case 'ц':
								sb.Append("Cz");
								state = 1;	// "ц";
								break;
							case 'Ц':
								sb.Append("Cz");
								break;
							case 'ч':
								sb.Append("Czch");
								state = 0;	// "";
								break;
							case 'Ч':
								sb.Append("CzCh");
								state = 0;	// "";
								break;
							case 'ш':
								sb.Append("Czsh");
								state = 0;	// "";
								break;
							case 'Ш':
								sb.Append("CzSh");
								state = 0;	// "";
								break;
							case 'щ':
								sb.Append("Czshh");
								state = 0;	// "";
								break;
							case 'Щ':
								sb.Append("CzShh");
								state = 0;	// "";
								break;
							case 'ъ':
								sb.Append("Cz``");
								state = 0;	// "";
								break;
							case 'Ъ':
								sb.Append("Cz``");
								state = 0;	// "";
								break;
							case 'ы':
								sb.Append("Cy`");
								state = 0;	// "";
								break;
							case 'Ы':
								sb.Append("CY`");
								state = 0;	// "";
								break;
							case 'ь':
								sb.Append("Cz`");
								state = 0;	// "";
								break;
							case 'Ь':
								sb.Append("Cz`");
								state = 0;	// "";
								break;
							case 'э':
								sb.Append("Ce`");
								state = 0;	// "";
								break;
							case 'Э':
								sb.Append("CE`");
								state = 0;	// "";
								break;
							case 'ю':
								sb.Append("Cyu");
								state = 0;	// "";
								break;
							case 'Ю':
								sb.Append("CYu");
								state = 0;	// "";
								break;
							case 'я':
								sb.Append("Cya");
								state = 0;	// "";
								break;
							case 'Я':
								sb.Append("CYa");
								state = 0;	// "";
								break;
							case 'ѣ':
								sb.Append("Cye");
								state = 0;	// "";
								break;
							case 'Ѣ':
								sb.Append("CYe");
								state = 0;	// "";
								break;
							case 'ѳ':
								sb.Append("Czfh");
								state = 0;	// "";
								break;
							case 'Ѳ':
								sb.Append("CzFh");
								state = 0;	// "";
								break;
							case 'ѵ':
								sb.Append("Cyh");
								state = 0;	// "";
								break;
							case 'Ѵ':
								sb.Append("CYh");
								state = 0;	// "";
								break;
							default:
								sb.Append("Cz");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
				}
			}

			switch (state)
			{
				case 0:	// ""
					break;				
				case 1:	// "ц"
					sb.Append("cz");
					break;				
				case 2:	// "Ц"
					sb.Append("Cz");
					break;				
			}
			return sb.ToString();
		}

        internal static string Latin2CyrillicRussian(string text)
		{
			var sb = new StringBuilder(text.Length);
			var state = 0;			
			for (var i = 0; i < text.Length; i++)
			{
				var c = text[i];
				switch (state)
				{
					case 0:	// ""
						switch (c)
						{
							case '\'':
								sb.Append("’");
								break;
							case '#':
								sb.Append("№");
								break;
							case '`':
								state = 1;	// "`";
								break;
							case 'a':
								sb.Append("а");
								break;
							case 'A':
								sb.Append("А");
								break;
							case 'b':
								sb.Append("б");
								break;
							case 'B':
								sb.Append("Б");
								break;
							case 'c':
								state = 2;	// "c";
								break;
							case 'C':
								state = 3;	// "C";
								break;
							case 'd':
								sb.Append("д");
								break;
							case 'D':
								sb.Append("Д");
								break;
							case 'e':
								state = 4;	// "e";
								break;
							case 'E':
								state = 5;	// "E";
								break;
							case 'f':
								state = 6;	// "f";
								break;
							case 'F':
								state = 7;	// "F";
								break;
							case 'g':
								sb.Append("г");
								break;
							case 'G':
								sb.Append("Г");
								break;
							case 'i':
								sb.Append("и");
								break;
							case 'I':
								sb.Append("И");
								break;
							case 'j':
								sb.Append("й");
								break;
							case 'J':
								sb.Append("Й");
								break;
							case 'k':
								sb.Append("к");
								break;
							case 'K':
								sb.Append("К");
								break;
							case 'l':
								sb.Append("л");
								break;
							case 'L':
								sb.Append("Л");
								break;
							case 'm':
								sb.Append("м");
								break;
							case 'M':
								sb.Append("М");
								break;
							case 'n':
								sb.Append("н");
								break;
							case 'N':
								sb.Append("Н");
								break;
							case 'o':
								sb.Append("о");
								break;
							case 'O':
								sb.Append("О");
								break;
							case 'p':
								sb.Append("п");
								break;
							case 'P':
								sb.Append("П");
								break;
							case 'r':
								sb.Append("р");
								break;
							case 'R':
								sb.Append("Р");
								break;
							case 's':
								state = 8;	// "s";
								break;
							case 'S':
								state = 9;	// "S";
								break;
							case 't':
								sb.Append("т");
								break;
							case 'T':
								sb.Append("Т");
								break;
							case 'u':
								sb.Append("у");
								break;
							case 'U':
								sb.Append("У");
								break;
							case 'v':
								sb.Append("в");
								break;
							case 'V':
								sb.Append("В");
								break;
							case 'x':
								sb.Append("х");
								break;
							case 'X':
								sb.Append("Х");
								break;
							case 'y':
								state = 12;	// "y";
								break;
							case 'Y':
								state = 13;	// "Y";
								break;
							case 'z':
								state = 14;	// "z";
								break;
							case 'Z':
								state = 15;	// "Z";
								break;
							default:
								sb.Append(c);
								break;
						}
						break;				
					case 1:	// "`"
						switch (c)
						{
							case '\'':
								sb.Append("ь’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("ь№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("ъ");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("ьа");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("ьА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("ьб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("ьБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("ь");
								state = 2;	// "c";
								break;
							case 'C':
								sb.Append("ь");
								state = 3;	// "C";
								break;
							case 'd':
								sb.Append("ьд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("ьД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("ь");
								state = 4;	// "e";
								break;
							case 'E':
								sb.Append("ь");
								state = 5;	// "E";
								break;
							case 'f':
								sb.Append("ь");
								state = 6;	// "f";
								break;
							case 'F':
								sb.Append("ь");
								state = 7;	// "F";
								break;
							case 'g':
								sb.Append("ьг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("ьГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("ьи");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("ьИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("ьй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("ьЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("ьк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("ьК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("ьл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("ьЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("ьм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("ьМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("ьн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("ьН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("ьо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("ьО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("ьп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("ьП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("ьр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("ьР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("ь");
								state = 8;	// "s";
								break;
							case 'S':
								sb.Append("ь");
								state = 9;	// "S";
								break;
							case 't':
								sb.Append("ьт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("ьТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("ьу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("ьУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("ьв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("ьВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("ьх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("ьХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("ь");
								state = 12;	// "y";
								break;
							case 'Y':
								sb.Append("ь");
								state = 13;	// "Y";
								break;
							case 'z':
								sb.Append("ь");
								state = 14;	// "z";
								break;
							case 'Z':
								sb.Append("ь");
								state = 15;	// "Z";
								break;
							default:
								sb.Append("ь");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 2:	// "c"
						switch (c)
						{
							case '\'':
								sb.Append("ц’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("ц№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("ц");
								state = 1;	// "`";
								break;
							case 'a':
								sb.Append("ца");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("цА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("цб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("цБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("ц");
								break;
							case 'C':
								sb.Append("ц");
								state = 3;	// "C";
								break;
							case 'd':
								sb.Append("цд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("цД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("ц");
								state = 4;	// "e";
								break;
							case 'E':
								sb.Append("ц");
								state = 5;	// "E";
								break;
							case 'f':
								sb.Append("ц");
								state = 6;	// "f";
								break;
							case 'F':
								sb.Append("ц");
								state = 7;	// "F";
								break;
							case 'g':
								sb.Append("цг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("цГ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("ч");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("ци");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("цИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("цй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("цЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("цк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("цК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("цл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("цЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("цм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("цМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("цн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("цН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("цо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("цО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("цп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("цП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("цр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("цР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("ц");
								state = 8;	// "s";
								break;
							case 'S':
								sb.Append("ц");
								state = 9;	// "S";
								break;
							case 't':
								sb.Append("цт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("цТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("цу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("цУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("цв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("цВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("цх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("цХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("ц");
								state = 12;	// "y";
								break;
							case 'Y':
								sb.Append("ц");
								state = 13;	// "Y";
								break;
							case 'z':
								sb.Append("ц");
								state = 0;	// "";
								break;
							case 'Z':
								sb.Append("ц");
								state = 15;	// "Z";
								break;
							default:
								sb.Append("ц");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 3:	// "C"
						switch (c)
						{
							case '\'':
								sb.Append("Ц’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("Ц№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Ц");
								state = 1;	// "`";
								break;
							case 'a':
								sb.Append("Ца");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("ЦА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Цб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("ЦБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("Ц");
								state = 2;	// "c";
								break;
							case 'C':
								sb.Append("Ц");
								break;
							case 'd':
								sb.Append("Цд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("ЦД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Ц");
								state = 4;	// "e";
								break;
							case 'E':
								sb.Append("Ц");
								state = 5;	// "E";
								break;
							case 'f':
								sb.Append("Ц");
								state = 6;	// "f";
								break;
							case 'F':
								sb.Append("Ц");
								state = 7;	// "F";
								break;
							case 'g':
								sb.Append("Цг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("ЦГ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("Ч");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Ци");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("ЦИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Цй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("ЦЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Цк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("ЦК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Цл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("ЦЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("Цм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("ЦМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Цн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("ЦН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Цо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("ЦО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Цп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("ЦП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Цр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("ЦР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("Ц");
								state = 8;	// "s";
								break;
							case 'S':
								sb.Append("Ц");
								state = 9;	// "S";
								break;
							case 't':
								sb.Append("Цт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("ЦТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Цу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("ЦУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Цв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("ЦВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Цх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("ЦХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Ц");
								state = 12;	// "y";
								break;
							case 'Y':
								sb.Append("Ц");
								state = 13;	// "Y";
								break;
							case 'z':
								sb.Append("Ц");
								state = 0;	// "";
								break;
							case 'Z':
								sb.Append("Ц");
								state = 15;	// "Z";
								break;
							default:
								sb.Append("Ц");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 4:	// "e"
						switch (c)
						{
							case '\'':
								sb.Append("е’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("е№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("э");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("еа");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("еА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("еб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("еБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("е");
								state = 2;	// "c";
								break;
							case 'C':
								sb.Append("е");
								state = 3;	// "C";
								break;
							case 'd':
								sb.Append("ед");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("еД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("е");
								break;
							case 'E':
								sb.Append("е");
								state = 5;	// "E";
								break;
							case 'f':
								sb.Append("е");
								state = 6;	// "f";
								break;
							case 'F':
								sb.Append("е");
								state = 7;	// "F";
								break;
							case 'g':
								sb.Append("ег");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("еГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("еи");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("еИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("ей");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("еЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("ек");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("еК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("ел");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("еЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("ем");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("еМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("ен");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("еН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("ео");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("еО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("еп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("еП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("ер");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("еР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("е");
								state = 8;	// "s";
								break;
							case 'S':
								sb.Append("е");
								state = 9;	// "S";
								break;
							case 't':
								sb.Append("ет");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("еТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("еу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("еУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("ев");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("еВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("ех");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("еХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("е");
								state = 12;	// "y";
								break;
							case 'Y':
								sb.Append("е");
								state = 13;	// "Y";
								break;
							case 'z':
								sb.Append("е");
								state = 14;	// "z";
								break;
							case 'Z':
								sb.Append("е");
								state = 15;	// "Z";
								break;
							default:
								sb.Append("е");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 5:	// "E"
						switch (c)
						{
							case '\'':
								sb.Append("Е’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("Е№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Э");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("Еа");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("ЕА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Еб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("ЕБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("Е");
								state = 2;	// "c";
								break;
							case 'C':
								sb.Append("Е");
								state = 3;	// "C";
								break;
							case 'd':
								sb.Append("Ед");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("ЕД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Е");
								state = 4;	// "e";
								break;
							case 'E':
								sb.Append("Е");
								break;
							case 'f':
								sb.Append("Е");
								state = 6;	// "f";
								break;
							case 'F':
								sb.Append("Е");
								state = 7;	// "F";
								break;
							case 'g':
								sb.Append("Ег");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("ЕГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Еи");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("ЕИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Ей");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("ЕЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Ек");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("ЕК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Ел");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("ЕЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("Ем");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("ЕМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Ен");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("ЕН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Ео");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("ЕО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Еп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("ЕП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Ер");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("ЕР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("Е");
								state = 8;	// "s";
								break;
							case 'S':
								sb.Append("Е");
								state = 9;	// "S";
								break;
							case 't':
								sb.Append("Ет");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("ЕТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Еу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("ЕУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Ев");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("ЕВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Ех");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("ЕХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Е");
								state = 12;	// "y";
								break;
							case 'Y':
								sb.Append("Е");
								state = 13;	// "Y";
								break;
							case 'z':
								sb.Append("Е");
								state = 14;	// "z";
								break;
							case 'Z':
								sb.Append("Е");
								state = 15;	// "Z";
								break;
							default:
								sb.Append("Е");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 6:	// "f"
						switch (c)
						{
							case '\'':
								sb.Append("ф’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("ф№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("ф");
								state = 1;	// "`";
								break;
							case 'a':
								sb.Append("фа");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("фА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("фб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("фБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("ф");
								state = 2;	// "c";
								break;
							case 'C':
								sb.Append("ф");
								state = 3;	// "C";
								break;
							case 'd':
								sb.Append("фд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("фД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("ф");
								state = 4;	// "e";
								break;
							case 'E':
								sb.Append("ф");
								state = 5;	// "E";
								break;
							case 'f':
								sb.Append("ф");
								break;
							case 'F':
								sb.Append("ф");
								state = 7;	// "F";
								break;
							case 'g':
								sb.Append("фг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("фГ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("ѳ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("фи");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("фИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("фй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("фЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("фк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("фК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("фл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("фЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("фм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("фМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("фн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("фН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("фо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("фО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("фп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("фП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("фр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("фР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("ф");
								state = 8;	// "s";
								break;
							case 'S':
								sb.Append("ф");
								state = 9;	// "S";
								break;
							case 't':
								sb.Append("фт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("фТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("фу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("фУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("фв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("фВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("фх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("фХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("ф");
								state = 12;	// "y";
								break;
							case 'Y':
								sb.Append("ф");
								state = 13;	// "Y";
								break;
							case 'z':
								sb.Append("ф");
								state = 14;	// "z";
								break;
							case 'Z':
								sb.Append("ф");
								state = 15;	// "Z";
								break;
							default:
								sb.Append("ф");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 7:	// "F"
						switch (c)
						{
							case '\'':
								sb.Append("Ф’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("Ф№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Ф");
								state = 1;	// "`";
								break;
							case 'a':
								sb.Append("Фа");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("ФА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Фб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("ФБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("Ф");
								state = 2;	// "c";
								break;
							case 'C':
								sb.Append("Ф");
								state = 3;	// "C";
								break;
							case 'd':
								sb.Append("Фд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("ФД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Ф");
								state = 4;	// "e";
								break;
							case 'E':
								sb.Append("Ф");
								state = 5;	// "E";
								break;
							case 'f':
								sb.Append("Ф");
								state = 6;	// "f";
								break;
							case 'F':
								sb.Append("Ф");
								break;
							case 'g':
								sb.Append("Фг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("ФГ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("Ѳ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Фи");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("ФИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Фй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("ФЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Фк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("ФК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Фл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("ФЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("Фм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("ФМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Фн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("ФН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Фо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("ФО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Фп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("ФП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Фр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("ФР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("Ф");
								state = 8;	// "s";
								break;
							case 'S':
								sb.Append("Ф");
								state = 9;	// "S";
								break;
							case 't':
								sb.Append("Фт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("ФТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Фу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("ФУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Фв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("ФВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Фх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("ФХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Ф");
								state = 12;	// "y";
								break;
							case 'Y':
								sb.Append("Ф");
								state = 13;	// "Y";
								break;
							case 'z':
								sb.Append("Ф");
								state = 14;	// "z";
								break;
							case 'Z':
								sb.Append("Ф");
								state = 15;	// "Z";
								break;
							default:
								sb.Append("Ф");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 8:	// "s"
						switch (c)
						{
							case '\'':
								sb.Append("с’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("с№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("с");
								state = 1;	// "`";
								break;
							case 'a':
								sb.Append("са");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("сА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("сб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("сБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("с");
								state = 2;	// "c";
								break;
							case 'C':
								sb.Append("с");
								state = 3;	// "C";
								break;
							case 'd':
								sb.Append("сд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("сД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("с");
								state = 4;	// "e";
								break;
							case 'E':
								sb.Append("с");
								state = 5;	// "E";
								break;
							case 'f':
								sb.Append("с");
								state = 6;	// "f";
								break;
							case 'F':
								sb.Append("с");
								state = 7;	// "F";
								break;
							case 'g':
								sb.Append("сг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("сГ");
								state = 0;	// "";
								break;
							case 'h':
								state = 10;	// "sh";
								break;
							case 'i':
								sb.Append("си");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("сИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("сй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("сЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("ск");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("сК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("сл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("сЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("см");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("сМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("сн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("сН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("со");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("сО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("сп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("сП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("ср");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("сР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("с");
								break;
							case 'S':
								sb.Append("с");
								state = 9;	// "S";
								break;
							case 't':
								sb.Append("ст");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("сТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("су");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("сУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("св");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("сВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("сх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("сХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("с");
								state = 12;	// "y";
								break;
							case 'Y':
								sb.Append("с");
								state = 13;	// "Y";
								break;
							case 'z':
								sb.Append("с");
								state = 14;	// "z";
								break;
							case 'Z':
								sb.Append("с");
								state = 15;	// "Z";
								break;
							default:
								sb.Append("с");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 9:	// "S"
						switch (c)
						{
							case '\'':
								sb.Append("С’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("С№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("С");
								state = 1;	// "`";
								break;
							case 'a':
								sb.Append("Са");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("СА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Сб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("СБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("С");
								state = 2;	// "c";
								break;
							case 'C':
								sb.Append("С");
								state = 3;	// "C";
								break;
							case 'd':
								sb.Append("Сд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("СД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("С");
								state = 4;	// "e";
								break;
							case 'E':
								sb.Append("С");
								state = 5;	// "E";
								break;
							case 'f':
								sb.Append("С");
								state = 6;	// "f";
								break;
							case 'F':
								sb.Append("С");
								state = 7;	// "F";
								break;
							case 'g':
								sb.Append("Сг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("СГ");
								state = 0;	// "";
								break;
							case 'h':
								state = 11;	// "Sh";
								break;
							case 'i':
								sb.Append("Си");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("СИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Сй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("СЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Ск");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("СК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Сл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("СЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("См");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("СМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Сн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("СН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Со");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("СО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Сп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("СП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Ср");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("СР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("С");
								state = 8;	// "s";
								break;
							case 'S':
								sb.Append("С");
								break;
							case 't':
								sb.Append("Ст");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("СТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Су");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("СУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Св");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("СВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Сх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("СХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("С");
								state = 12;	// "y";
								break;
							case 'Y':
								sb.Append("С");
								state = 13;	// "Y";
								break;
							case 'z':
								sb.Append("С");
								state = 14;	// "z";
								break;
							case 'Z':
								sb.Append("С");
								state = 15;	// "Z";
								break;
							default:
								sb.Append("С");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 10:	// "sh"
						switch (c)
						{
							case '\'':
								sb.Append("ш’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("ш№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("ш");
								state = 1;	// "`";
								break;
							case 'a':
								sb.Append("ша");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("шА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("шб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("шБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("ш");
								state = 2;	// "c";
								break;
							case 'C':
								sb.Append("ш");
								state = 3;	// "C";
								break;
							case 'd':
								sb.Append("шд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("шД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("ш");
								state = 4;	// "e";
								break;
							case 'E':
								sb.Append("ш");
								state = 5;	// "E";
								break;
							case 'f':
								sb.Append("ш");
								state = 6;	// "f";
								break;
							case 'F':
								sb.Append("ш");
								state = 7;	// "F";
								break;
							case 'g':
								sb.Append("шг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("шГ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("щ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("ши");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("шИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("шй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("шЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("шк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("шК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("шл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("шЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("шм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("шМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("шн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("шН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("шо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("шО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("шп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("шП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("шр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("шР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("ш");
								state = 8;	// "s";
								break;
							case 'S':
								sb.Append("ш");
								state = 9;	// "S";
								break;
							case 't':
								sb.Append("шт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("шТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("шу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("шУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("шв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("шВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("шх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("шХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("ш");
								state = 12;	// "y";
								break;
							case 'Y':
								sb.Append("ш");
								state = 13;	// "Y";
								break;
							case 'z':
								sb.Append("ш");
								state = 14;	// "z";
								break;
							case 'Z':
								sb.Append("ш");
								state = 15;	// "Z";
								break;
							default:
								sb.Append("ш");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 11:	// "Sh"
						switch (c)
						{
							case '\'':
								sb.Append("Ш’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("Ш№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Ш");
								state = 1;	// "`";
								break;
							case 'a':
								sb.Append("Ша");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("ША");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Шб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("ШБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("Ш");
								state = 2;	// "c";
								break;
							case 'C':
								sb.Append("Ш");
								state = 3;	// "C";
								break;
							case 'd':
								sb.Append("Шд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("ШД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Ш");
								state = 4;	// "e";
								break;
							case 'E':
								sb.Append("Ш");
								state = 5;	// "E";
								break;
							case 'f':
								sb.Append("Ш");
								state = 6;	// "f";
								break;
							case 'F':
								sb.Append("Ш");
								state = 7;	// "F";
								break;
							case 'g':
								sb.Append("Шг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("ШГ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("Щ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Ши");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("ШИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Шй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("ШЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Шк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("ШК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Шл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("ШЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("Шм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("ШМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Шн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("ШН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Шо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("ШО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Шп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("ШП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Шр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("ШР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("Ш");
								state = 8;	// "s";
								break;
							case 'S':
								sb.Append("Ш");
								state = 9;	// "S";
								break;
							case 't':
								sb.Append("Шт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("ШТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Шу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("ШУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Шв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("ШВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Шх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("ШХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Ш");
								state = 12;	// "y";
								break;
							case 'Y':
								sb.Append("Ш");
								state = 13;	// "Y";
								break;
							case 'z':
								sb.Append("Ш");
								state = 14;	// "z";
								break;
							case 'Z':
								sb.Append("Ш");
								state = 15;	// "Z";
								break;
							default:
								sb.Append("Ш");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 12:	// "y"
						switch (c)
						{
							case '\'':
								sb.Append("y’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("y№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("ы");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("я");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("yА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("yб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("yБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("y");
								state = 2;	// "c";
								break;
							case 'C':
								sb.Append("y");
								state = 3;	// "C";
								break;
							case 'd':
								sb.Append("yд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("yД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("ѣ");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("y");
								state = 5;	// "E";
								break;
							case 'f':
								sb.Append("y");
								state = 6;	// "f";
								break;
							case 'F':
								sb.Append("y");
								state = 7;	// "F";
								break;
							case 'g':
								sb.Append("yг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("yГ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("ѵ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("yи");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("yИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("yй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("yЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("yк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("yК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("yл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("yЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("yм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("yМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("yн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("yН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("ё");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("yО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("yп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("yП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("yр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("yР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("y");
								state = 8;	// "s";
								break;
							case 'S':
								sb.Append("y");
								state = 9;	// "S";
								break;
							case 't':
								sb.Append("yт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("yТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("ю");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("yУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("yв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("yВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("yх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("yХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("y");
								break;
							case 'Y':
								sb.Append("y");
								state = 13;	// "Y";
								break;
							case 'z':
								sb.Append("y");
								state = 14;	// "z";
								break;
							case 'Z':
								sb.Append("y");
								state = 15;	// "Z";
								break;
							default:
								sb.Append("y");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 13:	// "Y"
						switch (c)
						{
							case '\'':
								sb.Append("Y’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("Y№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Ы");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("Я");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("YА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Yб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("YБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("Y");
								state = 2;	// "c";
								break;
							case 'C':
								sb.Append("Y");
								state = 3;	// "C";
								break;
							case 'd':
								sb.Append("Yд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("YД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Ѣ");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("Y");
								state = 5;	// "E";
								break;
							case 'f':
								sb.Append("Y");
								state = 6;	// "f";
								break;
							case 'F':
								sb.Append("Y");
								state = 7;	// "F";
								break;
							case 'g':
								sb.Append("Yг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("YГ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("Ѵ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Yи");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("YИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Yй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("YЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Yк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("YК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Yл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("YЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("Yм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("YМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Yн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("YН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Ё");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("YО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Yп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("YП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Yр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("YР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("Y");
								state = 8;	// "s";
								break;
							case 'S':
								sb.Append("Y");
								state = 9;	// "S";
								break;
							case 't':
								sb.Append("Yт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("YТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Ю");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("YУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Yв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("YВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Yх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("YХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Y");
								state = 12;	// "y";
								break;
							case 'Y':
								sb.Append("Y");
								break;
							case 'z':
								sb.Append("Y");
								state = 14;	// "z";
								break;
							case 'Z':
								sb.Append("Y");
								state = 15;	// "Z";
								break;
							default:
								sb.Append("Y");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 14:	// "z"
						switch (c)
						{
							case '\'':
								sb.Append("з’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("з№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("з");
								state = 1;	// "`";
								break;
							case 'a':
								sb.Append("за");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("зА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("зб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("зБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("з");
								state = 2;	// "c";
								break;
							case 'C':
								sb.Append("з");
								state = 3;	// "C";
								break;
							case 'd':
								sb.Append("зд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("зД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("з");
								state = 4;	// "e";
								break;
							case 'E':
								sb.Append("з");
								state = 5;	// "E";
								break;
							case 'f':
								sb.Append("з");
								state = 6;	// "f";
								break;
							case 'F':
								sb.Append("з");
								state = 7;	// "F";
								break;
							case 'g':
								sb.Append("зг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("зГ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("ж");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("зи");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("зИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("зй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("зЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("зк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("зК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("зл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("зЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("зм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("зМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("зн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("зН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("зо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("зО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("зп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("зП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("зр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("зР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("з");
								state = 8;	// "s";
								break;
							case 'S':
								sb.Append("з");
								state = 9;	// "S";
								break;
							case 't':
								sb.Append("зт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("зТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("зу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("зУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("зв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("зВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("зх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("зХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("з");
								state = 12;	// "y";
								break;
							case 'Y':
								sb.Append("з");
								state = 13;	// "Y";
								break;
							case 'z':
								sb.Append("з");
								break;
							case 'Z':
								sb.Append("з");
								state = 15;	// "Z";
								break;
							default:
								sb.Append("з");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 15:	// "Z"
						switch (c)
						{
							case '\'':
								sb.Append("З’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("З№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("З");
								state = 1;	// "`";
								break;
							case 'a':
								sb.Append("За");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("ЗА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Зб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("ЗБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("З");
								state = 2;	// "c";
								break;
							case 'C':
								sb.Append("З");
								state = 3;	// "C";
								break;
							case 'd':
								sb.Append("Зд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("ЗД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("З");
								state = 4;	// "e";
								break;
							case 'E':
								sb.Append("З");
								state = 5;	// "E";
								break;
							case 'f':
								sb.Append("З");
								state = 6;	// "f";
								break;
							case 'F':
								sb.Append("З");
								state = 7;	// "F";
								break;
							case 'g':
								sb.Append("Зг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("ЗГ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("Ж");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Зи");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("ЗИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Зй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("ЗЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Зк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("ЗК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Зл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("ЗЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("Зм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("ЗМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Зн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("ЗН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Зо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("ЗО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Зп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("ЗП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Зр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("ЗР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("З");
								state = 8;	// "s";
								break;
							case 'S':
								sb.Append("З");
								state = 9;	// "S";
								break;
							case 't':
								sb.Append("Зт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("ЗТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Зу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("ЗУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Зв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("ЗВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Зх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("ЗХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("З");
								state = 12;	// "y";
								break;
							case 'Y':
								sb.Append("З");
								state = 13;	// "Y";
								break;
							case 'z':
								sb.Append("З");
								state = 14;	// "z";
								break;
							case 'Z':
								sb.Append("З");
								break;
							default:
								sb.Append("З");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
				}
			}

			switch (state)
			{
				case 0:	// ""
					break;				
				case 1:	// "`"
					sb.Append("ь");
					break;				
				case 2:	// "c"
					sb.Append("ц");
					break;				
				case 3:	// "C"
					sb.Append("Ц");
					break;				
				case 4:	// "e"
					sb.Append("е");
					break;				
				case 5:	// "E"
					sb.Append("Е");
					break;				
				case 6:	// "f"
					sb.Append("ф");
					break;				
				case 7:	// "F"
					sb.Append("Ф");
					break;				
				case 8:	// "s"
					sb.Append("с");
					break;				
				case 9:	// "S"
					sb.Append("С");
					break;				
				case 10:	// "sh"
					sb.Append("ш");
					break;				
				case 11:	// "Sh"
					sb.Append("Ш");
					break;				
				case 12:	// "y"
					sb.Append("y");
					break;				
				case 13:	// "Y"
					sb.Append("Y");
					break;				
				case 14:	// "z"
					sb.Append("з");
					break;				
				case 15:	// "Z"
					sb.Append("З");
					break;				
			}
			return sb.ToString();
		}

		internal static string Cyrillic2LatinBelorussian(string text)
		{
			var sb = new StringBuilder();
			var state = 0;			
			for (var i = 0; i < text.Length; i++)
			{
				var c = text[i];
				switch (state)
				{
					case 0:	// ""
						switch (c)
						{
							case '’':
								sb.Append("\'");
								break;
							case 'i':
								sb.Append("i");
								break;
							case 'I':
								sb.Append("I");
								break;
							case '№':
								sb.Append("#");
								break;
							case 'а':
								sb.Append("a");
								break;
							case 'А':
								sb.Append("A");
								break;
							case 'б':
								sb.Append("b");
								break;
							case 'Б':
								sb.Append("B");
								break;
							case 'в':
								sb.Append("v");
								break;
							case 'В':
								sb.Append("V");
								break;
							case 'г':
								sb.Append("h");
								break;
							case 'Г':
								sb.Append("H");
								break;
							case 'д':
								sb.Append("d");
								break;
							case 'Д':
								sb.Append("D");
								break;
							case 'е':
								sb.Append("e");
								break;
							case 'Е':
								sb.Append("E");
								break;
							case 'ё':
								sb.Append("yo");
								break;
							case 'Ё':
								sb.Append("Yo");
								break;
							case 'ж':
								sb.Append("zh");
								break;
							case 'Ж':
								sb.Append("Zh");
								break;
							case 'з':
								sb.Append("z");
								break;
							case 'З':
								sb.Append("Z");
								break;
							case 'й':
								sb.Append("j");
								break;
							case 'Й':
								sb.Append("J");
								break;
							case 'к':
								sb.Append("k");
								break;
							case 'К':
								sb.Append("K");
								break;
							case 'л':
								sb.Append("l");
								break;
							case 'Л':
								sb.Append("L");
								break;
							case 'м':
								sb.Append("m");
								break;
							case 'М':
								sb.Append("M");
								break;
							case 'н':
								sb.Append("n");
								break;
							case 'Н':
								sb.Append("N");
								break;
							case 'о':
								sb.Append("o");
								break;
							case 'О':
								sb.Append("O");
								break;
							case 'п':
								sb.Append("p");
								break;
							case 'П':
								sb.Append("P");
								break;
							case 'р':
								sb.Append("r");
								break;
							case 'Р':
								sb.Append("R");
								break;
							case 'с':
								sb.Append("s");
								break;
							case 'С':
								sb.Append("S");
								break;
							case 'т':
								sb.Append("t");
								break;
							case 'Т':
								sb.Append("T");
								break;
							case 'у':
								sb.Append("u");
								break;
							case 'У':
								sb.Append("U");
								break;
							case 'ў':
								sb.Append("u`");
								break;
							case 'Ў':
								sb.Append("U`");
								break;
							case 'ф':
								sb.Append("f");
								break;
							case 'Ф':
								sb.Append("F");
								break;
							case 'х':
								sb.Append("x");
								break;
							case 'Х':
								sb.Append("X");
								break;
							case 'ц':
								state = 1;	// "ц";
								break;
							case 'Ц':
								state = 2;	// "Ц";
								break;
							case 'ч':
								sb.Append("ch");
								break;
							case 'Ч':
								sb.Append("Ch");
								break;
							case 'ш':
								sb.Append("sh");
								break;
							case 'Ш':
								sb.Append("Sh");
								break;
							case 'ы':
								sb.Append("y`");
								break;
							case 'Ы':
								sb.Append("Y`");
								break;
							case 'ь':
								sb.Append("`");
								break;
							case 'Ь':
								sb.Append("`");
								break;
							case 'э':
								sb.Append("e`");
								break;
							case 'Э':
								sb.Append("E`");
								break;
							case 'ю':
								sb.Append("yu");
								break;
							case 'Ю':
								sb.Append("Yu");
								break;
							case 'я':
								sb.Append("ya");
								break;
							case 'Я':
								sb.Append("Ya");
								break;
							default:
								sb.Append(c);
								break;
						}
						break;				
					case 1:	// "ц"
						switch (c)
						{
							case '’':
								sb.Append("cz\'");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("ce");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("cE");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("ci");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("cI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("cj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("cJ");
								state = 0;	// "";
								break;
							case '№':
								sb.Append("cz#");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("cy");
								state = 0;	// "";
								break;
							case 'Y':
								sb.Append("cY");
								state = 0;	// "";
								break;
							case 'а':
								sb.Append("cza");
								state = 0;	// "";
								break;
							case 'А':
								sb.Append("czA");
								state = 0;	// "";
								break;
							case 'б':
								sb.Append("czb");
								state = 0;	// "";
								break;
							case 'Б':
								sb.Append("czB");
								state = 0;	// "";
								break;
							case 'в':
								sb.Append("czv");
								state = 0;	// "";
								break;
							case 'В':
								sb.Append("czV");
								state = 0;	// "";
								break;
							case 'г':
								sb.Append("czh");
								state = 0;	// "";
								break;
							case 'Г':
								sb.Append("czH");
								state = 0;	// "";
								break;
							case 'д':
								sb.Append("czd");
								state = 0;	// "";
								break;
							case 'Д':
								sb.Append("czD");
								state = 0;	// "";
								break;
							case 'е':
								sb.Append("ce");
								state = 0;	// "";
								break;
							case 'Е':
								sb.Append("cE");
								state = 0;	// "";
								break;
							case 'ё':
								sb.Append("cyo");
								state = 0;	// "";
								break;
							case 'Ё':
								sb.Append("cYo");
								state = 0;	// "";
								break;
							case 'ж':
								sb.Append("czzh");
								state = 0;	// "";
								break;
							case 'Ж':
								sb.Append("czZh");
								state = 0;	// "";
								break;
							case 'з':
								sb.Append("czz");
								state = 0;	// "";
								break;
							case 'З':
								sb.Append("czZ");
								state = 0;	// "";
								break;
							case 'й':
								sb.Append("cj");
								state = 0;	// "";
								break;
							case 'Й':
								sb.Append("cJ");
								state = 0;	// "";
								break;
							case 'к':
								sb.Append("czk");
								state = 0;	// "";
								break;
							case 'К':
								sb.Append("czK");
								state = 0;	// "";
								break;
							case 'л':
								sb.Append("czl");
								state = 0;	// "";
								break;
							case 'Л':
								sb.Append("czL");
								state = 0;	// "";
								break;
							case 'м':
								sb.Append("czm");
								state = 0;	// "";
								break;
							case 'М':
								sb.Append("czM");
								state = 0;	// "";
								break;
							case 'н':
								sb.Append("czn");
								state = 0;	// "";
								break;
							case 'Н':
								sb.Append("czN");
								state = 0;	// "";
								break;
							case 'о':
								sb.Append("czo");
								state = 0;	// "";
								break;
							case 'О':
								sb.Append("czO");
								state = 0;	// "";
								break;
							case 'п':
								sb.Append("czp");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("czP");
								state = 0;	// "";
								break;
							case 'р':
								sb.Append("czr");
								state = 0;	// "";
								break;
							case 'Р':
								sb.Append("czR");
								state = 0;	// "";
								break;
							case 'с':
								sb.Append("czs");
								state = 0;	// "";
								break;
							case 'С':
								sb.Append("czS");
								state = 0;	// "";
								break;
							case 'т':
								sb.Append("czt");
								state = 0;	// "";
								break;
							case 'Т':
								sb.Append("czT");
								state = 0;	// "";
								break;
							case 'у':
								sb.Append("czu");
								state = 0;	// "";
								break;
							case 'У':
								sb.Append("czU");
								state = 0;	// "";
								break;
							case 'ў':
								sb.Append("czu`");
								state = 0;	// "";
								break;
							case 'Ў':
								sb.Append("czU`");
								state = 0;	// "";
								break;
							case 'ф':
								sb.Append("czf");
								state = 0;	// "";
								break;
							case 'Ф':
								sb.Append("czF");
								state = 0;	// "";
								break;
							case 'х':
								sb.Append("czx");
								state = 0;	// "";
								break;
							case 'Х':
								sb.Append("czX");
								state = 0;	// "";
								break;
							case 'ц':
								sb.Append("cz");
								break;
							case 'Ц':
								sb.Append("cz");
								state = 2;	// "Ц";
								break;
							case 'ч':
								sb.Append("czch");
								state = 0;	// "";
								break;
							case 'Ч':
								sb.Append("czCh");
								state = 0;	// "";
								break;
							case 'ш':
								sb.Append("czsh");
								state = 0;	// "";
								break;
							case 'Ш':
								sb.Append("czSh");
								state = 0;	// "";
								break;
							case 'ы':
								sb.Append("cy`");
								state = 0;	// "";
								break;
							case 'Ы':
								sb.Append("cY`");
								state = 0;	// "";
								break;
							case 'ь':
								sb.Append("cz`");
								state = 0;	// "";
								break;
							case 'Ь':
								sb.Append("cz`");
								state = 0;	// "";
								break;
							case 'э':
								sb.Append("ce`");
								state = 0;	// "";
								break;
							case 'Э':
								sb.Append("cE`");
								state = 0;	// "";
								break;
							case 'ю':
								sb.Append("cyu");
								state = 0;	// "";
								break;
							case 'Ю':
								sb.Append("cYu");
								state = 0;	// "";
								break;
							case 'я':
								sb.Append("cya");
								state = 0;	// "";
								break;
							case 'Я':
								sb.Append("cYa");
								state = 0;	// "";
								break;
							default:
								sb.Append("cz");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 2:	// "Ц"
						switch (c)
						{
							case '’':
								sb.Append("Cz\'");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Ce");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("CE");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Ci");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("CI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Cj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("CJ");
								state = 0;	// "";
								break;
							case '№':
								sb.Append("Cz#");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Cy");
								state = 0;	// "";
								break;
							case 'Y':
								sb.Append("CY");
								state = 0;	// "";
								break;
							case 'а':
								sb.Append("Cza");
								state = 0;	// "";
								break;
							case 'А':
								sb.Append("CzA");
								state = 0;	// "";
								break;
							case 'б':
								sb.Append("Czb");
								state = 0;	// "";
								break;
							case 'Б':
								sb.Append("CzB");
								state = 0;	// "";
								break;
							case 'в':
								sb.Append("Czv");
								state = 0;	// "";
								break;
							case 'В':
								sb.Append("CzV");
								state = 0;	// "";
								break;
							case 'г':
								sb.Append("Czh");
								state = 0;	// "";
								break;
							case 'Г':
								sb.Append("CzH");
								state = 0;	// "";
								break;
							case 'д':
								sb.Append("Czd");
								state = 0;	// "";
								break;
							case 'Д':
								sb.Append("CzD");
								state = 0;	// "";
								break;
							case 'е':
								sb.Append("Ce");
								state = 0;	// "";
								break;
							case 'Е':
								sb.Append("CE");
								state = 0;	// "";
								break;
							case 'ё':
								sb.Append("Cyo");
								state = 0;	// "";
								break;
							case 'Ё':
								sb.Append("CYo");
								state = 0;	// "";
								break;
							case 'ж':
								sb.Append("Czzh");
								state = 0;	// "";
								break;
							case 'Ж':
								sb.Append("CzZh");
								state = 0;	// "";
								break;
							case 'з':
								sb.Append("Czz");
								state = 0;	// "";
								break;
							case 'З':
								sb.Append("CzZ");
								state = 0;	// "";
								break;
							case 'й':
								sb.Append("Cj");
								state = 0;	// "";
								break;
							case 'Й':
								sb.Append("CJ");
								state = 0;	// "";
								break;
							case 'к':
								sb.Append("Czk");
								state = 0;	// "";
								break;
							case 'К':
								sb.Append("CzK");
								state = 0;	// "";
								break;
							case 'л':
								sb.Append("Czl");
								state = 0;	// "";
								break;
							case 'Л':
								sb.Append("CzL");
								state = 0;	// "";
								break;
							case 'м':
								sb.Append("Czm");
								state = 0;	// "";
								break;
							case 'М':
								sb.Append("CzM");
								state = 0;	// "";
								break;
							case 'н':
								sb.Append("Czn");
								state = 0;	// "";
								break;
							case 'Н':
								sb.Append("CzN");
								state = 0;	// "";
								break;
							case 'о':
								sb.Append("Czo");
								state = 0;	// "";
								break;
							case 'О':
								sb.Append("CzO");
								state = 0;	// "";
								break;
							case 'п':
								sb.Append("Czp");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("CzP");
								state = 0;	// "";
								break;
							case 'р':
								sb.Append("Czr");
								state = 0;	// "";
								break;
							case 'Р':
								sb.Append("CzR");
								state = 0;	// "";
								break;
							case 'с':
								sb.Append("Czs");
								state = 0;	// "";
								break;
							case 'С':
								sb.Append("CzS");
								state = 0;	// "";
								break;
							case 'т':
								sb.Append("Czt");
								state = 0;	// "";
								break;
							case 'Т':
								sb.Append("CzT");
								state = 0;	// "";
								break;
							case 'у':
								sb.Append("Czu");
								state = 0;	// "";
								break;
							case 'У':
								sb.Append("CzU");
								state = 0;	// "";
								break;
							case 'ў':
								sb.Append("Czu`");
								state = 0;	// "";
								break;
							case 'Ў':
								sb.Append("CzU`");
								state = 0;	// "";
								break;
							case 'ф':
								sb.Append("Czf");
								state = 0;	// "";
								break;
							case 'Ф':
								sb.Append("CzF");
								state = 0;	// "";
								break;
							case 'х':
								sb.Append("Czx");
								state = 0;	// "";
								break;
							case 'Х':
								sb.Append("CzX");
								state = 0;	// "";
								break;
							case 'ц':
								sb.Append("Cz");
								state = 1;	// "ц";
								break;
							case 'Ц':
								sb.Append("Cz");
								break;
							case 'ч':
								sb.Append("Czch");
								state = 0;	// "";
								break;
							case 'Ч':
								sb.Append("CzCh");
								state = 0;	// "";
								break;
							case 'ш':
								sb.Append("Czsh");
								state = 0;	// "";
								break;
							case 'Ш':
								sb.Append("CzSh");
								state = 0;	// "";
								break;
							case 'ы':
								sb.Append("Cy`");
								state = 0;	// "";
								break;
							case 'Ы':
								sb.Append("CY`");
								state = 0;	// "";
								break;
							case 'ь':
								sb.Append("Cz`");
								state = 0;	// "";
								break;
							case 'Ь':
								sb.Append("Cz`");
								state = 0;	// "";
								break;
							case 'э':
								sb.Append("Ce`");
								state = 0;	// "";
								break;
							case 'Э':
								sb.Append("CE`");
								state = 0;	// "";
								break;
							case 'ю':
								sb.Append("Cyu");
								state = 0;	// "";
								break;
							case 'Ю':
								sb.Append("CYu");
								state = 0;	// "";
								break;
							case 'я':
								sb.Append("Cya");
								state = 0;	// "";
								break;
							case 'Я':
								sb.Append("CYa");
								state = 0;	// "";
								break;
							default:
								sb.Append("Cz");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
				}
			}

			switch (state)
			{
				case 0:	// ""
					break;				
				case 1:	// "ц"
					sb.Append("cz");
					break;				
				case 2:	// "Ц"
					sb.Append("Cz");
					break;				
			}
			return sb.ToString();
		}

        internal static string Latin2CyrillicBelorussian(string text)
		{
			var sb = new StringBuilder(text.Length);
			var state = 0;			
			for (var i = 0; i < text.Length; i++)
			{
				var c = text[i];
				switch (state)
				{
					case 0:	// ""
						switch (c)
						{
							case '\'':
								sb.Append("’");
								break;
							case '#':
								sb.Append("№");
								break;
							case '`':
								sb.Append("ь");
								break;
							case 'a':
								sb.Append("а");
								break;
							case 'A':
								sb.Append("А");
								break;
							case 'b':
								sb.Append("б");
								break;
							case 'B':
								sb.Append("Б");
								break;
							case 'c':
								state = 1;	// "c";
								break;
							case 'C':
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("д");
								break;
							case 'D':
								sb.Append("Д");
								break;
							case 'e':
								state = 3;	// "e";
								break;
							case 'E':
								state = 4;	// "E";
								break;
							case 'f':
								sb.Append("ф");
								break;
							case 'F':
								sb.Append("Ф");
								break;
							case 'h':
								sb.Append("г");
								break;
							case 'H':
								sb.Append("Г");
								break;
							case 'i':
								sb.Append("i");
								break;
							case 'I':
								sb.Append("I");
								break;
							case 'j':
								sb.Append("й");
								break;
							case 'J':
								sb.Append("Й");
								break;
							case 'k':
								sb.Append("к");
								break;
							case 'K':
								sb.Append("К");
								break;
							case 'l':
								sb.Append("л");
								break;
							case 'L':
								sb.Append("Л");
								break;
							case 'm':
								sb.Append("м");
								break;
							case 'M':
								sb.Append("М");
								break;
							case 'n':
								sb.Append("н");
								break;
							case 'N':
								sb.Append("Н");
								break;
							case 'o':
								sb.Append("о");
								break;
							case 'O':
								sb.Append("О");
								break;
							case 'p':
								sb.Append("п");
								break;
							case 'P':
								sb.Append("П");
								break;
							case 'r':
								sb.Append("р");
								break;
							case 'R':
								sb.Append("Р");
								break;
							case 's':
								state = 5;	// "s";
								break;
							case 'S':
								state = 6;	// "S";
								break;
							case 't':
								sb.Append("т");
								break;
							case 'T':
								sb.Append("Т");
								break;
							case 'u':
								state = 7;	// "u";
								break;
							case 'U':
								state = 8;	// "U";
								break;
							case 'v':
								sb.Append("в");
								break;
							case 'V':
								sb.Append("В");
								break;
							case 'x':
								sb.Append("х");
								break;
							case 'X':
								sb.Append("Х");
								break;
							case 'y':
								state = 9;	// "y";
								break;
							case 'Y':
								state = 10;	// "Y";
								break;
							case 'z':
								state = 11;	// "z";
								break;
							case 'Z':
								state = 12;	// "Z";
								break;
							default:
								sb.Append(c);
								break;
						}
						break;				
					case 1:	// "c"
						switch (c)
						{
							case '\'':
								sb.Append("ц’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("ц№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("ць");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("ца");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("цА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("цб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("цБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("ц");
								break;
							case 'C':
								sb.Append("ц");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("цд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("цД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("ц");
								state = 3;	// "e";
								break;
							case 'E':
								sb.Append("ц");
								state = 4;	// "E";
								break;
							case 'f':
								sb.Append("цф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("цФ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("ч");
								state = 0;	// "";
								break;
							case 'H':
								sb.Append("цГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("цi");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("цI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("цй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("цЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("цк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("цК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("цл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("цЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("цм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("цМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("цн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("цН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("цо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("цО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("цп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("цП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("цр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("цР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("ц");
								state = 5;	// "s";
								break;
							case 'S':
								sb.Append("ц");
								state = 6;	// "S";
								break;
							case 't':
								sb.Append("цт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("цТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("ц");
								state = 7;	// "u";
								break;
							case 'U':
								sb.Append("ц");
								state = 8;	// "U";
								break;
							case 'v':
								sb.Append("цв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("цВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("цх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("цХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("ц");
								state = 9;	// "y";
								break;
							case 'Y':
								sb.Append("ц");
								state = 10;	// "Y";
								break;
							case 'z':
								sb.Append("ц");
								state = 0;	// "";
								break;
							case 'Z':
								sb.Append("ц");
								state = 12;	// "Z";
								break;
							default:
								sb.Append("ц");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 2:	// "C"
						switch (c)
						{
							case '\'':
								sb.Append("Ц’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("Ц№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Ць");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("Ца");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("ЦА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Цб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("ЦБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("Ц");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("Ц");
								break;
							case 'd':
								sb.Append("Цд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("ЦД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Ц");
								state = 3;	// "e";
								break;
							case 'E':
								sb.Append("Ц");
								state = 4;	// "E";
								break;
							case 'f':
								sb.Append("Цф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("ЦФ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("Ч");
								state = 0;	// "";
								break;
							case 'H':
								sb.Append("ЦГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Цi");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("ЦI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Цй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("ЦЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Цк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("ЦК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Цл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("ЦЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("Цм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("ЦМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Цн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("ЦН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Цо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("ЦО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Цп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("ЦП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Цр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("ЦР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("Ц");
								state = 5;	// "s";
								break;
							case 'S':
								sb.Append("Ц");
								state = 6;	// "S";
								break;
							case 't':
								sb.Append("Цт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("ЦТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Ц");
								state = 7;	// "u";
								break;
							case 'U':
								sb.Append("Ц");
								state = 8;	// "U";
								break;
							case 'v':
								sb.Append("Цв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("ЦВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Цх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("ЦХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Ц");
								state = 9;	// "y";
								break;
							case 'Y':
								sb.Append("Ц");
								state = 10;	// "Y";
								break;
							case 'z':
								sb.Append("Ц");
								state = 0;	// "";
								break;
							case 'Z':
								sb.Append("Ц");
								state = 12;	// "Z";
								break;
							default:
								sb.Append("Ц");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 3:	// "e"
						switch (c)
						{
							case '\'':
								sb.Append("е’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("е№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("э");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("еа");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("еА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("еб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("еБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("е");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("е");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("ед");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("еД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("е");
								break;
							case 'E':
								sb.Append("е");
								state = 4;	// "E";
								break;
							case 'f':
								sb.Append("еф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("еФ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("ег");
								state = 0;	// "";
								break;
							case 'H':
								sb.Append("еГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("еi");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("еI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("ей");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("еЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("ек");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("еК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("ел");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("еЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("ем");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("еМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("ен");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("еН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("ео");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("еО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("еп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("еП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("ер");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("еР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("е");
								state = 5;	// "s";
								break;
							case 'S':
								sb.Append("е");
								state = 6;	// "S";
								break;
							case 't':
								sb.Append("ет");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("еТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("е");
								state = 7;	// "u";
								break;
							case 'U':
								sb.Append("е");
								state = 8;	// "U";
								break;
							case 'v':
								sb.Append("ев");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("еВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("ех");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("еХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("е");
								state = 9;	// "y";
								break;
							case 'Y':
								sb.Append("е");
								state = 10;	// "Y";
								break;
							case 'z':
								sb.Append("е");
								state = 11;	// "z";
								break;
							case 'Z':
								sb.Append("е");
								state = 12;	// "Z";
								break;
							default:
								sb.Append("е");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 4:	// "E"
						switch (c)
						{
							case '\'':
								sb.Append("Е’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("Е№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Э");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("Еа");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("ЕА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Еб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("ЕБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("Е");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("Е");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("Ед");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("ЕД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Е");
								state = 3;	// "e";
								break;
							case 'E':
								sb.Append("Е");
								break;
							case 'f':
								sb.Append("Еф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("ЕФ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("Ег");
								state = 0;	// "";
								break;
							case 'H':
								sb.Append("ЕГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Еi");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("ЕI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Ей");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("ЕЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Ек");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("ЕК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Ел");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("ЕЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("Ем");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("ЕМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Ен");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("ЕН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Ео");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("ЕО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Еп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("ЕП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Ер");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("ЕР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("Е");
								state = 5;	// "s";
								break;
							case 'S':
								sb.Append("Е");
								state = 6;	// "S";
								break;
							case 't':
								sb.Append("Ет");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("ЕТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Е");
								state = 7;	// "u";
								break;
							case 'U':
								sb.Append("Е");
								state = 8;	// "U";
								break;
							case 'v':
								sb.Append("Ев");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("ЕВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Ех");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("ЕХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Е");
								state = 9;	// "y";
								break;
							case 'Y':
								sb.Append("Е");
								state = 10;	// "Y";
								break;
							case 'z':
								sb.Append("Е");
								state = 11;	// "z";
								break;
							case 'Z':
								sb.Append("Е");
								state = 12;	// "Z";
								break;
							default:
								sb.Append("Е");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 5:	// "s"
						switch (c)
						{
							case '\'':
								sb.Append("с’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("с№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("сь");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("са");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("сА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("сб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("сБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("с");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("с");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("сд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("сД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("с");
								state = 3;	// "e";
								break;
							case 'E':
								sb.Append("с");
								state = 4;	// "E";
								break;
							case 'f':
								sb.Append("сф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("сФ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("ш");
								state = 0;	// "";
								break;
							case 'H':
								sb.Append("сГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("сi");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("сI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("сй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("сЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("ск");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("сК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("сл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("сЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("см");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("сМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("сн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("сН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("со");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("сО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("сп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("сП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("ср");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("сР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("с");
								break;
							case 'S':
								sb.Append("с");
								state = 6;	// "S";
								break;
							case 't':
								sb.Append("ст");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("сТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("с");
								state = 7;	// "u";
								break;
							case 'U':
								sb.Append("с");
								state = 8;	// "U";
								break;
							case 'v':
								sb.Append("св");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("сВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("сх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("сХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("с");
								state = 9;	// "y";
								break;
							case 'Y':
								sb.Append("с");
								state = 10;	// "Y";
								break;
							case 'z':
								sb.Append("с");
								state = 11;	// "z";
								break;
							case 'Z':
								sb.Append("с");
								state = 12;	// "Z";
								break;
							default:
								sb.Append("с");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 6:	// "S"
						switch (c)
						{
							case '\'':
								sb.Append("С’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("С№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Сь");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("Са");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("СА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Сб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("СБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("С");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("С");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("Сд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("СД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("С");
								state = 3;	// "e";
								break;
							case 'E':
								sb.Append("С");
								state = 4;	// "E";
								break;
							case 'f':
								sb.Append("Сф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("СФ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("Ш");
								state = 0;	// "";
								break;
							case 'H':
								sb.Append("СГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Сi");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("СI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Сй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("СЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Ск");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("СК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Сл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("СЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("См");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("СМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Сн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("СН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Со");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("СО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Сп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("СП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Ср");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("СР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("С");
								state = 5;	// "s";
								break;
							case 'S':
								sb.Append("С");
								break;
							case 't':
								sb.Append("Ст");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("СТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("С");
								state = 7;	// "u";
								break;
							case 'U':
								sb.Append("С");
								state = 8;	// "U";
								break;
							case 'v':
								sb.Append("Св");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("СВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Сх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("СХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("С");
								state = 9;	// "y";
								break;
							case 'Y':
								sb.Append("С");
								state = 10;	// "Y";
								break;
							case 'z':
								sb.Append("С");
								state = 11;	// "z";
								break;
							case 'Z':
								sb.Append("С");
								state = 12;	// "Z";
								break;
							default:
								sb.Append("С");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 7:	// "u"
						switch (c)
						{
							case '\'':
								sb.Append("у’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("у№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("ў");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("уа");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("уА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("уб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("уБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("у");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("у");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("уд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("уД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("у");
								state = 3;	// "e";
								break;
							case 'E':
								sb.Append("у");
								state = 4;	// "E";
								break;
							case 'f':
								sb.Append("уф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("уФ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("уг");
								state = 0;	// "";
								break;
							case 'H':
								sb.Append("уГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("уi");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("уI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("уй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("уЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("ук");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("уК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("ул");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("уЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("ум");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("уМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("ун");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("уН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("уо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("уО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("уп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("уП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("ур");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("уР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("у");
								state = 5;	// "s";
								break;
							case 'S':
								sb.Append("у");
								state = 6;	// "S";
								break;
							case 't':
								sb.Append("ут");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("уТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("у");
								break;
							case 'U':
								sb.Append("у");
								state = 8;	// "U";
								break;
							case 'v':
								sb.Append("ув");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("уВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("ух");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("уХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("у");
								state = 9;	// "y";
								break;
							case 'Y':
								sb.Append("у");
								state = 10;	// "Y";
								break;
							case 'z':
								sb.Append("у");
								state = 11;	// "z";
								break;
							case 'Z':
								sb.Append("у");
								state = 12;	// "Z";
								break;
							default:
								sb.Append("у");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 8:	// "U"
						switch (c)
						{
							case '\'':
								sb.Append("У’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("У№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Ў");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("Уа");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("УА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Уб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("УБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("У");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("У");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("Уд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("УД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("У");
								state = 3;	// "e";
								break;
							case 'E':
								sb.Append("У");
								state = 4;	// "E";
								break;
							case 'f':
								sb.Append("Уф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("УФ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("Уг");
								state = 0;	// "";
								break;
							case 'H':
								sb.Append("УГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Уi");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("УI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Уй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("УЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Ук");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("УК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Ул");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("УЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("Ум");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("УМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Ун");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("УН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Уо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("УО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Уп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("УП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Ур");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("УР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("У");
								state = 5;	// "s";
								break;
							case 'S':
								sb.Append("У");
								state = 6;	// "S";
								break;
							case 't':
								sb.Append("Ут");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("УТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("У");
								state = 7;	// "u";
								break;
							case 'U':
								sb.Append("У");
								break;
							case 'v':
								sb.Append("Ув");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("УВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Ух");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("УХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("У");
								state = 9;	// "y";
								break;
							case 'Y':
								sb.Append("У");
								state = 10;	// "Y";
								break;
							case 'z':
								sb.Append("У");
								state = 11;	// "z";
								break;
							case 'Z':
								sb.Append("У");
								state = 12;	// "Z";
								break;
							default:
								sb.Append("У");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 9:	// "y"
						switch (c)
						{
							case '\'':
								sb.Append("y’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("y№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("ы");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("я");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("yА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("yб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("yБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("y");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("y");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("yд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("yД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("y");
								state = 3;	// "e";
								break;
							case 'E':
								sb.Append("y");
								state = 4;	// "E";
								break;
							case 'f':
								sb.Append("yф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("yФ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("yг");
								state = 0;	// "";
								break;
							case 'H':
								sb.Append("yГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("yi");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("yI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("yй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("yЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("yк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("yК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("yл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("yЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("yм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("yМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("yн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("yН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("ё");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("yО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("yп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("yП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("yр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("yР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("y");
								state = 5;	// "s";
								break;
							case 'S':
								sb.Append("y");
								state = 6;	// "S";
								break;
							case 't':
								sb.Append("yт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("yТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("ю");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("y");
								state = 8;	// "U";
								break;
							case 'v':
								sb.Append("yв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("yВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("yх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("yХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("y");
								break;
							case 'Y':
								sb.Append("y");
								state = 10;	// "Y";
								break;
							case 'z':
								sb.Append("y");
								state = 11;	// "z";
								break;
							case 'Z':
								sb.Append("y");
								state = 12;	// "Z";
								break;
							default:
								sb.Append("y");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 10:	// "Y"
						switch (c)
						{
							case '\'':
								sb.Append("Y’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("Y№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Ы");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("Я");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("YА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Yб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("YБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("Y");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("Y");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("Yд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("YД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Y");
								state = 3;	// "e";
								break;
							case 'E':
								sb.Append("Y");
								state = 4;	// "E";
								break;
							case 'f':
								sb.Append("Yф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("YФ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("Yг");
								state = 0;	// "";
								break;
							case 'H':
								sb.Append("YГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Yi");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("YI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Yй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("YЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Yк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("YК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Yл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("YЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("Yм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("YМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Yн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("YН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Ё");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("YО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Yп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("YП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Yр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("YР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("Y");
								state = 5;	// "s";
								break;
							case 'S':
								sb.Append("Y");
								state = 6;	// "S";
								break;
							case 't':
								sb.Append("Yт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("YТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Ю");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("Y");
								state = 8;	// "U";
								break;
							case 'v':
								sb.Append("Yв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("YВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Yх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("YХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Y");
								state = 9;	// "y";
								break;
							case 'Y':
								sb.Append("Y");
								break;
							case 'z':
								sb.Append("Y");
								state = 11;	// "z";
								break;
							case 'Z':
								sb.Append("Y");
								state = 12;	// "Z";
								break;
							default:
								sb.Append("Y");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 11:	// "z"
						switch (c)
						{
							case '\'':
								sb.Append("з’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("з№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("зь");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("за");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("зА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("зб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("зБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("з");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("з");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("зд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("зД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("з");
								state = 3;	// "e";
								break;
							case 'E':
								sb.Append("з");
								state = 4;	// "E";
								break;
							case 'f':
								sb.Append("зф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("зФ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("ж");
								state = 0;	// "";
								break;
							case 'H':
								sb.Append("зГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("зi");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("зI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("зй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("зЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("зк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("зК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("зл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("зЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("зм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("зМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("зн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("зН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("зо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("зО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("зп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("зП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("зр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("зР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("з");
								state = 5;	// "s";
								break;
							case 'S':
								sb.Append("з");
								state = 6;	// "S";
								break;
							case 't':
								sb.Append("зт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("зТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("з");
								state = 7;	// "u";
								break;
							case 'U':
								sb.Append("з");
								state = 8;	// "U";
								break;
							case 'v':
								sb.Append("зв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("зВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("зх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("зХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("з");
								state = 9;	// "y";
								break;
							case 'Y':
								sb.Append("з");
								state = 10;	// "Y";
								break;
							case 'z':
								sb.Append("з");
								break;
							case 'Z':
								sb.Append("з");
								state = 12;	// "Z";
								break;
							default:
								sb.Append("з");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 12:	// "Z"
						switch (c)
						{
							case '\'':
								sb.Append("З’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("З№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Зь");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("За");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("ЗА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Зб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("ЗБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("З");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("З");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("Зд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("ЗД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("З");
								state = 3;	// "e";
								break;
							case 'E':
								sb.Append("З");
								state = 4;	// "E";
								break;
							case 'f':
								sb.Append("Зф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("ЗФ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("Ж");
								state = 0;	// "";
								break;
							case 'H':
								sb.Append("ЗГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Зi");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("ЗI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Зй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("ЗЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Зк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("ЗК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Зл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("ЗЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("Зм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("ЗМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Зн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("ЗН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Зо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("ЗО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Зп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("ЗП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Зр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("ЗР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("З");
								state = 5;	// "s";
								break;
							case 'S':
								sb.Append("З");
								state = 6;	// "S";
								break;
							case 't':
								sb.Append("Зт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("ЗТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("З");
								state = 7;	// "u";
								break;
							case 'U':
								sb.Append("З");
								state = 8;	// "U";
								break;
							case 'v':
								sb.Append("Зв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("ЗВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Зх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("ЗХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("З");
								state = 9;	// "y";
								break;
							case 'Y':
								sb.Append("З");
								state = 10;	// "Y";
								break;
							case 'z':
								sb.Append("З");
								state = 11;	// "z";
								break;
							case 'Z':
								sb.Append("З");
								break;
							default:
								sb.Append("З");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
				}
			}

			switch (state)
			{
				case 0:	// ""
					break;				
				case 1:	// "c"
					sb.Append("ц");
					break;				
				case 2:	// "C"
					sb.Append("Ц");
					break;				
				case 3:	// "e"
					sb.Append("е");
					break;				
				case 4:	// "E"
					sb.Append("Е");
					break;				
				case 5:	// "s"
					sb.Append("с");
					break;				
				case 6:	// "S"
					sb.Append("С");
					break;				
				case 7:	// "u"
					sb.Append("у");
					break;				
				case 8:	// "U"
					sb.Append("У");
					break;				
				case 9:	// "y"
					sb.Append("y");
					break;				
				case 10:	// "Y"
					sb.Append("Y");
					break;				
				case 11:	// "z"
					sb.Append("з");
					break;				
				case 12:	// "Z"
					sb.Append("З");
					break;				
			}
			return sb.ToString();
		}

		internal static string Cyrillic2LatinUkrainian(string text)
		{
			var sb = new StringBuilder();
			var state = 0;			
			for (var i = 0; i < text.Length; i++)
			{
				var c = text[i];
				switch (state)
				{
					case 0:	// ""
						switch (c)
						{
							case '’':
								sb.Append("\'");
								break;
							case 'i':
								sb.Append("i");
								break;
							case 'I':
								sb.Append("I");
								break;
							case '№':
								sb.Append("#");
								break;
							case 'а':
								sb.Append("a");
								break;
							case 'А':
								sb.Append("A");
								break;
							case 'б':
								sb.Append("b");
								break;
							case 'Б':
								sb.Append("B");
								break;
							case 'в':
								sb.Append("v");
								break;
							case 'В':
								sb.Append("V");
								break;
							case 'г':
								sb.Append("h");
								break;
							case 'Г':
								sb.Append("H");
								break;
							case 'ґ':
								sb.Append("g`");
								break;
							case 'Ґ':
								sb.Append("G`");
								break;
							case 'д':
								sb.Append("d");
								break;
							case 'Д':
								sb.Append("D");
								break;
							case 'е':
								sb.Append("e");
								break;
							case 'Е':
								sb.Append("E");
								break;
							case 'є':
								sb.Append("ye");
								break;
							case 'Є':
								sb.Append("Ye");
								break;
							case 'ж':
								sb.Append("zh");
								break;
							case 'Ж':
								sb.Append("Zh");
								break;
							case 'з':
								sb.Append("z");
								break;
							case 'З':
								sb.Append("Z");
								break;
							case 'и':
								sb.Append("y`");
								break;
							case 'И':
								sb.Append("Y`");
								break;
							case 'ї':
								sb.Append("yi");
								break;
							case 'Ї':
								sb.Append("Yi");
								break;
							case 'й':
								sb.Append("j");
								break;
							case 'Й':
								sb.Append("J");
								break;
							case 'к':
								sb.Append("k");
								break;
							case 'К':
								sb.Append("K");
								break;
							case 'л':
								sb.Append("l");
								break;
							case 'Л':
								sb.Append("L");
								break;
							case 'м':
								sb.Append("m");
								break;
							case 'М':
								sb.Append("M");
								break;
							case 'н':
								sb.Append("n");
								break;
							case 'Н':
								sb.Append("N");
								break;
							case 'о':
								sb.Append("o");
								break;
							case 'О':
								sb.Append("O");
								break;
							case 'п':
								sb.Append("p");
								break;
							case 'П':
								sb.Append("P");
								break;
							case 'р':
								sb.Append("r");
								break;
							case 'Р':
								sb.Append("R");
								break;
							case 'с':
								sb.Append("s");
								break;
							case 'С':
								sb.Append("S");
								break;
							case 'т':
								sb.Append("t");
								break;
							case 'Т':
								sb.Append("T");
								break;
							case 'у':
								sb.Append("u");
								break;
							case 'У':
								sb.Append("U");
								break;
							case 'ф':
								sb.Append("f");
								break;
							case 'Ф':
								sb.Append("F");
								break;
							case 'х':
								sb.Append("x");
								break;
							case 'Х':
								sb.Append("X");
								break;
							case 'ц':
								state = 1;	// "ц";
								break;
							case 'Ц':
								state = 2;	// "Ц";
								break;
							case 'ч':
								sb.Append("ch");
								break;
							case 'Ч':
								sb.Append("Ch");
								break;
							case 'ш':
								sb.Append("sh");
								break;
							case 'Ш':
								sb.Append("Sh");
								break;
							case 'щ':
								sb.Append("shh");
								break;
							case 'Щ':
								sb.Append("Shh");
								break;
							case 'ь':
								sb.Append("`");
								break;
							case 'Ь':
								sb.Append("`");
								break;
							case 'ю':
								sb.Append("yu");
								break;
							case 'Ю':
								sb.Append("Yu");
								break;
							case 'я':
								sb.Append("ya");
								break;
							case 'Я':
								sb.Append("Ya");
								break;
							default:
								sb.Append(c);
								break;
						}
						break;				
					case 1:	// "ц"
						switch (c)
						{
							case '’':
								sb.Append("cz\'");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("ce");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("cE");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("ci");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("cI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("cj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("cJ");
								state = 0;	// "";
								break;
							case '№':
								sb.Append("cz#");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("cy");
								state = 0;	// "";
								break;
							case 'Y':
								sb.Append("cY");
								state = 0;	// "";
								break;
							case 'а':
								sb.Append("cza");
								state = 0;	// "";
								break;
							case 'А':
								sb.Append("czA");
								state = 0;	// "";
								break;
							case 'б':
								sb.Append("czb");
								state = 0;	// "";
								break;
							case 'Б':
								sb.Append("czB");
								state = 0;	// "";
								break;
							case 'в':
								sb.Append("czv");
								state = 0;	// "";
								break;
							case 'В':
								sb.Append("czV");
								state = 0;	// "";
								break;
							case 'г':
								sb.Append("czh");
								state = 0;	// "";
								break;
							case 'Г':
								sb.Append("czH");
								state = 0;	// "";
								break;
							case 'ґ':
								sb.Append("czg`");
								state = 0;	// "";
								break;
							case 'Ґ':
								sb.Append("czG`");
								state = 0;	// "";
								break;
							case 'д':
								sb.Append("czd");
								state = 0;	// "";
								break;
							case 'Д':
								sb.Append("czD");
								state = 0;	// "";
								break;
							case 'е':
								sb.Append("ce");
								state = 0;	// "";
								break;
							case 'Е':
								sb.Append("cE");
								state = 0;	// "";
								break;
							case 'є':
								sb.Append("cye");
								state = 0;	// "";
								break;
							case 'Є':
								sb.Append("cYe");
								state = 0;	// "";
								break;
							case 'ж':
								sb.Append("czzh");
								state = 0;	// "";
								break;
							case 'Ж':
								sb.Append("czZh");
								state = 0;	// "";
								break;
							case 'з':
								sb.Append("czz");
								state = 0;	// "";
								break;
							case 'З':
								sb.Append("czZ");
								state = 0;	// "";
								break;
							case 'и':
								sb.Append("cy`");
								state = 0;	// "";
								break;
							case 'И':
								sb.Append("cY`");
								state = 0;	// "";
								break;
							case 'ї':
								sb.Append("cyi");
								state = 0;	// "";
								break;
							case 'Ї':
								sb.Append("cYi");
								state = 0;	// "";
								break;
							case 'й':
								sb.Append("cj");
								state = 0;	// "";
								break;
							case 'Й':
								sb.Append("cJ");
								state = 0;	// "";
								break;
							case 'к':
								sb.Append("czk");
								state = 0;	// "";
								break;
							case 'К':
								sb.Append("czK");
								state = 0;	// "";
								break;
							case 'л':
								sb.Append("czl");
								state = 0;	// "";
								break;
							case 'Л':
								sb.Append("czL");
								state = 0;	// "";
								break;
							case 'м':
								sb.Append("czm");
								state = 0;	// "";
								break;
							case 'М':
								sb.Append("czM");
								state = 0;	// "";
								break;
							case 'н':
								sb.Append("czn");
								state = 0;	// "";
								break;
							case 'Н':
								sb.Append("czN");
								state = 0;	// "";
								break;
							case 'о':
								sb.Append("czo");
								state = 0;	// "";
								break;
							case 'О':
								sb.Append("czO");
								state = 0;	// "";
								break;
							case 'п':
								sb.Append("czp");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("czP");
								state = 0;	// "";
								break;
							case 'р':
								sb.Append("czr");
								state = 0;	// "";
								break;
							case 'Р':
								sb.Append("czR");
								state = 0;	// "";
								break;
							case 'с':
								sb.Append("czs");
								state = 0;	// "";
								break;
							case 'С':
								sb.Append("czS");
								state = 0;	// "";
								break;
							case 'т':
								sb.Append("czt");
								state = 0;	// "";
								break;
							case 'Т':
								sb.Append("czT");
								state = 0;	// "";
								break;
							case 'у':
								sb.Append("czu");
								state = 0;	// "";
								break;
							case 'У':
								sb.Append("czU");
								state = 0;	// "";
								break;
							case 'ф':
								sb.Append("czf");
								state = 0;	// "";
								break;
							case 'Ф':
								sb.Append("czF");
								state = 0;	// "";
								break;
							case 'х':
								sb.Append("czx");
								state = 0;	// "";
								break;
							case 'Х':
								sb.Append("czX");
								state = 0;	// "";
								break;
							case 'ц':
								sb.Append("cz");
								break;
							case 'Ц':
								sb.Append("cz");
								state = 2;	// "Ц";
								break;
							case 'ч':
								sb.Append("czch");
								state = 0;	// "";
								break;
							case 'Ч':
								sb.Append("czCh");
								state = 0;	// "";
								break;
							case 'ш':
								sb.Append("czsh");
								state = 0;	// "";
								break;
							case 'Ш':
								sb.Append("czSh");
								state = 0;	// "";
								break;
							case 'щ':
								sb.Append("czshh");
								state = 0;	// "";
								break;
							case 'Щ':
								sb.Append("czShh");
								state = 0;	// "";
								break;
							case 'ь':
								sb.Append("cz`");
								state = 0;	// "";
								break;
							case 'Ь':
								sb.Append("cz`");
								state = 0;	// "";
								break;
							case 'ю':
								sb.Append("cyu");
								state = 0;	// "";
								break;
							case 'Ю':
								sb.Append("cYu");
								state = 0;	// "";
								break;
							case 'я':
								sb.Append("cya");
								state = 0;	// "";
								break;
							case 'Я':
								sb.Append("cYa");
								state = 0;	// "";
								break;
							default:
								sb.Append("cz");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 2:	// "Ц"
						switch (c)
						{
							case '’':
								sb.Append("Cz\'");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Ce");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("CE");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Ci");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("CI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Cj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("CJ");
								state = 0;	// "";
								break;
							case '№':
								sb.Append("Cz#");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Cy");
								state = 0;	// "";
								break;
							case 'Y':
								sb.Append("CY");
								state = 0;	// "";
								break;
							case 'а':
								sb.Append("Cza");
								state = 0;	// "";
								break;
							case 'А':
								sb.Append("CzA");
								state = 0;	// "";
								break;
							case 'б':
								sb.Append("Czb");
								state = 0;	// "";
								break;
							case 'Б':
								sb.Append("CzB");
								state = 0;	// "";
								break;
							case 'в':
								sb.Append("Czv");
								state = 0;	// "";
								break;
							case 'В':
								sb.Append("CzV");
								state = 0;	// "";
								break;
							case 'г':
								sb.Append("Czh");
								state = 0;	// "";
								break;
							case 'Г':
								sb.Append("CzH");
								state = 0;	// "";
								break;
							case 'ґ':
								sb.Append("Czg`");
								state = 0;	// "";
								break;
							case 'Ґ':
								sb.Append("CzG`");
								state = 0;	// "";
								break;
							case 'д':
								sb.Append("Czd");
								state = 0;	// "";
								break;
							case 'Д':
								sb.Append("CzD");
								state = 0;	// "";
								break;
							case 'е':
								sb.Append("Ce");
								state = 0;	// "";
								break;
							case 'Е':
								sb.Append("CE");
								state = 0;	// "";
								break;
							case 'є':
								sb.Append("Cye");
								state = 0;	// "";
								break;
							case 'Є':
								sb.Append("CYe");
								state = 0;	// "";
								break;
							case 'ж':
								sb.Append("Czzh");
								state = 0;	// "";
								break;
							case 'Ж':
								sb.Append("CzZh");
								state = 0;	// "";
								break;
							case 'з':
								sb.Append("Czz");
								state = 0;	// "";
								break;
							case 'З':
								sb.Append("CzZ");
								state = 0;	// "";
								break;
							case 'и':
								sb.Append("Cy`");
								state = 0;	// "";
								break;
							case 'И':
								sb.Append("CY`");
								state = 0;	// "";
								break;
							case 'ї':
								sb.Append("Cyi");
								state = 0;	// "";
								break;
							case 'Ї':
								sb.Append("CYi");
								state = 0;	// "";
								break;
							case 'й':
								sb.Append("Cj");
								state = 0;	// "";
								break;
							case 'Й':
								sb.Append("CJ");
								state = 0;	// "";
								break;
							case 'к':
								sb.Append("Czk");
								state = 0;	// "";
								break;
							case 'К':
								sb.Append("CzK");
								state = 0;	// "";
								break;
							case 'л':
								sb.Append("Czl");
								state = 0;	// "";
								break;
							case 'Л':
								sb.Append("CzL");
								state = 0;	// "";
								break;
							case 'м':
								sb.Append("Czm");
								state = 0;	// "";
								break;
							case 'М':
								sb.Append("CzM");
								state = 0;	// "";
								break;
							case 'н':
								sb.Append("Czn");
								state = 0;	// "";
								break;
							case 'Н':
								sb.Append("CzN");
								state = 0;	// "";
								break;
							case 'о':
								sb.Append("Czo");
								state = 0;	// "";
								break;
							case 'О':
								sb.Append("CzO");
								state = 0;	// "";
								break;
							case 'п':
								sb.Append("Czp");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("CzP");
								state = 0;	// "";
								break;
							case 'р':
								sb.Append("Czr");
								state = 0;	// "";
								break;
							case 'Р':
								sb.Append("CzR");
								state = 0;	// "";
								break;
							case 'с':
								sb.Append("Czs");
								state = 0;	// "";
								break;
							case 'С':
								sb.Append("CzS");
								state = 0;	// "";
								break;
							case 'т':
								sb.Append("Czt");
								state = 0;	// "";
								break;
							case 'Т':
								sb.Append("CzT");
								state = 0;	// "";
								break;
							case 'у':
								sb.Append("Czu");
								state = 0;	// "";
								break;
							case 'У':
								sb.Append("CzU");
								state = 0;	// "";
								break;
							case 'ф':
								sb.Append("Czf");
								state = 0;	// "";
								break;
							case 'Ф':
								sb.Append("CzF");
								state = 0;	// "";
								break;
							case 'х':
								sb.Append("Czx");
								state = 0;	// "";
								break;
							case 'Х':
								sb.Append("CzX");
								state = 0;	// "";
								break;
							case 'ц':
								sb.Append("Cz");
								state = 1;	// "ц";
								break;
							case 'Ц':
								sb.Append("Cz");
								break;
							case 'ч':
								sb.Append("Czch");
								state = 0;	// "";
								break;
							case 'Ч':
								sb.Append("CzCh");
								state = 0;	// "";
								break;
							case 'ш':
								sb.Append("Czsh");
								state = 0;	// "";
								break;
							case 'Ш':
								sb.Append("CzSh");
								state = 0;	// "";
								break;
							case 'щ':
								sb.Append("Czshh");
								state = 0;	// "";
								break;
							case 'Щ':
								sb.Append("CzShh");
								state = 0;	// "";
								break;
							case 'ь':
								sb.Append("Cz`");
								state = 0;	// "";
								break;
							case 'Ь':
								sb.Append("Cz`");
								state = 0;	// "";
								break;
							case 'ю':
								sb.Append("Cyu");
								state = 0;	// "";
								break;
							case 'Ю':
								sb.Append("CYu");
								state = 0;	// "";
								break;
							case 'я':
								sb.Append("Cya");
								state = 0;	// "";
								break;
							case 'Я':
								sb.Append("CYa");
								state = 0;	// "";
								break;
							default:
								sb.Append("Cz");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
				}
			}

			switch (state)
			{
				case 0:	// ""
					break;				
				case 1:	// "ц"
					sb.Append("cz");
					break;				
				case 2:	// "Ц"
					sb.Append("Cz");
					break;				
			}
			return sb.ToString();
		}

        internal static string Latin2CyrillicUkrainian(string text)
		{
			var sb = new StringBuilder(text.Length);
			var state = 0;			
			for (var i = 0; i < text.Length; i++)
			{
				var c = text[i];
				switch (state)
				{
					case 0:	// ""
						switch (c)
						{
							case '\'':
								sb.Append("’");
								break;
							case '#':
								sb.Append("№");
								break;
							case '`':
								sb.Append("ь");
								break;
							case 'a':
								sb.Append("а");
								break;
							case 'A':
								sb.Append("А");
								break;
							case 'b':
								sb.Append("б");
								break;
							case 'B':
								sb.Append("Б");
								break;
							case 'c':
								state = 1;	// "c";
								break;
							case 'C':
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("д");
								break;
							case 'D':
								sb.Append("Д");
								break;
							case 'e':
								sb.Append("е");
								break;
							case 'E':
								sb.Append("Е");
								break;
							case 'f':
								sb.Append("ф");
								break;
							case 'F':
								sb.Append("Ф");
								break;
							case 'g':
								state = 3;	// "g";
								break;
							case 'G':
								state = 4;	// "G";
								break;
							case 'h':
								sb.Append("г");
								break;
							case 'H':
								sb.Append("Г");
								break;
							case 'i':
								sb.Append("i");
								break;
							case 'I':
								sb.Append("I");
								break;
							case 'j':
								sb.Append("й");
								break;
							case 'J':
								sb.Append("Й");
								break;
							case 'k':
								sb.Append("к");
								break;
							case 'K':
								sb.Append("К");
								break;
							case 'l':
								sb.Append("л");
								break;
							case 'L':
								sb.Append("Л");
								break;
							case 'm':
								sb.Append("м");
								break;
							case 'M':
								sb.Append("М");
								break;
							case 'n':
								sb.Append("н");
								break;
							case 'N':
								sb.Append("Н");
								break;
							case 'o':
								sb.Append("о");
								break;
							case 'O':
								sb.Append("О");
								break;
							case 'p':
								sb.Append("п");
								break;
							case 'P':
								sb.Append("П");
								break;
							case 'r':
								sb.Append("р");
								break;
							case 'R':
								sb.Append("Р");
								break;
							case 's':
								state = 5;	// "s";
								break;
							case 'S':
								state = 6;	// "S";
								break;
							case 't':
								sb.Append("т");
								break;
							case 'T':
								sb.Append("Т");
								break;
							case 'u':
								sb.Append("у");
								break;
							case 'U':
								sb.Append("У");
								break;
							case 'v':
								sb.Append("в");
								break;
							case 'V':
								sb.Append("В");
								break;
							case 'x':
								sb.Append("х");
								break;
							case 'X':
								sb.Append("Х");
								break;
							case 'y':
								state = 9;	// "y";
								break;
							case 'Y':
								state = 10;	// "Y";
								break;
							case 'z':
								state = 11;	// "z";
								break;
							case 'Z':
								state = 12;	// "Z";
								break;
							default:
								sb.Append(c);
								break;
						}
						break;				
					case 1:	// "c"
						switch (c)
						{
							case '\'':
								sb.Append("ц’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("ц№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("ць");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("ца");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("цА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("цб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("цБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("ц");
								break;
							case 'C':
								sb.Append("ц");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("цд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("цД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("це");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("цЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("цф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("цФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("ц");
								state = 3;	// "g";
								break;
							case 'G':
								sb.Append("ц");
								state = 4;	// "G";
								break;
							case 'h':
								sb.Append("ч");
								state = 0;	// "";
								break;
							case 'H':
								sb.Append("цГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("цi");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("цI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("цй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("цЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("цк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("цК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("цл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("цЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("цм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("цМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("цн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("цН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("цо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("цО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("цп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("цП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("цр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("цР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("ц");
								state = 5;	// "s";
								break;
							case 'S':
								sb.Append("ц");
								state = 6;	// "S";
								break;
							case 't':
								sb.Append("цт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("цТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("цу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("цУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("цв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("цВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("цх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("цХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("ц");
								state = 9;	// "y";
								break;
							case 'Y':
								sb.Append("ц");
								state = 10;	// "Y";
								break;
							case 'z':
								sb.Append("ц");
								state = 0;	// "";
								break;
							case 'Z':
								sb.Append("ц");
								state = 12;	// "Z";
								break;
							default:
								sb.Append("ц");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 2:	// "C"
						switch (c)
						{
							case '\'':
								sb.Append("Ц’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("Ц№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Ць");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("Ца");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("ЦА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Цб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("ЦБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("Ц");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("Ц");
								break;
							case 'd':
								sb.Append("Цд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("ЦД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Це");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("ЦЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("Цф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("ЦФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("Ц");
								state = 3;	// "g";
								break;
							case 'G':
								sb.Append("Ц");
								state = 4;	// "G";
								break;
							case 'h':
								sb.Append("Ч");
								state = 0;	// "";
								break;
							case 'H':
								sb.Append("ЦГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Цi");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("ЦI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Цй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("ЦЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Цк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("ЦК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Цл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("ЦЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("Цм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("ЦМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Цн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("ЦН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Цо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("ЦО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Цп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("ЦП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Цр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("ЦР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("Ц");
								state = 5;	// "s";
								break;
							case 'S':
								sb.Append("Ц");
								state = 6;	// "S";
								break;
							case 't':
								sb.Append("Цт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("ЦТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Цу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("ЦУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Цв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("ЦВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Цх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("ЦХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Ц");
								state = 9;	// "y";
								break;
							case 'Y':
								sb.Append("Ц");
								state = 10;	// "Y";
								break;
							case 'z':
								sb.Append("Ц");
								state = 0;	// "";
								break;
							case 'Z':
								sb.Append("Ц");
								state = 12;	// "Z";
								break;
							default:
								sb.Append("Ц");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 3:	// "g"
						switch (c)
						{
							case '\'':
								sb.Append("g’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("g№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("ґ");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("gа");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("gА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("gб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("gБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("g");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("g");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("gд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("gД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("gе");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("gЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("gф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("gФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("g");
								break;
							case 'G':
								sb.Append("g");
								state = 4;	// "G";
								break;
							case 'h':
								sb.Append("gг");
								state = 0;	// "";
								break;
							case 'H':
								sb.Append("gГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("gi");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("gI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("gй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("gЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("gк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("gК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("gл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("gЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("gм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("gМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("gн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("gН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("gо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("gО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("gп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("gП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("gр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("gР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("g");
								state = 5;	// "s";
								break;
							case 'S':
								sb.Append("g");
								state = 6;	// "S";
								break;
							case 't':
								sb.Append("gт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("gТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("gу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("gУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("gв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("gВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("gх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("gХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("g");
								state = 9;	// "y";
								break;
							case 'Y':
								sb.Append("g");
								state = 10;	// "Y";
								break;
							case 'z':
								sb.Append("g");
								state = 11;	// "z";
								break;
							case 'Z':
								sb.Append("g");
								state = 12;	// "Z";
								break;
							default:
								sb.Append("g");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 4:	// "G"
						switch (c)
						{
							case '\'':
								sb.Append("G’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("G№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Ґ");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("Gа");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("GА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Gб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("GБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("G");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("G");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("Gд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("GД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Gе");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("GЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("Gф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("GФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("G");
								state = 3;	// "g";
								break;
							case 'G':
								sb.Append("G");
								break;
							case 'h':
								sb.Append("Gг");
								state = 0;	// "";
								break;
							case 'H':
								sb.Append("GГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Gi");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("GI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Gй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("GЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Gк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("GК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Gл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("GЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("Gм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("GМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Gн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("GН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Gо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("GО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Gп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("GП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Gр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("GР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("G");
								state = 5;	// "s";
								break;
							case 'S':
								sb.Append("G");
								state = 6;	// "S";
								break;
							case 't':
								sb.Append("Gт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("GТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Gу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("GУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Gв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("GВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Gх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("GХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("G");
								state = 9;	// "y";
								break;
							case 'Y':
								sb.Append("G");
								state = 10;	// "Y";
								break;
							case 'z':
								sb.Append("G");
								state = 11;	// "z";
								break;
							case 'Z':
								sb.Append("G");
								state = 12;	// "Z";
								break;
							default:
								sb.Append("G");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 5:	// "s"
						switch (c)
						{
							case '\'':
								sb.Append("с’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("с№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("сь");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("са");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("сА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("сб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("сБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("с");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("с");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("сд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("сД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("се");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("сЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("сф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("сФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("с");
								state = 3;	// "g";
								break;
							case 'G':
								sb.Append("с");
								state = 4;	// "G";
								break;
							case 'h':
								state = 7;	// "sh";
								break;
							case 'H':
								sb.Append("сГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("сi");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("сI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("сй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("сЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("ск");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("сК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("сл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("сЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("см");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("сМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("сн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("сН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("со");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("сО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("сп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("сП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("ср");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("сР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("с");
								break;
							case 'S':
								sb.Append("с");
								state = 6;	// "S";
								break;
							case 't':
								sb.Append("ст");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("сТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("су");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("сУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("св");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("сВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("сх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("сХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("с");
								state = 9;	// "y";
								break;
							case 'Y':
								sb.Append("с");
								state = 10;	// "Y";
								break;
							case 'z':
								sb.Append("с");
								state = 11;	// "z";
								break;
							case 'Z':
								sb.Append("с");
								state = 12;	// "Z";
								break;
							default:
								sb.Append("с");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 6:	// "S"
						switch (c)
						{
							case '\'':
								sb.Append("С’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("С№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Сь");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("Са");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("СА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Сб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("СБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("С");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("С");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("Сд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("СД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Се");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("СЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("Сф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("СФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("С");
								state = 3;	// "g";
								break;
							case 'G':
								sb.Append("С");
								state = 4;	// "G";
								break;
							case 'h':
								state = 8;	// "Sh";
								break;
							case 'H':
								sb.Append("СГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Сi");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("СI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Сй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("СЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Ск");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("СК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Сл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("СЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("См");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("СМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Сн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("СН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Со");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("СО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Сп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("СП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Ср");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("СР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("С");
								state = 5;	// "s";
								break;
							case 'S':
								sb.Append("С");
								break;
							case 't':
								sb.Append("Ст");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("СТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Су");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("СУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Св");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("СВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Сх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("СХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("С");
								state = 9;	// "y";
								break;
							case 'Y':
								sb.Append("С");
								state = 10;	// "Y";
								break;
							case 'z':
								sb.Append("С");
								state = 11;	// "z";
								break;
							case 'Z':
								sb.Append("С");
								state = 12;	// "Z";
								break;
							default:
								sb.Append("С");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 7:	// "sh"
						switch (c)
						{
							case '\'':
								sb.Append("ш’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("ш№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("шь");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("ша");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("шА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("шб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("шБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("ш");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("ш");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("шд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("шД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("ше");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("шЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("шф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("шФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("ш");
								state = 3;	// "g";
								break;
							case 'G':
								sb.Append("ш");
								state = 4;	// "G";
								break;
							case 'h':
								sb.Append("щ");
								state = 0;	// "";
								break;
							case 'H':
								sb.Append("шГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("шi");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("шI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("шй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("шЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("шк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("шК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("шл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("шЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("шм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("шМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("шн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("шН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("шо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("шО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("шп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("шП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("шр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("шР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("ш");
								state = 5;	// "s";
								break;
							case 'S':
								sb.Append("ш");
								state = 6;	// "S";
								break;
							case 't':
								sb.Append("шт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("шТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("шу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("шУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("шв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("шВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("шх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("шХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("ш");
								state = 9;	// "y";
								break;
							case 'Y':
								sb.Append("ш");
								state = 10;	// "Y";
								break;
							case 'z':
								sb.Append("ш");
								state = 11;	// "z";
								break;
							case 'Z':
								sb.Append("ш");
								state = 12;	// "Z";
								break;
							default:
								sb.Append("ш");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 8:	// "Sh"
						switch (c)
						{
							case '\'':
								sb.Append("Ш’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("Ш№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Шь");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("Ша");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("ША");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Шб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("ШБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("Ш");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("Ш");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("Шд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("ШД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Ше");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("ШЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("Шф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("ШФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("Ш");
								state = 3;	// "g";
								break;
							case 'G':
								sb.Append("Ш");
								state = 4;	// "G";
								break;
							case 'h':
								sb.Append("Щ");
								state = 0;	// "";
								break;
							case 'H':
								sb.Append("ШГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Шi");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("ШI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Шй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("ШЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Шк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("ШК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Шл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("ШЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("Шм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("ШМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Шн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("ШН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Шо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("ШО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Шп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("ШП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Шр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("ШР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("Ш");
								state = 5;	// "s";
								break;
							case 'S':
								sb.Append("Ш");
								state = 6;	// "S";
								break;
							case 't':
								sb.Append("Шт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("ШТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Шу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("ШУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Шв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("ШВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Шх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("ШХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Ш");
								state = 9;	// "y";
								break;
							case 'Y':
								sb.Append("Ш");
								state = 10;	// "Y";
								break;
							case 'z':
								sb.Append("Ш");
								state = 11;	// "z";
								break;
							case 'Z':
								sb.Append("Ш");
								state = 12;	// "Z";
								break;
							default:
								sb.Append("Ш");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 9:	// "y"
						switch (c)
						{
							case '\'':
								sb.Append("y’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("y№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("и");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("я");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("yА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("yб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("yБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("y");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("y");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("yд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("yД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("є");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("yЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("yф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("yФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("y");
								state = 3;	// "g";
								break;
							case 'G':
								sb.Append("y");
								state = 4;	// "G";
								break;
							case 'h':
								sb.Append("yг");
								state = 0;	// "";
								break;
							case 'H':
								sb.Append("yГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("ї");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("yI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("yй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("yЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("yк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("yК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("yл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("yЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("yм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("yМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("yн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("yН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("yо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("yО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("yп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("yП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("yр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("yР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("y");
								state = 5;	// "s";
								break;
							case 'S':
								sb.Append("y");
								state = 6;	// "S";
								break;
							case 't':
								sb.Append("yт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("yТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("ю");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("yУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("yв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("yВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("yх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("yХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("y");
								break;
							case 'Y':
								sb.Append("y");
								state = 10;	// "Y";
								break;
							case 'z':
								sb.Append("y");
								state = 11;	// "z";
								break;
							case 'Z':
								sb.Append("y");
								state = 12;	// "Z";
								break;
							default:
								sb.Append("y");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 10:	// "Y"
						switch (c)
						{
							case '\'':
								sb.Append("Y’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("Y№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("И");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("Я");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("YА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Yб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("YБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("Y");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("Y");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("Yд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("YД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Є");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("YЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("Yф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("YФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("Y");
								state = 3;	// "g";
								break;
							case 'G':
								sb.Append("Y");
								state = 4;	// "G";
								break;
							case 'h':
								sb.Append("Yг");
								state = 0;	// "";
								break;
							case 'H':
								sb.Append("YГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Ї");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("YI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Yй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("YЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Yк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("YК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Yл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("YЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("Yм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("YМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Yн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("YН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Yо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("YО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Yп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("YП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Yр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("YР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("Y");
								state = 5;	// "s";
								break;
							case 'S':
								sb.Append("Y");
								state = 6;	// "S";
								break;
							case 't':
								sb.Append("Yт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("YТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Ю");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("YУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Yв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("YВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Yх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("YХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Y");
								state = 9;	// "y";
								break;
							case 'Y':
								sb.Append("Y");
								break;
							case 'z':
								sb.Append("Y");
								state = 11;	// "z";
								break;
							case 'Z':
								sb.Append("Y");
								state = 12;	// "Z";
								break;
							default:
								sb.Append("Y");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 11:	// "z"
						switch (c)
						{
							case '\'':
								sb.Append("з’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("з№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("зь");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("за");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("зА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("зб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("зБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("з");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("з");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("зд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("зД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("зе");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("зЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("зф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("зФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("з");
								state = 3;	// "g";
								break;
							case 'G':
								sb.Append("з");
								state = 4;	// "G";
								break;
							case 'h':
								sb.Append("ж");
								state = 0;	// "";
								break;
							case 'H':
								sb.Append("зГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("зi");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("зI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("зй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("зЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("зк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("зК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("зл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("зЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("зм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("зМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("зн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("зН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("зо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("зО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("зп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("зП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("зр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("зР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("з");
								state = 5;	// "s";
								break;
							case 'S':
								sb.Append("з");
								state = 6;	// "S";
								break;
							case 't':
								sb.Append("зт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("зТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("зу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("зУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("зв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("зВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("зх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("зХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("з");
								state = 9;	// "y";
								break;
							case 'Y':
								sb.Append("з");
								state = 10;	// "Y";
								break;
							case 'z':
								sb.Append("з");
								break;
							case 'Z':
								sb.Append("з");
								state = 12;	// "Z";
								break;
							default:
								sb.Append("з");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 12:	// "Z"
						switch (c)
						{
							case '\'':
								sb.Append("З’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("З№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Зь");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("За");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("ЗА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Зб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("ЗБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("З");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("З");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("Зд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("ЗД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Зе");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("ЗЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("Зф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("ЗФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("З");
								state = 3;	// "g";
								break;
							case 'G':
								sb.Append("З");
								state = 4;	// "G";
								break;
							case 'h':
								sb.Append("Ж");
								state = 0;	// "";
								break;
							case 'H':
								sb.Append("ЗГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Зi");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("ЗI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Зй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("ЗЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Зк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("ЗК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Зл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("ЗЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("Зм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("ЗМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Зн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("ЗН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Зо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("ЗО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Зп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("ЗП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Зр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("ЗР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("З");
								state = 5;	// "s";
								break;
							case 'S':
								sb.Append("З");
								state = 6;	// "S";
								break;
							case 't':
								sb.Append("Зт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("ЗТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Зу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("ЗУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Зв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("ЗВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Зх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("ЗХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("З");
								state = 9;	// "y";
								break;
							case 'Y':
								sb.Append("З");
								state = 10;	// "Y";
								break;
							case 'z':
								sb.Append("З");
								state = 11;	// "z";
								break;
							case 'Z':
								sb.Append("З");
								break;
							default:
								sb.Append("З");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
				}
			}

			switch (state)
			{
				case 0:	// ""
					break;				
				case 1:	// "c"
					sb.Append("ц");
					break;				
				case 2:	// "C"
					sb.Append("Ц");
					break;				
				case 3:	// "g"
					sb.Append("g");
					break;				
				case 4:	// "G"
					sb.Append("G");
					break;				
				case 5:	// "s"
					sb.Append("с");
					break;				
				case 6:	// "S"
					sb.Append("С");
					break;				
				case 7:	// "sh"
					sb.Append("ш");
					break;				
				case 8:	// "Sh"
					sb.Append("Ш");
					break;				
				case 9:	// "y"
					sb.Append("y");
					break;				
				case 10:	// "Y"
					sb.Append("Y");
					break;				
				case 11:	// "z"
					sb.Append("з");
					break;				
				case 12:	// "Z"
					sb.Append("З");
					break;				
			}
			return sb.ToString();
		}

		internal static string Cyrillic2LatinBulgarian(string text)
		{
			var sb = new StringBuilder();
			var state = 0;			
			for (var i = 0; i < text.Length; i++)
			{
				var c = text[i];
				switch (state)
				{
					case 0:	// ""
						switch (c)
						{
							case '’':
								sb.Append("\'");
								break;
							case 'i':
								sb.Append("i");
								break;
							case 'I':
								sb.Append("I");
								break;
							case '№':
								sb.Append("#");
								break;
							case 'а':
								sb.Append("a");
								break;
							case 'А':
								sb.Append("A");
								break;
							case 'б':
								sb.Append("b");
								break;
							case 'Б':
								sb.Append("B");
								break;
							case 'в':
								sb.Append("v");
								break;
							case 'В':
								sb.Append("V");
								break;
							case 'г':
								sb.Append("g");
								break;
							case 'Г':
								sb.Append("G");
								break;
							case 'д':
								sb.Append("d");
								break;
							case 'Д':
								sb.Append("D");
								break;
							case 'е':
								sb.Append("e");
								break;
							case 'Е':
								sb.Append("E");
								break;
							case 'ж':
								sb.Append("zh");
								break;
							case 'Ж':
								sb.Append("Zh");
								break;
							case 'з':
								sb.Append("z");
								break;
							case 'З':
								sb.Append("Z");
								break;
							case 'и':
								sb.Append("i");
								break;
							case 'И':
								sb.Append("I");
								break;
							case 'й':
								sb.Append("j");
								break;
							case 'Й':
								sb.Append("J");
								break;
							case 'к':
								sb.Append("k");
								break;
							case 'К':
								sb.Append("K");
								break;
							case 'л':
								sb.Append("l");
								break;
							case 'Л':
								sb.Append("L");
								break;
							case 'м':
								sb.Append("m");
								break;
							case 'М':
								sb.Append("M");
								break;
							case 'н':
								sb.Append("n");
								break;
							case 'Н':
								sb.Append("N");
								break;
							case 'о':
								sb.Append("o");
								break;
							case 'О':
								sb.Append("O");
								break;
							case 'п':
								sb.Append("p");
								break;
							case 'П':
								sb.Append("P");
								break;
							case 'р':
								sb.Append("r");
								break;
							case 'Р':
								sb.Append("R");
								break;
							case 'с':
								sb.Append("s");
								break;
							case 'С':
								sb.Append("S");
								break;
							case 'т':
								sb.Append("t");
								break;
							case 'Т':
								sb.Append("T");
								break;
							case 'у':
								sb.Append("u");
								break;
							case 'У':
								sb.Append("U");
								break;
							case 'ф':
								sb.Append("f");
								break;
							case 'Ф':
								sb.Append("F");
								break;
							case 'х':
								sb.Append("x");
								break;
							case 'Х':
								sb.Append("X");
								break;
							case 'ц':
								state = 1;	// "ц";
								break;
							case 'Ц':
								state = 2;	// "Ц";
								break;
							case 'ч':
								sb.Append("ch");
								break;
							case 'Ч':
								sb.Append("Ch");
								break;
							case 'ш':
								sb.Append("sh");
								break;
							case 'Ш':
								sb.Append("Sh");
								break;
							case 'щ':
								sb.Append("sht");
								break;
							case 'Щ':
								sb.Append("Sht");
								break;
							case 'ъ':
								sb.Append("a`");
								break;
							case 'Ъ':
								sb.Append("A`");
								break;
							case 'ь':
								sb.Append("`");
								break;
							case 'Ь':
								sb.Append("`");
								break;
							case 'ю':
								sb.Append("yu");
								break;
							case 'Ю':
								sb.Append("Yu");
								break;
							case 'я':
								sb.Append("ya");
								break;
							case 'Я':
								sb.Append("Ya");
								break;
							case 'ѣ':
								sb.Append("ye");
								break;
							case 'Ѣ':
								sb.Append("Ye");
								break;
							case 'ѫ':
								sb.Append("о`");
								break;
							case 'Ѫ':
								sb.Append("О`");
								break;
							case 'ѳ':
								sb.Append("fh");
								break;
							case 'Ѳ':
								sb.Append("Fh");
								break;
							case 'ѵ':
								sb.Append("yh");
								break;
							case 'Ѵ':
								sb.Append("Yh");
								break;
							default:
								sb.Append(c);
								break;
						}
						break;				
					case 1:	// "ц"
						switch (c)
						{
							case '’':
								sb.Append("cz\'");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("ce");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("cE");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("ci");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("cI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("cj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("cJ");
								state = 0;	// "";
								break;
							case '№':
								sb.Append("cz#");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("cy");
								state = 0;	// "";
								break;
							case 'Y':
								sb.Append("cY");
								state = 0;	// "";
								break;
							case 'а':
								sb.Append("cza");
								state = 0;	// "";
								break;
							case 'А':
								sb.Append("czA");
								state = 0;	// "";
								break;
							case 'б':
								sb.Append("czb");
								state = 0;	// "";
								break;
							case 'Б':
								sb.Append("czB");
								state = 0;	// "";
								break;
							case 'в':
								sb.Append("czv");
								state = 0;	// "";
								break;
							case 'В':
								sb.Append("czV");
								state = 0;	// "";
								break;
							case 'г':
								sb.Append("czg");
								state = 0;	// "";
								break;
							case 'Г':
								sb.Append("czG");
								state = 0;	// "";
								break;
							case 'д':
								sb.Append("czd");
								state = 0;	// "";
								break;
							case 'Д':
								sb.Append("czD");
								state = 0;	// "";
								break;
							case 'е':
								sb.Append("ce");
								state = 0;	// "";
								break;
							case 'Е':
								sb.Append("cE");
								state = 0;	// "";
								break;
							case 'ж':
								sb.Append("czzh");
								state = 0;	// "";
								break;
							case 'Ж':
								sb.Append("czZh");
								state = 0;	// "";
								break;
							case 'з':
								sb.Append("czz");
								state = 0;	// "";
								break;
							case 'З':
								sb.Append("czZ");
								state = 0;	// "";
								break;
							case 'и':
								sb.Append("ci");
								state = 0;	// "";
								break;
							case 'И':
								sb.Append("cI");
								state = 0;	// "";
								break;
							case 'й':
								sb.Append("cj");
								state = 0;	// "";
								break;
							case 'Й':
								sb.Append("cJ");
								state = 0;	// "";
								break;
							case 'к':
								sb.Append("czk");
								state = 0;	// "";
								break;
							case 'К':
								sb.Append("czK");
								state = 0;	// "";
								break;
							case 'л':
								sb.Append("czl");
								state = 0;	// "";
								break;
							case 'Л':
								sb.Append("czL");
								state = 0;	// "";
								break;
							case 'м':
								sb.Append("czm");
								state = 0;	// "";
								break;
							case 'М':
								sb.Append("czM");
								state = 0;	// "";
								break;
							case 'н':
								sb.Append("czn");
								state = 0;	// "";
								break;
							case 'Н':
								sb.Append("czN");
								state = 0;	// "";
								break;
							case 'о':
								sb.Append("czo");
								state = 0;	// "";
								break;
							case 'О':
								sb.Append("czO");
								state = 0;	// "";
								break;
							case 'п':
								sb.Append("czp");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("czP");
								state = 0;	// "";
								break;
							case 'р':
								sb.Append("czr");
								state = 0;	// "";
								break;
							case 'Р':
								sb.Append("czR");
								state = 0;	// "";
								break;
							case 'с':
								sb.Append("czs");
								state = 0;	// "";
								break;
							case 'С':
								sb.Append("czS");
								state = 0;	// "";
								break;
							case 'т':
								sb.Append("czt");
								state = 0;	// "";
								break;
							case 'Т':
								sb.Append("czT");
								state = 0;	// "";
								break;
							case 'у':
								sb.Append("czu");
								state = 0;	// "";
								break;
							case 'У':
								sb.Append("czU");
								state = 0;	// "";
								break;
							case 'ф':
								sb.Append("czf");
								state = 0;	// "";
								break;
							case 'Ф':
								sb.Append("czF");
								state = 0;	// "";
								break;
							case 'х':
								sb.Append("czx");
								state = 0;	// "";
								break;
							case 'Х':
								sb.Append("czX");
								state = 0;	// "";
								break;
							case 'ц':
								sb.Append("cz");
								break;
							case 'Ц':
								sb.Append("cz");
								state = 2;	// "Ц";
								break;
							case 'ч':
								sb.Append("czch");
								state = 0;	// "";
								break;
							case 'Ч':
								sb.Append("czCh");
								state = 0;	// "";
								break;
							case 'ш':
								sb.Append("czsh");
								state = 0;	// "";
								break;
							case 'Ш':
								sb.Append("czSh");
								state = 0;	// "";
								break;
							case 'щ':
								sb.Append("czsht");
								state = 0;	// "";
								break;
							case 'Щ':
								sb.Append("czSht");
								state = 0;	// "";
								break;
							case 'ъ':
								sb.Append("cza`");
								state = 0;	// "";
								break;
							case 'Ъ':
								sb.Append("czA`");
								state = 0;	// "";
								break;
							case 'ь':
								sb.Append("cz`");
								state = 0;	// "";
								break;
							case 'Ь':
								sb.Append("cz`");
								state = 0;	// "";
								break;
							case 'ю':
								sb.Append("cyu");
								state = 0;	// "";
								break;
							case 'Ю':
								sb.Append("cYu");
								state = 0;	// "";
								break;
							case 'я':
								sb.Append("cya");
								state = 0;	// "";
								break;
							case 'Я':
								sb.Append("cYa");
								state = 0;	// "";
								break;
							case 'ѣ':
								sb.Append("cye");
								state = 0;	// "";
								break;
							case 'Ѣ':
								sb.Append("cYe");
								state = 0;	// "";
								break;
							case 'ѫ':
								sb.Append("czо`");
								state = 0;	// "";
								break;
							case 'Ѫ':
								sb.Append("czО`");
								state = 0;	// "";
								break;
							case 'ѳ':
								sb.Append("czfh");
								state = 0;	// "";
								break;
							case 'Ѳ':
								sb.Append("czFh");
								state = 0;	// "";
								break;
							case 'ѵ':
								sb.Append("cyh");
								state = 0;	// "";
								break;
							case 'Ѵ':
								sb.Append("cYh");
								state = 0;	// "";
								break;
							default:
								sb.Append("cz");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 2:	// "Ц"
						switch (c)
						{
							case '’':
								sb.Append("Cz\'");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Ce");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("CE");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Ci");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("CI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Cj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("CJ");
								state = 0;	// "";
								break;
							case '№':
								sb.Append("Cz#");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Cy");
								state = 0;	// "";
								break;
							case 'Y':
								sb.Append("CY");
								state = 0;	// "";
								break;
							case 'а':
								sb.Append("Cza");
								state = 0;	// "";
								break;
							case 'А':
								sb.Append("CzA");
								state = 0;	// "";
								break;
							case 'б':
								sb.Append("Czb");
								state = 0;	// "";
								break;
							case 'Б':
								sb.Append("CzB");
								state = 0;	// "";
								break;
							case 'в':
								sb.Append("Czv");
								state = 0;	// "";
								break;
							case 'В':
								sb.Append("CzV");
								state = 0;	// "";
								break;
							case 'г':
								sb.Append("Czg");
								state = 0;	// "";
								break;
							case 'Г':
								sb.Append("CzG");
								state = 0;	// "";
								break;
							case 'д':
								sb.Append("Czd");
								state = 0;	// "";
								break;
							case 'Д':
								sb.Append("CzD");
								state = 0;	// "";
								break;
							case 'е':
								sb.Append("Ce");
								state = 0;	// "";
								break;
							case 'Е':
								sb.Append("CE");
								state = 0;	// "";
								break;
							case 'ж':
								sb.Append("Czzh");
								state = 0;	// "";
								break;
							case 'Ж':
								sb.Append("CzZh");
								state = 0;	// "";
								break;
							case 'з':
								sb.Append("Czz");
								state = 0;	// "";
								break;
							case 'З':
								sb.Append("CzZ");
								state = 0;	// "";
								break;
							case 'и':
								sb.Append("Ci");
								state = 0;	// "";
								break;
							case 'И':
								sb.Append("CI");
								state = 0;	// "";
								break;
							case 'й':
								sb.Append("Cj");
								state = 0;	// "";
								break;
							case 'Й':
								sb.Append("CJ");
								state = 0;	// "";
								break;
							case 'к':
								sb.Append("Czk");
								state = 0;	// "";
								break;
							case 'К':
								sb.Append("CzK");
								state = 0;	// "";
								break;
							case 'л':
								sb.Append("Czl");
								state = 0;	// "";
								break;
							case 'Л':
								sb.Append("CzL");
								state = 0;	// "";
								break;
							case 'м':
								sb.Append("Czm");
								state = 0;	// "";
								break;
							case 'М':
								sb.Append("CzM");
								state = 0;	// "";
								break;
							case 'н':
								sb.Append("Czn");
								state = 0;	// "";
								break;
							case 'Н':
								sb.Append("CzN");
								state = 0;	// "";
								break;
							case 'о':
								sb.Append("Czo");
								state = 0;	// "";
								break;
							case 'О':
								sb.Append("CzO");
								state = 0;	// "";
								break;
							case 'п':
								sb.Append("Czp");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("CzP");
								state = 0;	// "";
								break;
							case 'р':
								sb.Append("Czr");
								state = 0;	// "";
								break;
							case 'Р':
								sb.Append("CzR");
								state = 0;	// "";
								break;
							case 'с':
								sb.Append("Czs");
								state = 0;	// "";
								break;
							case 'С':
								sb.Append("CzS");
								state = 0;	// "";
								break;
							case 'т':
								sb.Append("Czt");
								state = 0;	// "";
								break;
							case 'Т':
								sb.Append("CzT");
								state = 0;	// "";
								break;
							case 'у':
								sb.Append("Czu");
								state = 0;	// "";
								break;
							case 'У':
								sb.Append("CzU");
								state = 0;	// "";
								break;
							case 'ф':
								sb.Append("Czf");
								state = 0;	// "";
								break;
							case 'Ф':
								sb.Append("CzF");
								state = 0;	// "";
								break;
							case 'х':
								sb.Append("Czx");
								state = 0;	// "";
								break;
							case 'Х':
								sb.Append("CzX");
								state = 0;	// "";
								break;
							case 'ц':
								sb.Append("Cz");
								state = 1;	// "ц";
								break;
							case 'Ц':
								sb.Append("Cz");
								break;
							case 'ч':
								sb.Append("Czch");
								state = 0;	// "";
								break;
							case 'Ч':
								sb.Append("CzCh");
								state = 0;	// "";
								break;
							case 'ш':
								sb.Append("Czsh");
								state = 0;	// "";
								break;
							case 'Ш':
								sb.Append("CzSh");
								state = 0;	// "";
								break;
							case 'щ':
								sb.Append("Czsht");
								state = 0;	// "";
								break;
							case 'Щ':
								sb.Append("CzSht");
								state = 0;	// "";
								break;
							case 'ъ':
								sb.Append("Cza`");
								state = 0;	// "";
								break;
							case 'Ъ':
								sb.Append("CzA`");
								state = 0;	// "";
								break;
							case 'ь':
								sb.Append("Cz`");
								state = 0;	// "";
								break;
							case 'Ь':
								sb.Append("Cz`");
								state = 0;	// "";
								break;
							case 'ю':
								sb.Append("Cyu");
								state = 0;	// "";
								break;
							case 'Ю':
								sb.Append("CYu");
								state = 0;	// "";
								break;
							case 'я':
								sb.Append("Cya");
								state = 0;	// "";
								break;
							case 'Я':
								sb.Append("CYa");
								state = 0;	// "";
								break;
							case 'ѣ':
								sb.Append("Cye");
								state = 0;	// "";
								break;
							case 'Ѣ':
								sb.Append("CYe");
								state = 0;	// "";
								break;
							case 'ѫ':
								sb.Append("Czо`");
								state = 0;	// "";
								break;
							case 'Ѫ':
								sb.Append("CzО`");
								state = 0;	// "";
								break;
							case 'ѳ':
								sb.Append("Czfh");
								state = 0;	// "";
								break;
							case 'Ѳ':
								sb.Append("CzFh");
								state = 0;	// "";
								break;
							case 'ѵ':
								sb.Append("Cyh");
								state = 0;	// "";
								break;
							case 'Ѵ':
								sb.Append("CYh");
								state = 0;	// "";
								break;
							default:
								sb.Append("Cz");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
				}
			}

			switch (state)
			{
				case 0:	// ""
					break;				
				case 1:	// "ц"
					sb.Append("cz");
					break;				
				case 2:	// "Ц"
					sb.Append("Cz");
					break;				
			}
			return sb.ToString();
		}

        internal static string Latin2CyrillicBulgarian(string text)
		{
			var sb = new StringBuilder(text.Length);
			var state = 0;			
			for (var i = 0; i < text.Length; i++)
			{
				var c = text[i];
				switch (state)
				{
					case 0:	// ""
						switch (c)
						{
							case '\'':
								sb.Append("’");
								break;
							case '#':
								sb.Append("№");
								break;
							case '`':
								sb.Append("ь");
								break;
							case 'a':
								state = 1;	// "a";
								break;
							case 'A':
								state = 2;	// "A";
								break;
							case 'b':
								sb.Append("б");
								break;
							case 'B':
								sb.Append("Б");
								break;
							case 'c':
								state = 3;	// "c";
								break;
							case 'C':
								state = 4;	// "C";
								break;
							case 'd':
								sb.Append("д");
								break;
							case 'D':
								sb.Append("Д");
								break;
							case 'e':
								sb.Append("е");
								break;
							case 'E':
								sb.Append("Е");
								break;
							case 'f':
								state = 5;	// "f";
								break;
							case 'F':
								state = 6;	// "F";
								break;
							case 'g':
								sb.Append("г");
								break;
							case 'G':
								sb.Append("Г");
								break;
							case 'i':
								sb.Append("и");
								break;
							case 'I':
								sb.Append("И");
								break;
							case 'j':
								sb.Append("й");
								break;
							case 'J':
								sb.Append("Й");
								break;
							case 'k':
								sb.Append("к");
								break;
							case 'K':
								sb.Append("К");
								break;
							case 'l':
								sb.Append("л");
								break;
							case 'L':
								sb.Append("Л");
								break;
							case 'm':
								sb.Append("м");
								break;
							case 'M':
								sb.Append("М");
								break;
							case 'n':
								sb.Append("н");
								break;
							case 'N':
								sb.Append("Н");
								break;
							case 'o':
								sb.Append("о");
								break;
							case 'O':
								sb.Append("О");
								break;
							case 'p':
								sb.Append("п");
								break;
							case 'P':
								sb.Append("П");
								break;
							case 'r':
								sb.Append("р");
								break;
							case 'R':
								sb.Append("Р");
								break;
							case 's':
								state = 7;	// "s";
								break;
							case 'S':
								state = 8;	// "S";
								break;
							case 't':
								sb.Append("т");
								break;
							case 'T':
								sb.Append("Т");
								break;
							case 'u':
								sb.Append("у");
								break;
							case 'U':
								sb.Append("У");
								break;
							case 'v':
								sb.Append("в");
								break;
							case 'V':
								sb.Append("В");
								break;
							case 'x':
								sb.Append("х");
								break;
							case 'X':
								sb.Append("Х");
								break;
							case 'y':
								state = 11;	// "y";
								break;
							case 'Y':
								state = 12;	// "Y";
								break;
							case 'z':
								state = 13;	// "z";
								break;
							case 'Z':
								state = 14;	// "Z";
								break;
							case 'о':
								state = 15;	// "о";
								break;
							case 'О':
								state = 16;	// "О";
								break;
							default:
								sb.Append(c);
								break;
						}
						break;				
					case 1:	// "a"
						switch (c)
						{
							case '\'':
								sb.Append("а’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("а№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("ъ");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("а");
								break;
							case 'A':
								sb.Append("а");
								state = 2;	// "A";
								break;
							case 'b':
								sb.Append("аб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("аБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("а");
								state = 3;	// "c";
								break;
							case 'C':
								sb.Append("а");
								state = 4;	// "C";
								break;
							case 'd':
								sb.Append("ад");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("аД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("ае");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("аЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("а");
								state = 5;	// "f";
								break;
							case 'F':
								sb.Append("а");
								state = 6;	// "F";
								break;
							case 'g':
								sb.Append("аг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("аГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("аи");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("аИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("ай");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("аЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("ак");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("аК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("ал");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("аЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("ам");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("аМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("ан");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("аН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("ао");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("аО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("ап");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("аП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("ар");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("аР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("а");
								state = 7;	// "s";
								break;
							case 'S':
								sb.Append("а");
								state = 8;	// "S";
								break;
							case 't':
								sb.Append("ат");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("аТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("ау");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("аУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("ав");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("аВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("ах");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("аХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("а");
								state = 11;	// "y";
								break;
							case 'Y':
								sb.Append("а");
								state = 12;	// "Y";
								break;
							case 'z':
								sb.Append("а");
								state = 13;	// "z";
								break;
							case 'Z':
								sb.Append("а");
								state = 14;	// "Z";
								break;
							case 'о':
								sb.Append("а");
								state = 15;	// "о";
								break;
							case 'О':
								sb.Append("а");
								state = 16;	// "О";
								break;
							default:
								sb.Append("а");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 2:	// "A"
						switch (c)
						{
							case '\'':
								sb.Append("А’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("А№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Ъ");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("А");
								state = 1;	// "a";
								break;
							case 'A':
								sb.Append("А");
								break;
							case 'b':
								sb.Append("Аб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("АБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("А");
								state = 3;	// "c";
								break;
							case 'C':
								sb.Append("А");
								state = 4;	// "C";
								break;
							case 'd':
								sb.Append("Ад");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("АД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Ае");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("АЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("А");
								state = 5;	// "f";
								break;
							case 'F':
								sb.Append("А");
								state = 6;	// "F";
								break;
							case 'g':
								sb.Append("Аг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("АГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Аи");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("АИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Ай");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("АЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Ак");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("АК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Ал");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("АЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("Ам");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("АМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Ан");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("АН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Ао");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("АО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Ап");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("АП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Ар");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("АР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("А");
								state = 7;	// "s";
								break;
							case 'S':
								sb.Append("А");
								state = 8;	// "S";
								break;
							case 't':
								sb.Append("Ат");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("АТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Ау");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("АУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Ав");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("АВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Ах");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("АХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("А");
								state = 11;	// "y";
								break;
							case 'Y':
								sb.Append("А");
								state = 12;	// "Y";
								break;
							case 'z':
								sb.Append("А");
								state = 13;	// "z";
								break;
							case 'Z':
								sb.Append("А");
								state = 14;	// "Z";
								break;
							case 'о':
								sb.Append("А");
								state = 15;	// "о";
								break;
							case 'О':
								sb.Append("А");
								state = 16;	// "О";
								break;
							default:
								sb.Append("А");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 3:	// "c"
						switch (c)
						{
							case '\'':
								sb.Append("ц’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("ц№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("ць");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("ц");
								state = 1;	// "a";
								break;
							case 'A':
								sb.Append("ц");
								state = 2;	// "A";
								break;
							case 'b':
								sb.Append("цб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("цБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("ц");
								break;
							case 'C':
								sb.Append("ц");
								state = 4;	// "C";
								break;
							case 'd':
								sb.Append("цд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("цД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("це");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("цЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("ц");
								state = 5;	// "f";
								break;
							case 'F':
								sb.Append("ц");
								state = 6;	// "F";
								break;
							case 'g':
								sb.Append("цг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("цГ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("ч");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("ци");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("цИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("цй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("цЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("цк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("цК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("цл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("цЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("цм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("цМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("цн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("цН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("цо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("цО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("цп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("цП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("цр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("цР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("ц");
								state = 7;	// "s";
								break;
							case 'S':
								sb.Append("ц");
								state = 8;	// "S";
								break;
							case 't':
								sb.Append("цт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("цТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("цу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("цУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("цв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("цВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("цх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("цХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("ц");
								state = 11;	// "y";
								break;
							case 'Y':
								sb.Append("ц");
								state = 12;	// "Y";
								break;
							case 'z':
								sb.Append("ц");
								state = 0;	// "";
								break;
							case 'Z':
								sb.Append("ц");
								state = 14;	// "Z";
								break;
							case 'о':
								sb.Append("ц");
								state = 15;	// "о";
								break;
							case 'О':
								sb.Append("ц");
								state = 16;	// "О";
								break;
							default:
								sb.Append("ц");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 4:	// "C"
						switch (c)
						{
							case '\'':
								sb.Append("Ц’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("Ц№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Ць");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("Ц");
								state = 1;	// "a";
								break;
							case 'A':
								sb.Append("Ц");
								state = 2;	// "A";
								break;
							case 'b':
								sb.Append("Цб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("ЦБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("Ц");
								state = 3;	// "c";
								break;
							case 'C':
								sb.Append("Ц");
								break;
							case 'd':
								sb.Append("Цд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("ЦД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Це");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("ЦЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("Ц");
								state = 5;	// "f";
								break;
							case 'F':
								sb.Append("Ц");
								state = 6;	// "F";
								break;
							case 'g':
								sb.Append("Цг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("ЦГ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("Ч");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Ци");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("ЦИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Цй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("ЦЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Цк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("ЦК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Цл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("ЦЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("Цм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("ЦМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Цн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("ЦН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Цо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("ЦО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Цп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("ЦП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Цр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("ЦР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("Ц");
								state = 7;	// "s";
								break;
							case 'S':
								sb.Append("Ц");
								state = 8;	// "S";
								break;
							case 't':
								sb.Append("Цт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("ЦТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Цу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("ЦУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Цв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("ЦВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Цх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("ЦХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Ц");
								state = 11;	// "y";
								break;
							case 'Y':
								sb.Append("Ц");
								state = 12;	// "Y";
								break;
							case 'z':
								sb.Append("Ц");
								state = 0;	// "";
								break;
							case 'Z':
								sb.Append("Ц");
								state = 14;	// "Z";
								break;
							case 'о':
								sb.Append("Ц");
								state = 15;	// "о";
								break;
							case 'О':
								sb.Append("Ц");
								state = 16;	// "О";
								break;
							default:
								sb.Append("Ц");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 5:	// "f"
						switch (c)
						{
							case '\'':
								sb.Append("ф’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("ф№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("фь");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("ф");
								state = 1;	// "a";
								break;
							case 'A':
								sb.Append("ф");
								state = 2;	// "A";
								break;
							case 'b':
								sb.Append("фб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("фБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("ф");
								state = 3;	// "c";
								break;
							case 'C':
								sb.Append("ф");
								state = 4;	// "C";
								break;
							case 'd':
								sb.Append("фд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("фД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("фе");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("фЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("ф");
								break;
							case 'F':
								sb.Append("ф");
								state = 6;	// "F";
								break;
							case 'g':
								sb.Append("фг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("фГ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("ѳ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("фи");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("фИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("фй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("фЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("фк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("фК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("фл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("фЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("фм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("фМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("фн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("фН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("фо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("фО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("фп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("фП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("фр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("фР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("ф");
								state = 7;	// "s";
								break;
							case 'S':
								sb.Append("ф");
								state = 8;	// "S";
								break;
							case 't':
								sb.Append("фт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("фТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("фу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("фУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("фв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("фВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("фх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("фХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("ф");
								state = 11;	// "y";
								break;
							case 'Y':
								sb.Append("ф");
								state = 12;	// "Y";
								break;
							case 'z':
								sb.Append("ф");
								state = 13;	// "z";
								break;
							case 'Z':
								sb.Append("ф");
								state = 14;	// "Z";
								break;
							case 'о':
								sb.Append("ф");
								state = 15;	// "о";
								break;
							case 'О':
								sb.Append("ф");
								state = 16;	// "О";
								break;
							default:
								sb.Append("ф");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 6:	// "F"
						switch (c)
						{
							case '\'':
								sb.Append("Ф’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("Ф№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Фь");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("Ф");
								state = 1;	// "a";
								break;
							case 'A':
								sb.Append("Ф");
								state = 2;	// "A";
								break;
							case 'b':
								sb.Append("Фб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("ФБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("Ф");
								state = 3;	// "c";
								break;
							case 'C':
								sb.Append("Ф");
								state = 4;	// "C";
								break;
							case 'd':
								sb.Append("Фд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("ФД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Фе");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("ФЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("Ф");
								state = 5;	// "f";
								break;
							case 'F':
								sb.Append("Ф");
								break;
							case 'g':
								sb.Append("Фг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("ФГ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("Ѳ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Фи");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("ФИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Фй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("ФЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Фк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("ФК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Фл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("ФЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("Фм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("ФМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Фн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("ФН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Фо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("ФО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Фп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("ФП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Фр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("ФР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("Ф");
								state = 7;	// "s";
								break;
							case 'S':
								sb.Append("Ф");
								state = 8;	// "S";
								break;
							case 't':
								sb.Append("Фт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("ФТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Фу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("ФУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Фв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("ФВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Фх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("ФХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Ф");
								state = 11;	// "y";
								break;
							case 'Y':
								sb.Append("Ф");
								state = 12;	// "Y";
								break;
							case 'z':
								sb.Append("Ф");
								state = 13;	// "z";
								break;
							case 'Z':
								sb.Append("Ф");
								state = 14;	// "Z";
								break;
							case 'о':
								sb.Append("Ф");
								state = 15;	// "о";
								break;
							case 'О':
								sb.Append("Ф");
								state = 16;	// "О";
								break;
							default:
								sb.Append("Ф");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 7:	// "s"
						switch (c)
						{
							case '\'':
								sb.Append("с’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("с№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("сь");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("с");
								state = 1;	// "a";
								break;
							case 'A':
								sb.Append("с");
								state = 2;	// "A";
								break;
							case 'b':
								sb.Append("сб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("сБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("с");
								state = 3;	// "c";
								break;
							case 'C':
								sb.Append("с");
								state = 4;	// "C";
								break;
							case 'd':
								sb.Append("сд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("сД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("се");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("сЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("с");
								state = 5;	// "f";
								break;
							case 'F':
								sb.Append("с");
								state = 6;	// "F";
								break;
							case 'g':
								sb.Append("сг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("сГ");
								state = 0;	// "";
								break;
							case 'h':
								state = 9;	// "sh";
								break;
							case 'i':
								sb.Append("си");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("сИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("сй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("сЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("ск");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("сК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("сл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("сЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("см");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("сМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("сн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("сН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("со");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("сО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("сп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("сП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("ср");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("сР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("с");
								break;
							case 'S':
								sb.Append("с");
								state = 8;	// "S";
								break;
							case 't':
								sb.Append("ст");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("сТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("су");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("сУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("св");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("сВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("сх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("сХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("с");
								state = 11;	// "y";
								break;
							case 'Y':
								sb.Append("с");
								state = 12;	// "Y";
								break;
							case 'z':
								sb.Append("с");
								state = 13;	// "z";
								break;
							case 'Z':
								sb.Append("с");
								state = 14;	// "Z";
								break;
							case 'о':
								sb.Append("с");
								state = 15;	// "о";
								break;
							case 'О':
								sb.Append("с");
								state = 16;	// "О";
								break;
							default:
								sb.Append("с");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 8:	// "S"
						switch (c)
						{
							case '\'':
								sb.Append("С’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("С№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Сь");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("С");
								state = 1;	// "a";
								break;
							case 'A':
								sb.Append("С");
								state = 2;	// "A";
								break;
							case 'b':
								sb.Append("Сб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("СБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("С");
								state = 3;	// "c";
								break;
							case 'C':
								sb.Append("С");
								state = 4;	// "C";
								break;
							case 'd':
								sb.Append("Сд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("СД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Се");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("СЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("С");
								state = 5;	// "f";
								break;
							case 'F':
								sb.Append("С");
								state = 6;	// "F";
								break;
							case 'g':
								sb.Append("Сг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("СГ");
								state = 0;	// "";
								break;
							case 'h':
								state = 10;	// "Sh";
								break;
							case 'i':
								sb.Append("Си");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("СИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Сй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("СЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Ск");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("СК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Сл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("СЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("См");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("СМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Сн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("СН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Со");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("СО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Сп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("СП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Ср");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("СР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("С");
								state = 7;	// "s";
								break;
							case 'S':
								sb.Append("С");
								break;
							case 't':
								sb.Append("Ст");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("СТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Су");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("СУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Св");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("СВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Сх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("СХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("С");
								state = 11;	// "y";
								break;
							case 'Y':
								sb.Append("С");
								state = 12;	// "Y";
								break;
							case 'z':
								sb.Append("С");
								state = 13;	// "z";
								break;
							case 'Z':
								sb.Append("С");
								state = 14;	// "Z";
								break;
							case 'о':
								sb.Append("С");
								state = 15;	// "о";
								break;
							case 'О':
								sb.Append("С");
								state = 16;	// "О";
								break;
							default:
								sb.Append("С");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 9:	// "sh"
						switch (c)
						{
							case '\'':
								sb.Append("ш’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("ш№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("шь");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("ш");
								state = 1;	// "a";
								break;
							case 'A':
								sb.Append("ш");
								state = 2;	// "A";
								break;
							case 'b':
								sb.Append("шб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("шБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("ш");
								state = 3;	// "c";
								break;
							case 'C':
								sb.Append("ш");
								state = 4;	// "C";
								break;
							case 'd':
								sb.Append("шд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("шД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("ше");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("шЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("ш");
								state = 5;	// "f";
								break;
							case 'F':
								sb.Append("ш");
								state = 6;	// "F";
								break;
							case 'g':
								sb.Append("шг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("шГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("ши");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("шИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("шй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("шЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("шк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("шК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("шл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("шЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("шм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("шМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("шн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("шН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("шо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("шО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("шп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("шП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("шр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("шР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("ш");
								state = 7;	// "s";
								break;
							case 'S':
								sb.Append("ш");
								state = 8;	// "S";
								break;
							case 't':
								sb.Append("щ");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("шТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("шу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("шУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("шв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("шВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("шх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("шХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("ш");
								state = 11;	// "y";
								break;
							case 'Y':
								sb.Append("ш");
								state = 12;	// "Y";
								break;
							case 'z':
								sb.Append("ш");
								state = 13;	// "z";
								break;
							case 'Z':
								sb.Append("ш");
								state = 14;	// "Z";
								break;
							case 'о':
								sb.Append("ш");
								state = 15;	// "о";
								break;
							case 'О':
								sb.Append("ш");
								state = 16;	// "О";
								break;
							default:
								sb.Append("ш");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 10:	// "Sh"
						switch (c)
						{
							case '\'':
								sb.Append("Ш’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("Ш№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Шь");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("Ш");
								state = 1;	// "a";
								break;
							case 'A':
								sb.Append("Ш");
								state = 2;	// "A";
								break;
							case 'b':
								sb.Append("Шб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("ШБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("Ш");
								state = 3;	// "c";
								break;
							case 'C':
								sb.Append("Ш");
								state = 4;	// "C";
								break;
							case 'd':
								sb.Append("Шд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("ШД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Ше");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("ШЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("Ш");
								state = 5;	// "f";
								break;
							case 'F':
								sb.Append("Ш");
								state = 6;	// "F";
								break;
							case 'g':
								sb.Append("Шг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("ШГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Ши");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("ШИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Шй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("ШЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Шк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("ШК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Шл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("ШЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("Шм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("ШМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Шн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("ШН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Шо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("ШО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Шп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("ШП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Шр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("ШР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("Ш");
								state = 7;	// "s";
								break;
							case 'S':
								sb.Append("Ш");
								state = 8;	// "S";
								break;
							case 't':
								sb.Append("Щ");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("ШТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Шу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("ШУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Шв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("ШВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Шх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("ШХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Ш");
								state = 11;	// "y";
								break;
							case 'Y':
								sb.Append("Ш");
								state = 12;	// "Y";
								break;
							case 'z':
								sb.Append("Ш");
								state = 13;	// "z";
								break;
							case 'Z':
								sb.Append("Ш");
								state = 14;	// "Z";
								break;
							case 'о':
								sb.Append("Ш");
								state = 15;	// "о";
								break;
							case 'О':
								sb.Append("Ш");
								state = 16;	// "О";
								break;
							default:
								sb.Append("Ш");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 11:	// "y"
						switch (c)
						{
							case '\'':
								sb.Append("y’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("y№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("yь");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("я");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("y");
								state = 2;	// "A";
								break;
							case 'b':
								sb.Append("yб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("yБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("y");
								state = 3;	// "c";
								break;
							case 'C':
								sb.Append("y");
								state = 4;	// "C";
								break;
							case 'd':
								sb.Append("yд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("yД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("ѣ");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("yЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("y");
								state = 5;	// "f";
								break;
							case 'F':
								sb.Append("y");
								state = 6;	// "F";
								break;
							case 'g':
								sb.Append("yг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("yГ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("ѵ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("yи");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("yИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("yй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("yЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("yк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("yК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("yл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("yЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("yм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("yМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("yн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("yН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("yо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("yО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("yп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("yП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("yр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("yР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("y");
								state = 7;	// "s";
								break;
							case 'S':
								sb.Append("y");
								state = 8;	// "S";
								break;
							case 't':
								sb.Append("yт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("yТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("ю");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("yУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("yв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("yВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("yх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("yХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("y");
								break;
							case 'Y':
								sb.Append("y");
								state = 12;	// "Y";
								break;
							case 'z':
								sb.Append("y");
								state = 13;	// "z";
								break;
							case 'Z':
								sb.Append("y");
								state = 14;	// "Z";
								break;
							case 'о':
								sb.Append("y");
								state = 15;	// "о";
								break;
							case 'О':
								sb.Append("y");
								state = 16;	// "О";
								break;
							default:
								sb.Append("y");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 12:	// "Y"
						switch (c)
						{
							case '\'':
								sb.Append("Y’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("Y№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Yь");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("Я");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("Y");
								state = 2;	// "A";
								break;
							case 'b':
								sb.Append("Yб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("YБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("Y");
								state = 3;	// "c";
								break;
							case 'C':
								sb.Append("Y");
								state = 4;	// "C";
								break;
							case 'd':
								sb.Append("Yд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("YД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Ѣ");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("YЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("Y");
								state = 5;	// "f";
								break;
							case 'F':
								sb.Append("Y");
								state = 6;	// "F";
								break;
							case 'g':
								sb.Append("Yг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("YГ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("Ѵ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Yи");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("YИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Yй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("YЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Yк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("YК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Yл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("YЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("Yм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("YМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Yн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("YН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Yо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("YО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Yп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("YП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Yр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("YР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("Y");
								state = 7;	// "s";
								break;
							case 'S':
								sb.Append("Y");
								state = 8;	// "S";
								break;
							case 't':
								sb.Append("Yт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("YТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Ю");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("YУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Yв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("YВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Yх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("YХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Y");
								state = 11;	// "y";
								break;
							case 'Y':
								sb.Append("Y");
								break;
							case 'z':
								sb.Append("Y");
								state = 13;	// "z";
								break;
							case 'Z':
								sb.Append("Y");
								state = 14;	// "Z";
								break;
							case 'о':
								sb.Append("Y");
								state = 15;	// "о";
								break;
							case 'О':
								sb.Append("Y");
								state = 16;	// "О";
								break;
							default:
								sb.Append("Y");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 13:	// "z"
						switch (c)
						{
							case '\'':
								sb.Append("з’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("з№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("зь");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("з");
								state = 1;	// "a";
								break;
							case 'A':
								sb.Append("з");
								state = 2;	// "A";
								break;
							case 'b':
								sb.Append("зб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("зБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("з");
								state = 3;	// "c";
								break;
							case 'C':
								sb.Append("з");
								state = 4;	// "C";
								break;
							case 'd':
								sb.Append("зд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("зД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("зе");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("зЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("з");
								state = 5;	// "f";
								break;
							case 'F':
								sb.Append("з");
								state = 6;	// "F";
								break;
							case 'g':
								sb.Append("зг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("зГ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("ж");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("зи");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("зИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("зй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("зЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("зк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("зК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("зл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("зЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("зм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("зМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("зн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("зН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("зо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("зО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("зп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("зП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("зр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("зР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("з");
								state = 7;	// "s";
								break;
							case 'S':
								sb.Append("з");
								state = 8;	// "S";
								break;
							case 't':
								sb.Append("зт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("зТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("зу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("зУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("зв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("зВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("зх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("зХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("з");
								state = 11;	// "y";
								break;
							case 'Y':
								sb.Append("з");
								state = 12;	// "Y";
								break;
							case 'z':
								sb.Append("з");
								break;
							case 'Z':
								sb.Append("з");
								state = 14;	// "Z";
								break;
							case 'о':
								sb.Append("з");
								state = 15;	// "о";
								break;
							case 'О':
								sb.Append("з");
								state = 16;	// "О";
								break;
							default:
								sb.Append("з");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 14:	// "Z"
						switch (c)
						{
							case '\'':
								sb.Append("З’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("З№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Зь");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("З");
								state = 1;	// "a";
								break;
							case 'A':
								sb.Append("З");
								state = 2;	// "A";
								break;
							case 'b':
								sb.Append("Зб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("ЗБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("З");
								state = 3;	// "c";
								break;
							case 'C':
								sb.Append("З");
								state = 4;	// "C";
								break;
							case 'd':
								sb.Append("Зд");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("ЗД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Зе");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("ЗЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("З");
								state = 5;	// "f";
								break;
							case 'F':
								sb.Append("З");
								state = 6;	// "F";
								break;
							case 'g':
								sb.Append("Зг");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("ЗГ");
								state = 0;	// "";
								break;
							case 'h':
								sb.Append("Ж");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Зи");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("ЗИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Зй");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("ЗЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Зк");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("ЗК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Зл");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("ЗЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("Зм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("ЗМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Зн");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("ЗН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Зо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("ЗО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Зп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("ЗП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Зр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("ЗР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("З");
								state = 7;	// "s";
								break;
							case 'S':
								sb.Append("З");
								state = 8;	// "S";
								break;
							case 't':
								sb.Append("Зт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("ЗТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Зу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("ЗУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Зв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("ЗВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Зх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("ЗХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("З");
								state = 11;	// "y";
								break;
							case 'Y':
								sb.Append("З");
								state = 12;	// "Y";
								break;
							case 'z':
								sb.Append("З");
								state = 13;	// "z";
								break;
							case 'Z':
								sb.Append("З");
								break;
							case 'о':
								sb.Append("З");
								state = 15;	// "о";
								break;
							case 'О':
								sb.Append("З");
								state = 16;	// "О";
								break;
							default:
								sb.Append("З");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 15:	// "о"
						switch (c)
						{
							case '\'':
								sb.Append("о’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("о№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("ѫ");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("о");
								state = 1;	// "a";
								break;
							case 'A':
								sb.Append("о");
								state = 2;	// "A";
								break;
							case 'b':
								sb.Append("об");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("оБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("о");
								state = 3;	// "c";
								break;
							case 'C':
								sb.Append("о");
								state = 4;	// "C";
								break;
							case 'd':
								sb.Append("од");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("оД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("ое");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("оЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("о");
								state = 5;	// "f";
								break;
							case 'F':
								sb.Append("о");
								state = 6;	// "F";
								break;
							case 'g':
								sb.Append("ог");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("оГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("ои");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("оИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("ой");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("оЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("ок");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("оК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("ол");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("оЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("ом");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("оМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("он");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("оН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("оо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("оО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("оп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("оП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("ор");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("оР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("о");
								state = 7;	// "s";
								break;
							case 'S':
								sb.Append("о");
								state = 8;	// "S";
								break;
							case 't':
								sb.Append("от");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("оТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("оу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("оУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("ов");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("оВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("ох");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("оХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("о");
								state = 11;	// "y";
								break;
							case 'Y':
								sb.Append("о");
								state = 12;	// "Y";
								break;
							case 'z':
								sb.Append("о");
								state = 13;	// "z";
								break;
							case 'Z':
								sb.Append("о");
								state = 14;	// "Z";
								break;
							case 'о':
								sb.Append("о");
								break;
							case 'О':
								sb.Append("о");
								state = 16;	// "О";
								break;
							default:
								sb.Append("о");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 16:	// "О"
						switch (c)
						{
							case '\'':
								sb.Append("О’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("О№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Ѫ");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("О");
								state = 1;	// "a";
								break;
							case 'A':
								sb.Append("О");
								state = 2;	// "A";
								break;
							case 'b':
								sb.Append("Об");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("ОБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("О");
								state = 3;	// "c";
								break;
							case 'C':
								sb.Append("О");
								state = 4;	// "C";
								break;
							case 'd':
								sb.Append("Од");
								state = 0;	// "";
								break;
							case 'D':
								sb.Append("ОД");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Ое");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("ОЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("О");
								state = 5;	// "f";
								break;
							case 'F':
								sb.Append("О");
								state = 6;	// "F";
								break;
							case 'g':
								sb.Append("Ог");
								state = 0;	// "";
								break;
							case 'G':
								sb.Append("ОГ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Ои");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("ОИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Ой");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("ОЙ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Ок");
								state = 0;	// "";
								break;
							case 'K':
								sb.Append("ОК");
								state = 0;	// "";
								break;
							case 'l':
								sb.Append("Ол");
								state = 0;	// "";
								break;
							case 'L':
								sb.Append("ОЛ");
								state = 0;	// "";
								break;
							case 'm':
								sb.Append("Ом");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("ОМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Он");
								state = 0;	// "";
								break;
							case 'N':
								sb.Append("ОН");
								state = 0;	// "";
								break;
							case 'o':
								sb.Append("Оо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("ОО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Оп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("ОП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Ор");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("ОР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("О");
								state = 7;	// "s";
								break;
							case 'S':
								sb.Append("О");
								state = 8;	// "S";
								break;
							case 't':
								sb.Append("От");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("ОТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Оу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("ОУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Ов");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("ОВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Ох");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("ОХ");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("О");
								state = 11;	// "y";
								break;
							case 'Y':
								sb.Append("О");
								state = 12;	// "Y";
								break;
							case 'z':
								sb.Append("О");
								state = 13;	// "z";
								break;
							case 'Z':
								sb.Append("О");
								state = 14;	// "Z";
								break;
							case 'о':
								sb.Append("О");
								state = 15;	// "о";
								break;
							case 'О':
								sb.Append("О");
								break;
							default:
								sb.Append("О");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
				}
			}

			switch (state)
			{
				case 0:	// ""
					break;				
				case 1:	// "a"
					sb.Append("а");
					break;				
				case 2:	// "A"
					sb.Append("А");
					break;				
				case 3:	// "c"
					sb.Append("ц");
					break;				
				case 4:	// "C"
					sb.Append("Ц");
					break;				
				case 5:	// "f"
					sb.Append("ф");
					break;				
				case 6:	// "F"
					sb.Append("Ф");
					break;				
				case 7:	// "s"
					sb.Append("с");
					break;				
				case 8:	// "S"
					sb.Append("С");
					break;				
				case 9:	// "sh"
					sb.Append("ш");
					break;				
				case 10:	// "Sh"
					sb.Append("Ш");
					break;				
				case 11:	// "y"
					sb.Append("y");
					break;				
				case 12:	// "Y"
					sb.Append("Y");
					break;				
				case 13:	// "z"
					sb.Append("з");
					break;				
				case 14:	// "Z"
					sb.Append("З");
					break;				
				case 15:	// "о"
					sb.Append("о");
					break;				
				case 16:	// "О"
					sb.Append("О");
					break;				
			}
			return sb.ToString();
		}

		internal static string Cyrillic2LatinMacedonian(string text)
		{
			var sb = new StringBuilder();
			var state = 0;			
			for (var i = 0; i < text.Length; i++)
			{
				var c = text[i];
				switch (state)
				{
					case 0:	// ""
						switch (c)
						{
							case '’':
								sb.Append("\'");
								break;
							case 'j':
								sb.Append("j");
								break;
							case 'J':
								sb.Append("J");
								break;
							case '№':
								sb.Append("#");
								break;
							case 's':
								sb.Append("z`");
								break;
							case 'S':
								sb.Append("Z`");
								break;
							case 'а':
								sb.Append("a");
								break;
							case 'А':
								sb.Append("A");
								break;
							case 'б':
								sb.Append("b");
								break;
							case 'Б':
								sb.Append("B");
								break;
							case 'в':
								sb.Append("v");
								break;
							case 'В':
								sb.Append("V");
								break;
							case 'г':
								sb.Append("g");
								break;
							case 'Г':
								sb.Append("G");
								break;
							case 'ѓ':
								sb.Append("g`");
								break;
							case 'Ѓ':
								sb.Append("G`");
								break;
							case 'д':
								sb.Append("d");
								break;
							case 'Д':
								sb.Append("D");
								break;
							case 'е':
								sb.Append("e");
								break;
							case 'Е':
								sb.Append("E");
								break;
							case 'ж':
								sb.Append("zh");
								break;
							case 'Ж':
								sb.Append("Zh");
								break;
							case 'з':
								sb.Append("z");
								break;
							case 'З':
								sb.Append("Z");
								break;
							case 'и':
								sb.Append("i");
								break;
							case 'И':
								sb.Append("I");
								break;
							case 'к':
								sb.Append("k");
								break;
							case 'К':
								sb.Append("K");
								break;
							case 'ќ':
								sb.Append("k`");
								break;
							case 'Ќ':
								sb.Append("K`");
								break;
							case 'л':
								sb.Append("l");
								break;
							case 'Л':
								sb.Append("L");
								break;
							case 'љ':
								sb.Append("l`");
								break;
							case 'Љ':
								sb.Append("L`");
								break;
							case 'м':
								sb.Append("m");
								break;
							case 'М':
								sb.Append("M");
								break;
							case 'н':
								sb.Append("п");
								break;
							case 'Н':
								sb.Append("П");
								break;
							case 'њ':
								sb.Append("n`");
								break;
							case 'Њ':
								sb.Append("N`");
								break;
							case 'о':
								sb.Append("o");
								break;
							case 'О':
								sb.Append("O");
								break;
							case 'п':
								sb.Append("p");
								break;
							case 'П':
								sb.Append("P");
								break;
							case 'р':
								sb.Append("r");
								break;
							case 'Р':
								sb.Append("R");
								break;
							case 'с':
								sb.Append("s");
								break;
							case 'С':
								sb.Append("S");
								break;
							case 'т':
								sb.Append("t");
								break;
							case 'Т':
								sb.Append("T");
								break;
							case 'у':
								sb.Append("u");
								break;
							case 'У':
								sb.Append("U");
								break;
							case 'ф':
								sb.Append("f");
								break;
							case 'Ф':
								sb.Append("F");
								break;
							case 'х':
								sb.Append("x");
								break;
							case 'Х':
								sb.Append("X");
								break;
							case 'ц':
								state = 1;	// "ц";
								break;
							case 'Ц':
								state = 2;	// "Ц";
								break;
							case 'ч':
								sb.Append("ch");
								break;
							case 'Ч':
								sb.Append("Ch");
								break;
							case 'џ':
								sb.Append("dh");
								break;
							case 'Џ':
								sb.Append("Dh");
								break;
							case 'ш':
								sb.Append("sh");
								break;
							case 'Ш':
								sb.Append("Sh");
								break;
							default:
								sb.Append(c);
								break;
						}
						break;				
					case 1:	// "ц"
						switch (c)
						{
							case '’':
								sb.Append("cz\'");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("ce");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("cE");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("ci");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("cI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("cj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("cJ");
								state = 0;	// "";
								break;
							case '№':
								sb.Append("cz#");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("czz`");
								state = 0;	// "";
								break;
							case 'S':
								sb.Append("czZ`");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("cy");
								state = 0;	// "";
								break;
							case 'Y':
								sb.Append("cY");
								state = 0;	// "";
								break;
							case 'а':
								sb.Append("cza");
								state = 0;	// "";
								break;
							case 'А':
								sb.Append("czA");
								state = 0;	// "";
								break;
							case 'б':
								sb.Append("czb");
								state = 0;	// "";
								break;
							case 'Б':
								sb.Append("czB");
								state = 0;	// "";
								break;
							case 'в':
								sb.Append("czv");
								state = 0;	// "";
								break;
							case 'В':
								sb.Append("czV");
								state = 0;	// "";
								break;
							case 'г':
								sb.Append("czg");
								state = 0;	// "";
								break;
							case 'Г':
								sb.Append("czG");
								state = 0;	// "";
								break;
							case 'ѓ':
								sb.Append("czg`");
								state = 0;	// "";
								break;
							case 'Ѓ':
								sb.Append("czG`");
								state = 0;	// "";
								break;
							case 'д':
								sb.Append("czd");
								state = 0;	// "";
								break;
							case 'Д':
								sb.Append("czD");
								state = 0;	// "";
								break;
							case 'е':
								sb.Append("ce");
								state = 0;	// "";
								break;
							case 'Е':
								sb.Append("cE");
								state = 0;	// "";
								break;
							case 'ж':
								sb.Append("czzh");
								state = 0;	// "";
								break;
							case 'Ж':
								sb.Append("czZh");
								state = 0;	// "";
								break;
							case 'з':
								sb.Append("czz");
								state = 0;	// "";
								break;
							case 'З':
								sb.Append("czZ");
								state = 0;	// "";
								break;
							case 'и':
								sb.Append("ci");
								state = 0;	// "";
								break;
							case 'И':
								sb.Append("cI");
								state = 0;	// "";
								break;
							case 'к':
								sb.Append("czk");
								state = 0;	// "";
								break;
							case 'К':
								sb.Append("czK");
								state = 0;	// "";
								break;
							case 'ќ':
								sb.Append("czk`");
								state = 0;	// "";
								break;
							case 'Ќ':
								sb.Append("czK`");
								state = 0;	// "";
								break;
							case 'л':
								sb.Append("czl");
								state = 0;	// "";
								break;
							case 'Л':
								sb.Append("czL");
								state = 0;	// "";
								break;
							case 'љ':
								sb.Append("czl`");
								state = 0;	// "";
								break;
							case 'Љ':
								sb.Append("czL`");
								state = 0;	// "";
								break;
							case 'м':
								sb.Append("czm");
								state = 0;	// "";
								break;
							case 'М':
								sb.Append("czM");
								state = 0;	// "";
								break;
							case 'н':
								sb.Append("czп");
								state = 0;	// "";
								break;
							case 'Н':
								sb.Append("czП");
								state = 0;	// "";
								break;
							case 'њ':
								sb.Append("czn`");
								state = 0;	// "";
								break;
							case 'Њ':
								sb.Append("czN`");
								state = 0;	// "";
								break;
							case 'о':
								sb.Append("czo");
								state = 0;	// "";
								break;
							case 'О':
								sb.Append("czO");
								state = 0;	// "";
								break;
							case 'п':
								sb.Append("czp");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("czP");
								state = 0;	// "";
								break;
							case 'р':
								sb.Append("czr");
								state = 0;	// "";
								break;
							case 'Р':
								sb.Append("czR");
								state = 0;	// "";
								break;
							case 'с':
								sb.Append("czs");
								state = 0;	// "";
								break;
							case 'С':
								sb.Append("czS");
								state = 0;	// "";
								break;
							case 'т':
								sb.Append("czt");
								state = 0;	// "";
								break;
							case 'Т':
								sb.Append("czT");
								state = 0;	// "";
								break;
							case 'у':
								sb.Append("czu");
								state = 0;	// "";
								break;
							case 'У':
								sb.Append("czU");
								state = 0;	// "";
								break;
							case 'ф':
								sb.Append("czf");
								state = 0;	// "";
								break;
							case 'Ф':
								sb.Append("czF");
								state = 0;	// "";
								break;
							case 'х':
								sb.Append("czx");
								state = 0;	// "";
								break;
							case 'Х':
								sb.Append("czX");
								state = 0;	// "";
								break;
							case 'ц':
								sb.Append("cz");
								break;
							case 'Ц':
								sb.Append("cz");
								state = 2;	// "Ц";
								break;
							case 'ч':
								sb.Append("czch");
								state = 0;	// "";
								break;
							case 'Ч':
								sb.Append("czCh");
								state = 0;	// "";
								break;
							case 'џ':
								sb.Append("czdh");
								state = 0;	// "";
								break;
							case 'Џ':
								sb.Append("czDh");
								state = 0;	// "";
								break;
							case 'ш':
								sb.Append("czsh");
								state = 0;	// "";
								break;
							case 'Ш':
								sb.Append("czSh");
								state = 0;	// "";
								break;
							default:
								sb.Append("cz");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 2:	// "Ц"
						switch (c)
						{
							case '’':
								sb.Append("Cz\'");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Ce");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("CE");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Ci");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("CI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Cj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("CJ");
								state = 0;	// "";
								break;
							case '№':
								sb.Append("Cz#");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("Czz`");
								state = 0;	// "";
								break;
							case 'S':
								sb.Append("CzZ`");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Cy");
								state = 0;	// "";
								break;
							case 'Y':
								sb.Append("CY");
								state = 0;	// "";
								break;
							case 'а':
								sb.Append("Cza");
								state = 0;	// "";
								break;
							case 'А':
								sb.Append("CzA");
								state = 0;	// "";
								break;
							case 'б':
								sb.Append("Czb");
								state = 0;	// "";
								break;
							case 'Б':
								sb.Append("CzB");
								state = 0;	// "";
								break;
							case 'в':
								sb.Append("Czv");
								state = 0;	// "";
								break;
							case 'В':
								sb.Append("CzV");
								state = 0;	// "";
								break;
							case 'г':
								sb.Append("Czg");
								state = 0;	// "";
								break;
							case 'Г':
								sb.Append("CzG");
								state = 0;	// "";
								break;
							case 'ѓ':
								sb.Append("Czg`");
								state = 0;	// "";
								break;
							case 'Ѓ':
								sb.Append("CzG`");
								state = 0;	// "";
								break;
							case 'д':
								sb.Append("Czd");
								state = 0;	// "";
								break;
							case 'Д':
								sb.Append("CzD");
								state = 0;	// "";
								break;
							case 'е':
								sb.Append("Ce");
								state = 0;	// "";
								break;
							case 'Е':
								sb.Append("CE");
								state = 0;	// "";
								break;
							case 'ж':
								sb.Append("Czzh");
								state = 0;	// "";
								break;
							case 'Ж':
								sb.Append("CzZh");
								state = 0;	// "";
								break;
							case 'з':
								sb.Append("Czz");
								state = 0;	// "";
								break;
							case 'З':
								sb.Append("CzZ");
								state = 0;	// "";
								break;
							case 'и':
								sb.Append("Ci");
								state = 0;	// "";
								break;
							case 'И':
								sb.Append("CI");
								state = 0;	// "";
								break;
							case 'к':
								sb.Append("Czk");
								state = 0;	// "";
								break;
							case 'К':
								sb.Append("CzK");
								state = 0;	// "";
								break;
							case 'ќ':
								sb.Append("Czk`");
								state = 0;	// "";
								break;
							case 'Ќ':
								sb.Append("CzK`");
								state = 0;	// "";
								break;
							case 'л':
								sb.Append("Czl");
								state = 0;	// "";
								break;
							case 'Л':
								sb.Append("CzL");
								state = 0;	// "";
								break;
							case 'љ':
								sb.Append("Czl`");
								state = 0;	// "";
								break;
							case 'Љ':
								sb.Append("CzL`");
								state = 0;	// "";
								break;
							case 'м':
								sb.Append("Czm");
								state = 0;	// "";
								break;
							case 'М':
								sb.Append("CzM");
								state = 0;	// "";
								break;
							case 'н':
								sb.Append("Czп");
								state = 0;	// "";
								break;
							case 'Н':
								sb.Append("CzП");
								state = 0;	// "";
								break;
							case 'њ':
								sb.Append("Czn`");
								state = 0;	// "";
								break;
							case 'Њ':
								sb.Append("CzN`");
								state = 0;	// "";
								break;
							case 'о':
								sb.Append("Czo");
								state = 0;	// "";
								break;
							case 'О':
								sb.Append("CzO");
								state = 0;	// "";
								break;
							case 'п':
								sb.Append("Czp");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("CzP");
								state = 0;	// "";
								break;
							case 'р':
								sb.Append("Czr");
								state = 0;	// "";
								break;
							case 'Р':
								sb.Append("CzR");
								state = 0;	// "";
								break;
							case 'с':
								sb.Append("Czs");
								state = 0;	// "";
								break;
							case 'С':
								sb.Append("CzS");
								state = 0;	// "";
								break;
							case 'т':
								sb.Append("Czt");
								state = 0;	// "";
								break;
							case 'Т':
								sb.Append("CzT");
								state = 0;	// "";
								break;
							case 'у':
								sb.Append("Czu");
								state = 0;	// "";
								break;
							case 'У':
								sb.Append("CzU");
								state = 0;	// "";
								break;
							case 'ф':
								sb.Append("Czf");
								state = 0;	// "";
								break;
							case 'Ф':
								sb.Append("CzF");
								state = 0;	// "";
								break;
							case 'х':
								sb.Append("Czx");
								state = 0;	// "";
								break;
							case 'Х':
								sb.Append("CzX");
								state = 0;	// "";
								break;
							case 'ц':
								sb.Append("Cz");
								state = 1;	// "ц";
								break;
							case 'Ц':
								sb.Append("Cz");
								break;
							case 'ч':
								sb.Append("Czch");
								state = 0;	// "";
								break;
							case 'Ч':
								sb.Append("CzCh");
								state = 0;	// "";
								break;
							case 'џ':
								sb.Append("Czdh");
								state = 0;	// "";
								break;
							case 'Џ':
								sb.Append("CzDh");
								state = 0;	// "";
								break;
							case 'ш':
								sb.Append("Czsh");
								state = 0;	// "";
								break;
							case 'Ш':
								sb.Append("CzSh");
								state = 0;	// "";
								break;
							default:
								sb.Append("Cz");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
				}
			}

			switch (state)
			{
				case 0:	// ""
					break;				
				case 1:	// "ц"
					sb.Append("cz");
					break;				
				case 2:	// "Ц"
					sb.Append("Cz");
					break;				
			}
			return sb.ToString();
		}

        internal static string Latin2CyrillicMacedonian(string text)
		{
			var sb = new StringBuilder(text.Length);
			var state = 0;			
			for (var i = 0; i < text.Length; i++)
			{
				var c = text[i];
				switch (state)
				{
					case 0:	// ""
						switch (c)
						{
							case '\'':
								sb.Append("’");
								break;
							case '#':
								sb.Append("№");
								break;
							case 'a':
								sb.Append("а");
								break;
							case 'A':
								sb.Append("А");
								break;
							case 'b':
								sb.Append("б");
								break;
							case 'B':
								sb.Append("Б");
								break;
							case 'c':
								state = 1;	// "c";
								break;
							case 'C':
								state = 2;	// "C";
								break;
							case 'd':
								state = 3;	// "d";
								break;
							case 'D':
								state = 4;	// "D";
								break;
							case 'e':
								sb.Append("е");
								break;
							case 'E':
								sb.Append("Е");
								break;
							case 'f':
								sb.Append("ф");
								break;
							case 'F':
								sb.Append("Ф");
								break;
							case 'g':
								state = 5;	// "g";
								break;
							case 'G':
								state = 6;	// "G";
								break;
							case 'i':
								sb.Append("и");
								break;
							case 'I':
								sb.Append("И");
								break;
							case 'j':
								sb.Append("j");
								break;
							case 'J':
								sb.Append("J");
								break;
							case 'k':
								state = 7;	// "k";
								break;
							case 'K':
								state = 8;	// "K";
								break;
							case 'l':
								state = 9;	// "l";
								break;
							case 'L':
								state = 10;	// "L";
								break;
							case 'm':
								sb.Append("м");
								break;
							case 'M':
								sb.Append("М");
								break;
							case 'n':
								state = 11;	// "n";
								break;
							case 'N':
								state = 12;	// "N";
								break;
							case 'o':
								sb.Append("о");
								break;
							case 'O':
								sb.Append("О");
								break;
							case 'p':
								sb.Append("п");
								break;
							case 'P':
								sb.Append("П");
								break;
							case 'r':
								sb.Append("р");
								break;
							case 'R':
								sb.Append("Р");
								break;
							case 's':
								state = 13;	// "s";
								break;
							case 'S':
								state = 14;	// "S";
								break;
							case 't':
								sb.Append("т");
								break;
							case 'T':
								sb.Append("Т");
								break;
							case 'u':
								sb.Append("у");
								break;
							case 'U':
								sb.Append("У");
								break;
							case 'v':
								sb.Append("в");
								break;
							case 'V':
								sb.Append("В");
								break;
							case 'x':
								sb.Append("х");
								break;
							case 'X':
								sb.Append("Х");
								break;
							case 'z':
								state = 15;	// "z";
								break;
							case 'Z':
								state = 16;	// "Z";
								break;
							case 'п':
								sb.Append("н");
								break;
							case 'П':
								sb.Append("Н");
								break;
							default:
								sb.Append(c);
								break;
						}
						break;				
					case 1:	// "c"
						switch (c)
						{
							case '\'':
								sb.Append("ц’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("ц№");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("ца");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("цА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("цб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("цБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("ц");
								break;
							case 'C':
								sb.Append("ц");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("ц");
								state = 3;	// "d";
								break;
							case 'D':
								sb.Append("ц");
								state = 4;	// "D";
								break;
							case 'e':
								sb.Append("це");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("цЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("цф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("цФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("ц");
								state = 5;	// "g";
								break;
							case 'G':
								sb.Append("ц");
								state = 6;	// "G";
								break;
							case 'h':
								sb.Append("ч");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("ци");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("цИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("цj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("цJ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("ц");
								state = 7;	// "k";
								break;
							case 'K':
								sb.Append("ц");
								state = 8;	// "K";
								break;
							case 'l':
								sb.Append("ц");
								state = 9;	// "l";
								break;
							case 'L':
								sb.Append("ц");
								state = 10;	// "L";
								break;
							case 'm':
								sb.Append("цм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("цМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("ц");
								state = 11;	// "n";
								break;
							case 'N':
								sb.Append("ц");
								state = 12;	// "N";
								break;
							case 'o':
								sb.Append("цо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("цО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("цп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("цП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("цр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("цР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("ц");
								state = 13;	// "s";
								break;
							case 'S':
								sb.Append("ц");
								state = 14;	// "S";
								break;
							case 't':
								sb.Append("цт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("цТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("цу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("цУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("цв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("цВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("цх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("цХ");
								state = 0;	// "";
								break;
							case 'z':
								sb.Append("ц");
								state = 0;	// "";
								break;
							case 'Z':
								sb.Append("ц");
								state = 16;	// "Z";
								break;
							case 'п':
								sb.Append("цн");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("цН");
								state = 0;	// "";
								break;
							default:
								sb.Append("ц");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 2:	// "C"
						switch (c)
						{
							case '\'':
								sb.Append("Ц’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("Ц№");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("Ца");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("ЦА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Цб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("ЦБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("Ц");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("Ц");
								break;
							case 'd':
								sb.Append("Ц");
								state = 3;	// "d";
								break;
							case 'D':
								sb.Append("Ц");
								state = 4;	// "D";
								break;
							case 'e':
								sb.Append("Це");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("ЦЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("Цф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("ЦФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("Ц");
								state = 5;	// "g";
								break;
							case 'G':
								sb.Append("Ц");
								state = 6;	// "G";
								break;
							case 'h':
								sb.Append("Ч");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Ци");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("ЦИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Цj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("ЦJ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Ц");
								state = 7;	// "k";
								break;
							case 'K':
								sb.Append("Ц");
								state = 8;	// "K";
								break;
							case 'l':
								sb.Append("Ц");
								state = 9;	// "l";
								break;
							case 'L':
								sb.Append("Ц");
								state = 10;	// "L";
								break;
							case 'm':
								sb.Append("Цм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("ЦМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Ц");
								state = 11;	// "n";
								break;
							case 'N':
								sb.Append("Ц");
								state = 12;	// "N";
								break;
							case 'o':
								sb.Append("Цо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("ЦО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Цп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("ЦП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Цр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("ЦР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("Ц");
								state = 13;	// "s";
								break;
							case 'S':
								sb.Append("Ц");
								state = 14;	// "S";
								break;
							case 't':
								sb.Append("Цт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("ЦТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Цу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("ЦУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Цв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("ЦВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Цх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("ЦХ");
								state = 0;	// "";
								break;
							case 'z':
								sb.Append("Ц");
								state = 0;	// "";
								break;
							case 'Z':
								sb.Append("Ц");
								state = 16;	// "Z";
								break;
							case 'п':
								sb.Append("Цн");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("ЦН");
								state = 0;	// "";
								break;
							default:
								sb.Append("Ц");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 3:	// "d"
						switch (c)
						{
							case '\'':
								sb.Append("д’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("д№");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("да");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("дА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("дб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("дБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("д");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("д");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("д");
								break;
							case 'D':
								sb.Append("д");
								state = 4;	// "D";
								break;
							case 'e':
								sb.Append("де");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("дЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("дф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("дФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("д");
								state = 5;	// "g";
								break;
							case 'G':
								sb.Append("д");
								state = 6;	// "G";
								break;
							case 'h':
								sb.Append("џ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("ди");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("дИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("дj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("дJ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("д");
								state = 7;	// "k";
								break;
							case 'K':
								sb.Append("д");
								state = 8;	// "K";
								break;
							case 'l':
								sb.Append("д");
								state = 9;	// "l";
								break;
							case 'L':
								sb.Append("д");
								state = 10;	// "L";
								break;
							case 'm':
								sb.Append("дм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("дМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("д");
								state = 11;	// "n";
								break;
							case 'N':
								sb.Append("д");
								state = 12;	// "N";
								break;
							case 'o':
								sb.Append("до");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("дО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("дп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("дП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("др");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("дР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("д");
								state = 13;	// "s";
								break;
							case 'S':
								sb.Append("д");
								state = 14;	// "S";
								break;
							case 't':
								sb.Append("дт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("дТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("ду");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("дУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("дв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("дВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("дх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("дХ");
								state = 0;	// "";
								break;
							case 'z':
								sb.Append("д");
								state = 15;	// "z";
								break;
							case 'Z':
								sb.Append("д");
								state = 16;	// "Z";
								break;
							case 'п':
								sb.Append("дн");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("дН");
								state = 0;	// "";
								break;
							default:
								sb.Append("д");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 4:	// "D"
						switch (c)
						{
							case '\'':
								sb.Append("Д’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("Д№");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("Да");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("ДА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Дб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("ДБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("Д");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("Д");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("Д");
								state = 3;	// "d";
								break;
							case 'D':
								sb.Append("Д");
								break;
							case 'e':
								sb.Append("Де");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("ДЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("Дф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("ДФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("Д");
								state = 5;	// "g";
								break;
							case 'G':
								sb.Append("Д");
								state = 6;	// "G";
								break;
							case 'h':
								sb.Append("Џ");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Ди");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("ДИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Дj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("ДJ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Д");
								state = 7;	// "k";
								break;
							case 'K':
								sb.Append("Д");
								state = 8;	// "K";
								break;
							case 'l':
								sb.Append("Д");
								state = 9;	// "l";
								break;
							case 'L':
								sb.Append("Д");
								state = 10;	// "L";
								break;
							case 'm':
								sb.Append("Дм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("ДМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Д");
								state = 11;	// "n";
								break;
							case 'N':
								sb.Append("Д");
								state = 12;	// "N";
								break;
							case 'o':
								sb.Append("До");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("ДО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Дп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("ДП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Др");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("ДР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("Д");
								state = 13;	// "s";
								break;
							case 'S':
								sb.Append("Д");
								state = 14;	// "S";
								break;
							case 't':
								sb.Append("Дт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("ДТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Ду");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("ДУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Дв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("ДВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Дх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("ДХ");
								state = 0;	// "";
								break;
							case 'z':
								sb.Append("Д");
								state = 15;	// "z";
								break;
							case 'Z':
								sb.Append("Д");
								state = 16;	// "Z";
								break;
							case 'п':
								sb.Append("Дн");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("ДН");
								state = 0;	// "";
								break;
							default:
								sb.Append("Д");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 5:	// "g"
						switch (c)
						{
							case '\'':
								sb.Append("г’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("г№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("ѓ");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("га");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("гА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("гб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("гБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("г");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("г");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("г");
								state = 3;	// "d";
								break;
							case 'D':
								sb.Append("г");
								state = 4;	// "D";
								break;
							case 'e':
								sb.Append("ге");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("гЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("гф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("гФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("г");
								break;
							case 'G':
								sb.Append("г");
								state = 6;	// "G";
								break;
							case 'i':
								sb.Append("ги");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("гИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("гj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("гJ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("г");
								state = 7;	// "k";
								break;
							case 'K':
								sb.Append("г");
								state = 8;	// "K";
								break;
							case 'l':
								sb.Append("г");
								state = 9;	// "l";
								break;
							case 'L':
								sb.Append("г");
								state = 10;	// "L";
								break;
							case 'm':
								sb.Append("гм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("гМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("г");
								state = 11;	// "n";
								break;
							case 'N':
								sb.Append("г");
								state = 12;	// "N";
								break;
							case 'o':
								sb.Append("го");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("гО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("гп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("гП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("гр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("гР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("г");
								state = 13;	// "s";
								break;
							case 'S':
								sb.Append("г");
								state = 14;	// "S";
								break;
							case 't':
								sb.Append("гт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("гТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("гу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("гУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("гв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("гВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("гх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("гХ");
								state = 0;	// "";
								break;
							case 'z':
								sb.Append("г");
								state = 15;	// "z";
								break;
							case 'Z':
								sb.Append("г");
								state = 16;	// "Z";
								break;
							case 'п':
								sb.Append("гн");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("гН");
								state = 0;	// "";
								break;
							default:
								sb.Append("г");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 6:	// "G"
						switch (c)
						{
							case '\'':
								sb.Append("Г’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("Г№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Ѓ");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("Га");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("ГА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Гб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("ГБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("Г");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("Г");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("Г");
								state = 3;	// "d";
								break;
							case 'D':
								sb.Append("Г");
								state = 4;	// "D";
								break;
							case 'e':
								sb.Append("Ге");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("ГЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("Гф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("ГФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("Г");
								state = 5;	// "g";
								break;
							case 'G':
								sb.Append("Г");
								break;
							case 'i':
								sb.Append("Ги");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("ГИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Гj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("ГJ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Г");
								state = 7;	// "k";
								break;
							case 'K':
								sb.Append("Г");
								state = 8;	// "K";
								break;
							case 'l':
								sb.Append("Г");
								state = 9;	// "l";
								break;
							case 'L':
								sb.Append("Г");
								state = 10;	// "L";
								break;
							case 'm':
								sb.Append("Гм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("ГМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Г");
								state = 11;	// "n";
								break;
							case 'N':
								sb.Append("Г");
								state = 12;	// "N";
								break;
							case 'o':
								sb.Append("Го");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("ГО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Гп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("ГП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Гр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("ГР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("Г");
								state = 13;	// "s";
								break;
							case 'S':
								sb.Append("Г");
								state = 14;	// "S";
								break;
							case 't':
								sb.Append("Гт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("ГТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Гу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("ГУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Гв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("ГВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Гх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("ГХ");
								state = 0;	// "";
								break;
							case 'z':
								sb.Append("Г");
								state = 15;	// "z";
								break;
							case 'Z':
								sb.Append("Г");
								state = 16;	// "Z";
								break;
							case 'п':
								sb.Append("Гн");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("ГН");
								state = 0;	// "";
								break;
							default:
								sb.Append("Г");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 7:	// "k"
						switch (c)
						{
							case '\'':
								sb.Append("к’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("к№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("ќ");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("ка");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("кА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("кб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("кБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("к");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("к");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("к");
								state = 3;	// "d";
								break;
							case 'D':
								sb.Append("к");
								state = 4;	// "D";
								break;
							case 'e':
								sb.Append("ке");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("кЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("кф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("кФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("к");
								state = 5;	// "g";
								break;
							case 'G':
								sb.Append("к");
								state = 6;	// "G";
								break;
							case 'i':
								sb.Append("ки");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("кИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("кj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("кJ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("к");
								break;
							case 'K':
								sb.Append("к");
								state = 8;	// "K";
								break;
							case 'l':
								sb.Append("к");
								state = 9;	// "l";
								break;
							case 'L':
								sb.Append("к");
								state = 10;	// "L";
								break;
							case 'm':
								sb.Append("км");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("кМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("к");
								state = 11;	// "n";
								break;
							case 'N':
								sb.Append("к");
								state = 12;	// "N";
								break;
							case 'o':
								sb.Append("ко");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("кО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("кп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("кП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("кр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("кР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("к");
								state = 13;	// "s";
								break;
							case 'S':
								sb.Append("к");
								state = 14;	// "S";
								break;
							case 't':
								sb.Append("кт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("кТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("ку");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("кУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("кв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("кВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("кх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("кХ");
								state = 0;	// "";
								break;
							case 'z':
								sb.Append("к");
								state = 15;	// "z";
								break;
							case 'Z':
								sb.Append("к");
								state = 16;	// "Z";
								break;
							case 'п':
								sb.Append("кн");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("кН");
								state = 0;	// "";
								break;
							default:
								sb.Append("к");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 8:	// "K"
						switch (c)
						{
							case '\'':
								sb.Append("К’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("К№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Ќ");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("Ка");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("КА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Кб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("КБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("К");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("К");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("К");
								state = 3;	// "d";
								break;
							case 'D':
								sb.Append("К");
								state = 4;	// "D";
								break;
							case 'e':
								sb.Append("Ке");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("КЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("Кф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("КФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("К");
								state = 5;	// "g";
								break;
							case 'G':
								sb.Append("К");
								state = 6;	// "G";
								break;
							case 'i':
								sb.Append("Ки");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("КИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Кj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("КJ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("К");
								state = 7;	// "k";
								break;
							case 'K':
								sb.Append("К");
								break;
							case 'l':
								sb.Append("К");
								state = 9;	// "l";
								break;
							case 'L':
								sb.Append("К");
								state = 10;	// "L";
								break;
							case 'm':
								sb.Append("Км");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("КМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("К");
								state = 11;	// "n";
								break;
							case 'N':
								sb.Append("К");
								state = 12;	// "N";
								break;
							case 'o':
								sb.Append("Ко");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("КО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Кп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("КП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Кр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("КР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("К");
								state = 13;	// "s";
								break;
							case 'S':
								sb.Append("К");
								state = 14;	// "S";
								break;
							case 't':
								sb.Append("Кт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("КТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Ку");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("КУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Кв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("КВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Кх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("КХ");
								state = 0;	// "";
								break;
							case 'z':
								sb.Append("К");
								state = 15;	// "z";
								break;
							case 'Z':
								sb.Append("К");
								state = 16;	// "Z";
								break;
							case 'п':
								sb.Append("Кн");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("КН");
								state = 0;	// "";
								break;
							default:
								sb.Append("К");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 9:	// "l"
						switch (c)
						{
							case '\'':
								sb.Append("л’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("л№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("љ");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("ла");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("лА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("лб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("лБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("л");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("л");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("л");
								state = 3;	// "d";
								break;
							case 'D':
								sb.Append("л");
								state = 4;	// "D";
								break;
							case 'e':
								sb.Append("ле");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("лЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("лф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("лФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("л");
								state = 5;	// "g";
								break;
							case 'G':
								sb.Append("л");
								state = 6;	// "G";
								break;
							case 'i':
								sb.Append("ли");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("лИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("лj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("лJ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("л");
								state = 7;	// "k";
								break;
							case 'K':
								sb.Append("л");
								state = 8;	// "K";
								break;
							case 'l':
								sb.Append("л");
								break;
							case 'L':
								sb.Append("л");
								state = 10;	// "L";
								break;
							case 'm':
								sb.Append("лм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("лМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("л");
								state = 11;	// "n";
								break;
							case 'N':
								sb.Append("л");
								state = 12;	// "N";
								break;
							case 'o':
								sb.Append("ло");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("лО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("лп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("лП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("лр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("лР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("л");
								state = 13;	// "s";
								break;
							case 'S':
								sb.Append("л");
								state = 14;	// "S";
								break;
							case 't':
								sb.Append("лт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("лТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("лу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("лУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("лв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("лВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("лх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("лХ");
								state = 0;	// "";
								break;
							case 'z':
								sb.Append("л");
								state = 15;	// "z";
								break;
							case 'Z':
								sb.Append("л");
								state = 16;	// "Z";
								break;
							case 'п':
								sb.Append("лн");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("лН");
								state = 0;	// "";
								break;
							default:
								sb.Append("л");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 10:	// "L"
						switch (c)
						{
							case '\'':
								sb.Append("Л’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("Л№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Љ");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("Ла");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("ЛА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Лб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("ЛБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("Л");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("Л");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("Л");
								state = 3;	// "d";
								break;
							case 'D':
								sb.Append("Л");
								state = 4;	// "D";
								break;
							case 'e':
								sb.Append("Ле");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("ЛЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("Лф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("ЛФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("Л");
								state = 5;	// "g";
								break;
							case 'G':
								sb.Append("Л");
								state = 6;	// "G";
								break;
							case 'i':
								sb.Append("Ли");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("ЛИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Лj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("ЛJ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("Л");
								state = 7;	// "k";
								break;
							case 'K':
								sb.Append("Л");
								state = 8;	// "K";
								break;
							case 'l':
								sb.Append("Л");
								state = 9;	// "l";
								break;
							case 'L':
								sb.Append("Л");
								break;
							case 'm':
								sb.Append("Лм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("ЛМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("Л");
								state = 11;	// "n";
								break;
							case 'N':
								sb.Append("Л");
								state = 12;	// "N";
								break;
							case 'o':
								sb.Append("Ло");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("ЛО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Лп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("ЛП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Лр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("ЛР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("Л");
								state = 13;	// "s";
								break;
							case 'S':
								sb.Append("Л");
								state = 14;	// "S";
								break;
							case 't':
								sb.Append("Лт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("ЛТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Лу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("ЛУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Лв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("ЛВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Лх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("ЛХ");
								state = 0;	// "";
								break;
							case 'z':
								sb.Append("Л");
								state = 15;	// "z";
								break;
							case 'Z':
								sb.Append("Л");
								state = 16;	// "Z";
								break;
							case 'п':
								sb.Append("Лн");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("ЛН");
								state = 0;	// "";
								break;
							default:
								sb.Append("Л");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 11:	// "n"
						switch (c)
						{
							case '\'':
								sb.Append("n’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("n№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("њ");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("nа");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("nА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("nб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("nБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("n");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("n");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("n");
								state = 3;	// "d";
								break;
							case 'D':
								sb.Append("n");
								state = 4;	// "D";
								break;
							case 'e':
								sb.Append("nе");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("nЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("nф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("nФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("n");
								state = 5;	// "g";
								break;
							case 'G':
								sb.Append("n");
								state = 6;	// "G";
								break;
							case 'i':
								sb.Append("nи");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("nИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("nj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("nJ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("n");
								state = 7;	// "k";
								break;
							case 'K':
								sb.Append("n");
								state = 8;	// "K";
								break;
							case 'l':
								sb.Append("n");
								state = 9;	// "l";
								break;
							case 'L':
								sb.Append("n");
								state = 10;	// "L";
								break;
							case 'm':
								sb.Append("nм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("nМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("n");
								break;
							case 'N':
								sb.Append("n");
								state = 12;	// "N";
								break;
							case 'o':
								sb.Append("nо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("nО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("nп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("nП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("nр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("nР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("n");
								state = 13;	// "s";
								break;
							case 'S':
								sb.Append("n");
								state = 14;	// "S";
								break;
							case 't':
								sb.Append("nт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("nТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("nу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("nУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("nв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("nВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("nх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("nХ");
								state = 0;	// "";
								break;
							case 'z':
								sb.Append("n");
								state = 15;	// "z";
								break;
							case 'Z':
								sb.Append("n");
								state = 16;	// "Z";
								break;
							case 'п':
								sb.Append("nн");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("nН");
								state = 0;	// "";
								break;
							default:
								sb.Append("n");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 12:	// "N"
						switch (c)
						{
							case '\'':
								sb.Append("N’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("N№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("Њ");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("Nа");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("NА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Nб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("NБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("N");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("N");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("N");
								state = 3;	// "d";
								break;
							case 'D':
								sb.Append("N");
								state = 4;	// "D";
								break;
							case 'e':
								sb.Append("Nе");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("NЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("Nф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("NФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("N");
								state = 5;	// "g";
								break;
							case 'G':
								sb.Append("N");
								state = 6;	// "G";
								break;
							case 'i':
								sb.Append("Nи");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("NИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Nj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("NJ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("N");
								state = 7;	// "k";
								break;
							case 'K':
								sb.Append("N");
								state = 8;	// "K";
								break;
							case 'l':
								sb.Append("N");
								state = 9;	// "l";
								break;
							case 'L':
								sb.Append("N");
								state = 10;	// "L";
								break;
							case 'm':
								sb.Append("Nм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("NМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("N");
								state = 11;	// "n";
								break;
							case 'N':
								sb.Append("N");
								break;
							case 'o':
								sb.Append("Nо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("NО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Nп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("NП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Nр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("NР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("N");
								state = 13;	// "s";
								break;
							case 'S':
								sb.Append("N");
								state = 14;	// "S";
								break;
							case 't':
								sb.Append("Nт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("NТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Nу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("NУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Nв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("NВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Nх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("NХ");
								state = 0;	// "";
								break;
							case 'z':
								sb.Append("N");
								state = 15;	// "z";
								break;
							case 'Z':
								sb.Append("N");
								state = 16;	// "Z";
								break;
							case 'п':
								sb.Append("Nн");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("NН");
								state = 0;	// "";
								break;
							default:
								sb.Append("N");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 13:	// "s"
						switch (c)
						{
							case '\'':
								sb.Append("с’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("с№");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("са");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("сА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("сб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("сБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("с");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("с");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("с");
								state = 3;	// "d";
								break;
							case 'D':
								sb.Append("с");
								state = 4;	// "D";
								break;
							case 'e':
								sb.Append("се");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("сЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("сф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("сФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("с");
								state = 5;	// "g";
								break;
							case 'G':
								sb.Append("с");
								state = 6;	// "G";
								break;
							case 'h':
								sb.Append("ш");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("си");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("сИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("сj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("сJ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("с");
								state = 7;	// "k";
								break;
							case 'K':
								sb.Append("с");
								state = 8;	// "K";
								break;
							case 'l':
								sb.Append("с");
								state = 9;	// "l";
								break;
							case 'L':
								sb.Append("с");
								state = 10;	// "L";
								break;
							case 'm':
								sb.Append("см");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("сМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("с");
								state = 11;	// "n";
								break;
							case 'N':
								sb.Append("с");
								state = 12;	// "N";
								break;
							case 'o':
								sb.Append("со");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("сО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("сп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("сП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("ср");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("сР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("с");
								break;
							case 'S':
								sb.Append("с");
								state = 14;	// "S";
								break;
							case 't':
								sb.Append("ст");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("сТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("су");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("сУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("св");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("сВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("сх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("сХ");
								state = 0;	// "";
								break;
							case 'z':
								sb.Append("с");
								state = 15;	// "z";
								break;
							case 'Z':
								sb.Append("с");
								state = 16;	// "Z";
								break;
							case 'п':
								sb.Append("сн");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("сН");
								state = 0;	// "";
								break;
							default:
								sb.Append("с");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 14:	// "S"
						switch (c)
						{
							case '\'':
								sb.Append("С’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("С№");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("Са");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("СА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Сб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("СБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("С");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("С");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("С");
								state = 3;	// "d";
								break;
							case 'D':
								sb.Append("С");
								state = 4;	// "D";
								break;
							case 'e':
								sb.Append("Се");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("СЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("Сф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("СФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("С");
								state = 5;	// "g";
								break;
							case 'G':
								sb.Append("С");
								state = 6;	// "G";
								break;
							case 'h':
								sb.Append("Ш");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Си");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("СИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Сj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("СJ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("С");
								state = 7;	// "k";
								break;
							case 'K':
								sb.Append("С");
								state = 8;	// "K";
								break;
							case 'l':
								sb.Append("С");
								state = 9;	// "l";
								break;
							case 'L':
								sb.Append("С");
								state = 10;	// "L";
								break;
							case 'm':
								sb.Append("См");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("СМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("С");
								state = 11;	// "n";
								break;
							case 'N':
								sb.Append("С");
								state = 12;	// "N";
								break;
							case 'o':
								sb.Append("Со");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("СО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Сп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("СП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Ср");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("СР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("С");
								state = 13;	// "s";
								break;
							case 'S':
								sb.Append("С");
								break;
							case 't':
								sb.Append("Ст");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("СТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Су");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("СУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Св");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("СВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Сх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("СХ");
								state = 0;	// "";
								break;
							case 'z':
								sb.Append("С");
								state = 15;	// "z";
								break;
							case 'Z':
								sb.Append("С");
								state = 16;	// "Z";
								break;
							case 'п':
								sb.Append("Сн");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("СН");
								state = 0;	// "";
								break;
							default:
								sb.Append("С");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 15:	// "z"
						switch (c)
						{
							case '\'':
								sb.Append("з’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("з№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("s");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("за");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("зА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("зб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("зБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("з");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("з");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("з");
								state = 3;	// "d";
								break;
							case 'D':
								sb.Append("з");
								state = 4;	// "D";
								break;
							case 'e':
								sb.Append("зе");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("зЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("зф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("зФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("з");
								state = 5;	// "g";
								break;
							case 'G':
								sb.Append("з");
								state = 6;	// "G";
								break;
							case 'h':
								sb.Append("ж");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("зи");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("зИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("зj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("зJ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("з");
								state = 7;	// "k";
								break;
							case 'K':
								sb.Append("з");
								state = 8;	// "K";
								break;
							case 'l':
								sb.Append("з");
								state = 9;	// "l";
								break;
							case 'L':
								sb.Append("з");
								state = 10;	// "L";
								break;
							case 'm':
								sb.Append("зм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("зМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("з");
								state = 11;	// "n";
								break;
							case 'N':
								sb.Append("з");
								state = 12;	// "N";
								break;
							case 'o':
								sb.Append("зо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("зО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("зп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("зП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("зр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("зР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("з");
								state = 13;	// "s";
								break;
							case 'S':
								sb.Append("з");
								state = 14;	// "S";
								break;
							case 't':
								sb.Append("зт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("зТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("зу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("зУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("зв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("зВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("зх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("зХ");
								state = 0;	// "";
								break;
							case 'z':
								sb.Append("з");
								break;
							case 'Z':
								sb.Append("з");
								state = 16;	// "Z";
								break;
							case 'п':
								sb.Append("зн");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("зН");
								state = 0;	// "";
								break;
							default:
								sb.Append("з");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 16:	// "Z"
						switch (c)
						{
							case '\'':
								sb.Append("З’");
								state = 0;	// "";
								break;
							case '#':
								sb.Append("З№");
								state = 0;	// "";
								break;
							case '`':
								sb.Append("S");
								state = 0;	// "";
								break;
							case 'a':
								sb.Append("За");
								state = 0;	// "";
								break;
							case 'A':
								sb.Append("ЗА");
								state = 0;	// "";
								break;
							case 'b':
								sb.Append("Зб");
								state = 0;	// "";
								break;
							case 'B':
								sb.Append("ЗБ");
								state = 0;	// "";
								break;
							case 'c':
								sb.Append("З");
								state = 1;	// "c";
								break;
							case 'C':
								sb.Append("З");
								state = 2;	// "C";
								break;
							case 'd':
								sb.Append("З");
								state = 3;	// "d";
								break;
							case 'D':
								sb.Append("З");
								state = 4;	// "D";
								break;
							case 'e':
								sb.Append("Зе");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("ЗЕ");
								state = 0;	// "";
								break;
							case 'f':
								sb.Append("Зф");
								state = 0;	// "";
								break;
							case 'F':
								sb.Append("ЗФ");
								state = 0;	// "";
								break;
							case 'g':
								sb.Append("З");
								state = 5;	// "g";
								break;
							case 'G':
								sb.Append("З");
								state = 6;	// "G";
								break;
							case 'h':
								sb.Append("Ж");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Зи");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("ЗИ");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Зj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("ЗJ");
								state = 0;	// "";
								break;
							case 'k':
								sb.Append("З");
								state = 7;	// "k";
								break;
							case 'K':
								sb.Append("З");
								state = 8;	// "K";
								break;
							case 'l':
								sb.Append("З");
								state = 9;	// "l";
								break;
							case 'L':
								sb.Append("З");
								state = 10;	// "L";
								break;
							case 'm':
								sb.Append("Зм");
								state = 0;	// "";
								break;
							case 'M':
								sb.Append("ЗМ");
								state = 0;	// "";
								break;
							case 'n':
								sb.Append("З");
								state = 11;	// "n";
								break;
							case 'N':
								sb.Append("З");
								state = 12;	// "N";
								break;
							case 'o':
								sb.Append("Зо");
								state = 0;	// "";
								break;
							case 'O':
								sb.Append("ЗО");
								state = 0;	// "";
								break;
							case 'p':
								sb.Append("Зп");
								state = 0;	// "";
								break;
							case 'P':
								sb.Append("ЗП");
								state = 0;	// "";
								break;
							case 'r':
								sb.Append("Зр");
								state = 0;	// "";
								break;
							case 'R':
								sb.Append("ЗР");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("З");
								state = 13;	// "s";
								break;
							case 'S':
								sb.Append("З");
								state = 14;	// "S";
								break;
							case 't':
								sb.Append("Зт");
								state = 0;	// "";
								break;
							case 'T':
								sb.Append("ЗТ");
								state = 0;	// "";
								break;
							case 'u':
								sb.Append("Зу");
								state = 0;	// "";
								break;
							case 'U':
								sb.Append("ЗУ");
								state = 0;	// "";
								break;
							case 'v':
								sb.Append("Зв");
								state = 0;	// "";
								break;
							case 'V':
								sb.Append("ЗВ");
								state = 0;	// "";
								break;
							case 'x':
								sb.Append("Зх");
								state = 0;	// "";
								break;
							case 'X':
								sb.Append("ЗХ");
								state = 0;	// "";
								break;
							case 'z':
								sb.Append("З");
								state = 15;	// "z";
								break;
							case 'Z':
								sb.Append("З");
								break;
							case 'п':
								sb.Append("Зн");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("ЗН");
								state = 0;	// "";
								break;
							default:
								sb.Append("З");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
				}
			}

			switch (state)
			{
				case 0:	// ""
					break;				
				case 1:	// "c"
					sb.Append("ц");
					break;				
				case 2:	// "C"
					sb.Append("Ц");
					break;				
				case 3:	// "d"
					sb.Append("д");
					break;				
				case 4:	// "D"
					sb.Append("Д");
					break;				
				case 5:	// "g"
					sb.Append("г");
					break;				
				case 6:	// "G"
					sb.Append("Г");
					break;				
				case 7:	// "k"
					sb.Append("к");
					break;				
				case 8:	// "K"
					sb.Append("К");
					break;				
				case 9:	// "l"
					sb.Append("л");
					break;				
				case 10:	// "L"
					sb.Append("Л");
					break;				
				case 11:	// "n"
					sb.Append("n");
					break;				
				case 12:	// "N"
					sb.Append("N");
					break;				
				case 13:	// "s"
					sb.Append("с");
					break;				
				case 14:	// "S"
					sb.Append("С");
					break;				
				case 15:	// "z"
					sb.Append("з");
					break;				
				case 16:	// "Z"
					sb.Append("З");
					break;				
			}
			return sb.ToString();
		}
	}
}






