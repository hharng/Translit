using System.Text;

// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Generated at 2018-09-18 17:11:21Z
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace NickBuhro.Translit
{
	partial class Transliteration
	{

		internal static string Cyrillic2LatinRussian(string text)
		{
			var sb = new StringBuilder();
			var state = 0;			
			for (var i = 0; i < text.Length; i++)
			{
				var c = text[i];
				switch (state)
				{
					case 0:	// ""
						switch (c)
						{
							case '’':
								sb.Append("\'");
								break;
							case 'i':
								sb.Append("i");
								break;
							case 'I':
								sb.Append("I");
								break;
							case '№':
								sb.Append("#");
								break;
							case 'а':
								sb.Append("a");
								break;
							case 'А':
								sb.Append("A");
								break;
							case 'б':
								sb.Append("b");
								break;
							case 'Б':
								sb.Append("B");
								break;
							case 'в':
								sb.Append("v");
								break;
							case 'В':
								sb.Append("V");
								break;
							case 'г':
								sb.Append("g");
								break;
							case 'Г':
								sb.Append("G");
								break;
							case 'д':
								sb.Append("d");
								break;
							case 'Д':
								sb.Append("D");
								break;
							case 'е':
								sb.Append("e");
								break;
							case 'Е':
								sb.Append("E");
								break;
							case 'ё':
								sb.Append("yo");
								break;
							case 'Ё':
								sb.Append("Yo");
								break;
							case 'ж':
								sb.Append("zh");
								break;
							case 'Ж':
								sb.Append("Zh");
								break;
							case 'з':
								sb.Append("z");
								break;
							case 'З':
								sb.Append("Z");
								break;
							case 'и':
								sb.Append("i");
								break;
							case 'И':
								sb.Append("I");
								break;
							case 'й':
								sb.Append("j");
								break;
							case 'Й':
								sb.Append("J");
								break;
							case 'к':
								sb.Append("k");
								break;
							case 'К':
								sb.Append("K");
								break;
							case 'л':
								sb.Append("l");
								break;
							case 'Л':
								sb.Append("L");
								break;
							case 'м':
								sb.Append("m");
								break;
							case 'М':
								sb.Append("M");
								break;
							case 'н':
								sb.Append("n");
								break;
							case 'Н':
								sb.Append("N");
								break;
							case 'о':
								sb.Append("o");
								break;
							case 'О':
								sb.Append("O");
								break;
							case 'п':
								sb.Append("p");
								break;
							case 'П':
								sb.Append("P");
								break;
							case 'р':
								sb.Append("r");
								break;
							case 'Р':
								sb.Append("R");
								break;
							case 'с':
								sb.Append("s");
								break;
							case 'С':
								sb.Append("S");
								break;
							case 'т':
								sb.Append("t");
								break;
							case 'Т':
								sb.Append("T");
								break;
							case 'у':
								sb.Append("u");
								break;
							case 'У':
								sb.Append("U");
								break;
							case 'ф':
								sb.Append("f");
								break;
							case 'Ф':
								sb.Append("F");
								break;
							case 'х':
								sb.Append("x");
								break;
							case 'Х':
								sb.Append("X");
								break;
							case 'ц':
								state = 1;	// "ц";
								break;
							case 'Ц':
								state = 2;	// "Ц";
								break;
							case 'ч':
								sb.Append("ch");
								break;
							case 'Ч':
								sb.Append("Ch");
								break;
							case 'ш':
								sb.Append("sh");
								break;
							case 'Ш':
								sb.Append("Sh");
								break;
							case 'щ':
								sb.Append("shh");
								break;
							case 'Щ':
								sb.Append("Shh");
								break;
							case 'ъ':
								sb.Append("``");
								break;
							case 'Ъ':
								sb.Append("``");
								break;
							case 'ы':
								sb.Append("y`");
								break;
							case 'Ы':
								sb.Append("Y`");
								break;
							case 'ь':
								sb.Append("`");
								break;
							case 'Ь':
								sb.Append("`");
								break;
							case 'э':
								sb.Append("e`");
								break;
							case 'Э':
								sb.Append("E`");
								break;
							case 'ю':
								sb.Append("yu");
								break;
							case 'Ю':
								sb.Append("Yu");
								break;
							case 'я':
								sb.Append("ya");
								break;
							case 'Я':
								sb.Append("Ya");
								break;
							case 'ѣ':
								sb.Append("ye");
								break;
							case 'Ѣ':
								sb.Append("Ye");
								break;
							case 'ѳ':
								sb.Append("fh");
								break;
							case 'Ѳ':
								sb.Append("Fh");
								break;
							case 'ѵ':
								sb.Append("yh");
								break;
							case 'Ѵ':
								sb.Append("Yh");
								break;
							default:
								sb.Append(c);
								break;
						}
						break;				
					case 1:	// "ц"
						switch (c)
						{
							case '’':
								sb.Append("cz\'");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("ce");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("cE");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("ci");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("cI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("cj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("cJ");
								state = 0;	// "";
								break;
							case '№':
								sb.Append("cz#");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("cy");
								state = 0;	// "";
								break;
							case 'Y':
								sb.Append("cY");
								state = 0;	// "";
								break;
							case 'а':
								sb.Append("cza");
								state = 0;	// "";
								break;
							case 'А':
								sb.Append("czA");
								state = 0;	// "";
								break;
							case 'б':
								sb.Append("czb");
								state = 0;	// "";
								break;
							case 'Б':
								sb.Append("czB");
								state = 0;	// "";
								break;
							case 'в':
								sb.Append("czv");
								state = 0;	// "";
								break;
							case 'В':
								sb.Append("czV");
								state = 0;	// "";
								break;
							case 'г':
								sb.Append("czg");
								state = 0;	// "";
								break;
							case 'Г':
								sb.Append("czG");
								state = 0;	// "";
								break;
							case 'д':
								sb.Append("czd");
								state = 0;	// "";
								break;
							case 'Д':
								sb.Append("czD");
								state = 0;	// "";
								break;
							case 'е':
								sb.Append("ce");
								state = 0;	// "";
								break;
							case 'Е':
								sb.Append("cE");
								state = 0;	// "";
								break;
							case 'ё':
								sb.Append("cyo");
								state = 0;	// "";
								break;
							case 'Ё':
								sb.Append("cYo");
								state = 0;	// "";
								break;
							case 'ж':
								sb.Append("czzh");
								state = 0;	// "";
								break;
							case 'Ж':
								sb.Append("czZh");
								state = 0;	// "";
								break;
							case 'з':
								sb.Append("czz");
								state = 0;	// "";
								break;
							case 'З':
								sb.Append("czZ");
								state = 0;	// "";
								break;
							case 'и':
								sb.Append("ci");
								state = 0;	// "";
								break;
							case 'И':
								sb.Append("cI");
								state = 0;	// "";
								break;
							case 'й':
								sb.Append("cj");
								state = 0;	// "";
								break;
							case 'Й':
								sb.Append("cJ");
								state = 0;	// "";
								break;
							case 'к':
								sb.Append("czk");
								state = 0;	// "";
								break;
							case 'К':
								sb.Append("czK");
								state = 0;	// "";
								break;
							case 'л':
								sb.Append("czl");
								state = 0;	// "";
								break;
							case 'Л':
								sb.Append("czL");
								state = 0;	// "";
								break;
							case 'м':
								sb.Append("czm");
								state = 0;	// "";
								break;
							case 'М':
								sb.Append("czM");
								state = 0;	// "";
								break;
							case 'н':
								sb.Append("czn");
								state = 0;	// "";
								break;
							case 'Н':
								sb.Append("czN");
								state = 0;	// "";
								break;
							case 'о':
								sb.Append("czo");
								state = 0;	// "";
								break;
							case 'О':
								sb.Append("czO");
								state = 0;	// "";
								break;
							case 'п':
								sb.Append("czp");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("czP");
								state = 0;	// "";
								break;
							case 'р':
								sb.Append("czr");
								state = 0;	// "";
								break;
							case 'Р':
								sb.Append("czR");
								state = 0;	// "";
								break;
							case 'с':
								sb.Append("czs");
								state = 0;	// "";
								break;
							case 'С':
								sb.Append("czS");
								state = 0;	// "";
								break;
							case 'т':
								sb.Append("czt");
								state = 0;	// "";
								break;
							case 'Т':
								sb.Append("czT");
								state = 0;	// "";
								break;
							case 'у':
								sb.Append("czu");
								state = 0;	// "";
								break;
							case 'У':
								sb.Append("czU");
								state = 0;	// "";
								break;
							case 'ф':
								sb.Append("czf");
								state = 0;	// "";
								break;
							case 'Ф':
								sb.Append("czF");
								state = 0;	// "";
								break;
							case 'х':
								sb.Append("czx");
								state = 0;	// "";
								break;
							case 'Х':
								sb.Append("czX");
								state = 0;	// "";
								break;
							case 'ц':
								sb.Append("cz");
								break;
							case 'Ц':
								sb.Append("cz");
								state = 2;	// "Ц";
								break;
							case 'ч':
								sb.Append("czch");
								state = 0;	// "";
								break;
							case 'Ч':
								sb.Append("czCh");
								state = 0;	// "";
								break;
							case 'ш':
								sb.Append("czsh");
								state = 0;	// "";
								break;
							case 'Ш':
								sb.Append("czSh");
								state = 0;	// "";
								break;
							case 'щ':
								sb.Append("czshh");
								state = 0;	// "";
								break;
							case 'Щ':
								sb.Append("czShh");
								state = 0;	// "";
								break;
							case 'ъ':
								sb.Append("cz``");
								state = 0;	// "";
								break;
							case 'Ъ':
								sb.Append("cz``");
								state = 0;	// "";
								break;
							case 'ы':
								sb.Append("cy`");
								state = 0;	// "";
								break;
							case 'Ы':
								sb.Append("cY`");
								state = 0;	// "";
								break;
							case 'ь':
								sb.Append("cz`");
								state = 0;	// "";
								break;
							case 'Ь':
								sb.Append("cz`");
								state = 0;	// "";
								break;
							case 'э':
								sb.Append("ce`");
								state = 0;	// "";
								break;
							case 'Э':
								sb.Append("cE`");
								state = 0;	// "";
								break;
							case 'ю':
								sb.Append("cyu");
								state = 0;	// "";
								break;
							case 'Ю':
								sb.Append("cYu");
								state = 0;	// "";
								break;
							case 'я':
								sb.Append("cya");
								state = 0;	// "";
								break;
							case 'Я':
								sb.Append("cYa");
								state = 0;	// "";
								break;
							case 'ѣ':
								sb.Append("cye");
								state = 0;	// "";
								break;
							case 'Ѣ':
								sb.Append("cYe");
								state = 0;	// "";
								break;
							case 'ѳ':
								sb.Append("czfh");
								state = 0;	// "";
								break;
							case 'Ѳ':
								sb.Append("czFh");
								state = 0;	// "";
								break;
							case 'ѵ':
								sb.Append("cyh");
								state = 0;	// "";
								break;
							case 'Ѵ':
								sb.Append("cYh");
								state = 0;	// "";
								break;
							default:
								sb.Append("cz");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 2:	// "Ц"
						switch (c)
						{
							case '’':
								sb.Append("Cz\'");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Ce");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("CE");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Ci");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("CI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Cj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("CJ");
								state = 0;	// "";
								break;
							case '№':
								sb.Append("Cz#");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Cy");
								state = 0;	// "";
								break;
							case 'Y':
								sb.Append("CY");
								state = 0;	// "";
								break;
							case 'а':
								sb.Append("Cza");
								state = 0;	// "";
								break;
							case 'А':
								sb.Append("CzA");
								state = 0;	// "";
								break;
							case 'б':
								sb.Append("Czb");
								state = 0;	// "";
								break;
							case 'Б':
								sb.Append("CzB");
								state = 0;	// "";
								break;
							case 'в':
								sb.Append("Czv");
								state = 0;	// "";
								break;
							case 'В':
								sb.Append("CzV");
								state = 0;	// "";
								break;
							case 'г':
								sb.Append("Czg");
								state = 0;	// "";
								break;
							case 'Г':
								sb.Append("CzG");
								state = 0;	// "";
								break;
							case 'д':
								sb.Append("Czd");
								state = 0;	// "";
								break;
							case 'Д':
								sb.Append("CzD");
								state = 0;	// "";
								break;
							case 'е':
								sb.Append("Ce");
								state = 0;	// "";
								break;
							case 'Е':
								sb.Append("CE");
								state = 0;	// "";
								break;
							case 'ё':
								sb.Append("Cyo");
								state = 0;	// "";
								break;
							case 'Ё':
								sb.Append("CYo");
								state = 0;	// "";
								break;
							case 'ж':
								sb.Append("Czzh");
								state = 0;	// "";
								break;
							case 'Ж':
								sb.Append("CzZh");
								state = 0;	// "";
								break;
							case 'з':
								sb.Append("Czz");
								state = 0;	// "";
								break;
							case 'З':
								sb.Append("CzZ");
								state = 0;	// "";
								break;
							case 'и':
								sb.Append("Ci");
								state = 0;	// "";
								break;
							case 'И':
								sb.Append("CI");
								state = 0;	// "";
								break;
							case 'й':
								sb.Append("Cj");
								state = 0;	// "";
								break;
							case 'Й':
								sb.Append("CJ");
								state = 0;	// "";
								break;
							case 'к':
								sb.Append("Czk");
								state = 0;	// "";
								break;
							case 'К':
								sb.Append("CzK");
								state = 0;	// "";
								break;
							case 'л':
								sb.Append("Czl");
								state = 0;	// "";
								break;
							case 'Л':
								sb.Append("CzL");
								state = 0;	// "";
								break;
							case 'м':
								sb.Append("Czm");
								state = 0;	// "";
								break;
							case 'М':
								sb.Append("CzM");
								state = 0;	// "";
								break;
							case 'н':
								sb.Append("Czn");
								state = 0;	// "";
								break;
							case 'Н':
								sb.Append("CzN");
								state = 0;	// "";
								break;
							case 'о':
								sb.Append("Czo");
								state = 0;	// "";
								break;
							case 'О':
								sb.Append("CzO");
								state = 0;	// "";
								break;
							case 'п':
								sb.Append("Czp");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("CzP");
								state = 0;	// "";
								break;
							case 'р':
								sb.Append("Czr");
								state = 0;	// "";
								break;
							case 'Р':
								sb.Append("CzR");
								state = 0;	// "";
								break;
							case 'с':
								sb.Append("Czs");
								state = 0;	// "";
								break;
							case 'С':
								sb.Append("CzS");
								state = 0;	// "";
								break;
							case 'т':
								sb.Append("Czt");
								state = 0;	// "";
								break;
							case 'Т':
								sb.Append("CzT");
								state = 0;	// "";
								break;
							case 'у':
								sb.Append("Czu");
								state = 0;	// "";
								break;
							case 'У':
								sb.Append("CzU");
								state = 0;	// "";
								break;
							case 'ф':
								sb.Append("Czf");
								state = 0;	// "";
								break;
							case 'Ф':
								sb.Append("CzF");
								state = 0;	// "";
								break;
							case 'х':
								sb.Append("Czx");
								state = 0;	// "";
								break;
							case 'Х':
								sb.Append("CzX");
								state = 0;	// "";
								break;
							case 'ц':
								sb.Append("Cz");
								state = 1;	// "ц";
								break;
							case 'Ц':
								sb.Append("Cz");
								break;
							case 'ч':
								sb.Append("Czch");
								state = 0;	// "";
								break;
							case 'Ч':
								sb.Append("CzCh");
								state = 0;	// "";
								break;
							case 'ш':
								sb.Append("Czsh");
								state = 0;	// "";
								break;
							case 'Ш':
								sb.Append("CzSh");
								state = 0;	// "";
								break;
							case 'щ':
								sb.Append("Czshh");
								state = 0;	// "";
								break;
							case 'Щ':
								sb.Append("CzShh");
								state = 0;	// "";
								break;
							case 'ъ':
								sb.Append("Cz``");
								state = 0;	// "";
								break;
							case 'Ъ':
								sb.Append("Cz``");
								state = 0;	// "";
								break;
							case 'ы':
								sb.Append("Cy`");
								state = 0;	// "";
								break;
							case 'Ы':
								sb.Append("CY`");
								state = 0;	// "";
								break;
							case 'ь':
								sb.Append("Cz`");
								state = 0;	// "";
								break;
							case 'Ь':
								sb.Append("Cz`");
								state = 0;	// "";
								break;
							case 'э':
								sb.Append("Ce`");
								state = 0;	// "";
								break;
							case 'Э':
								sb.Append("CE`");
								state = 0;	// "";
								break;
							case 'ю':
								sb.Append("Cyu");
								state = 0;	// "";
								break;
							case 'Ю':
								sb.Append("CYu");
								state = 0;	// "";
								break;
							case 'я':
								sb.Append("Cya");
								state = 0;	// "";
								break;
							case 'Я':
								sb.Append("CYa");
								state = 0;	// "";
								break;
							case 'ѣ':
								sb.Append("Cye");
								state = 0;	// "";
								break;
							case 'Ѣ':
								sb.Append("CYe");
								state = 0;	// "";
								break;
							case 'ѳ':
								sb.Append("Czfh");
								state = 0;	// "";
								break;
							case 'Ѳ':
								sb.Append("CzFh");
								state = 0;	// "";
								break;
							case 'ѵ':
								sb.Append("Cyh");
								state = 0;	// "";
								break;
							case 'Ѵ':
								sb.Append("CYh");
								state = 0;	// "";
								break;
							default:
								sb.Append("Cz");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
				}
			}

			switch (state)
			{
				case 0:	// ""
					break;				
				case 1:	// "ц"
					sb.Append("cz");
					break;				
				case 2:	// "Ц"
					sb.Append("Cz");
					break;				
			}
			return sb.ToString();
		}

        internal static string Latin2CyrillicRussian(string text)
		{
			//var sb = new StringBuilder(text.Length);
			var arr = new char[text.Length];
			var index = 0;

			var state = 0;			
			for (var i = 0; i < text.Length; i++)
			{
				var c = text[i];
				switch (state)
				{
					case 0:	// ""
						switch (c)
						{
							case '\'':
								//sb.Append("’");
								arr[index++] = '’';
								break;
							case '#':
								//sb.Append("№");
								arr[index++] = '№';
								break;
							case '`':
								state = 1;	// "`";
								break;
							case 'a':
								//sb.Append("а");
								arr[index++] = 'а';
								break;
							case 'A':
								//sb.Append("А");
								arr[index++] = 'А';
								break;
							case 'b':
								//sb.Append("б");
								arr[index++] = 'б';
								break;
							case 'B':
								//sb.Append("Б");
								arr[index++] = 'Б';
								break;
							case 'c':
								state = 2;	// "c";
								break;
							case 'C':
								state = 3;	// "C";
								break;
							case 'd':
								//sb.Append("д");
								arr[index++] = 'д';
								break;
							case 'D':
								//sb.Append("Д");
								arr[index++] = 'Д';
								break;
							case 'e':
								state = 4;	// "e";
								break;
							case 'E':
								state = 5;	// "E";
								break;
							case 'f':
								state = 6;	// "f";
								break;
							case 'F':
								state = 7;	// "F";
								break;
							case 'g':
								//sb.Append("г");
								arr[index++] = 'г';
								break;
							case 'G':
								//sb.Append("Г");
								arr[index++] = 'Г';
								break;
							case 'i':
								//sb.Append("и");
								arr[index++] = 'и';
								break;
							case 'I':
								//sb.Append("И");
								arr[index++] = 'И';
								break;
							case 'j':
								//sb.Append("й");
								arr[index++] = 'й';
								break;
							case 'J':
								//sb.Append("Й");
								arr[index++] = 'Й';
								break;
							case 'k':
								//sb.Append("к");
								arr[index++] = 'к';
								break;
							case 'K':
								//sb.Append("К");
								arr[index++] = 'К';
								break;
							case 'l':
								//sb.Append("л");
								arr[index++] = 'л';
								break;
							case 'L':
								//sb.Append("Л");
								arr[index++] = 'Л';
								break;
							case 'm':
								//sb.Append("м");
								arr[index++] = 'м';
								break;
							case 'M':
								//sb.Append("М");
								arr[index++] = 'М';
								break;
							case 'n':
								//sb.Append("н");
								arr[index++] = 'н';
								break;
							case 'N':
								//sb.Append("Н");
								arr[index++] = 'Н';
								break;
							case 'o':
								//sb.Append("о");
								arr[index++] = 'о';
								break;
							case 'O':
								//sb.Append("О");
								arr[index++] = 'О';
								break;
							case 'p':
								//sb.Append("п");
								arr[index++] = 'п';
								break;
							case 'P':
								//sb.Append("П");
								arr[index++] = 'П';
								break;
							case 'r':
								//sb.Append("р");
								arr[index++] = 'р';
								break;
							case 'R':
								//sb.Append("Р");
								arr[index++] = 'Р';
								break;
							case 's':
								state = 8;	// "s";
								break;
							case 'S':
								state = 9;	// "S";
								break;
							case 't':
								//sb.Append("т");
								arr[index++] = 'т';
								break;
							case 'T':
								//sb.Append("Т");
								arr[index++] = 'Т';
								break;
							case 'u':
								//sb.Append("у");
								arr[index++] = 'у';
								break;
							case 'U':
								//sb.Append("У");
								arr[index++] = 'У';
								break;
							case 'v':
								//sb.Append("в");
								arr[index++] = 'в';
								break;
							case 'V':
								//sb.Append("В");
								arr[index++] = 'В';
								break;
							case 'x':
								//sb.Append("х");
								arr[index++] = 'х';
								break;
							case 'X':
								//sb.Append("Х");
								arr[index++] = 'Х';
								break;
							case 'y':
								state = 12;	// "y";
								break;
							case 'Y':
								state = 13;	// "Y";
								break;
							case 'z':
								state = 14;	// "z";
								break;
							case 'Z':
								state = 15;	// "Z";
								break;
							default:
								//sb.Append(c);
								arr[index++] = c;
								break;
						}
						break;				
					case 1:	// "`"
						switch (c)
						{
							case '\'':
								//sb.Append("ь’");
								arr[index++] = 'ь';
								//sb.Append("ь’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("ь№");
								arr[index++] = 'ь';
								//sb.Append("ь№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("ъ");
								arr[index++] = 'ъ';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("ьа");
								arr[index++] = 'ь';
								//sb.Append("ьа");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("ьА");
								arr[index++] = 'ь';
								//sb.Append("ьА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("ьб");
								arr[index++] = 'ь';
								//sb.Append("ьб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("ьБ");
								arr[index++] = 'ь';
								//sb.Append("ьБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("ь");
								arr[index++] = 'ь';
								state = 2;	// "c";
								break;
							case 'C':
								//sb.Append("ь");
								arr[index++] = 'ь';
								state = 3;	// "C";
								break;
							case 'd':
								//sb.Append("ьд");
								arr[index++] = 'ь';
								//sb.Append("ьд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("ьД");
								arr[index++] = 'ь';
								//sb.Append("ьД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("ь");
								arr[index++] = 'ь';
								state = 4;	// "e";
								break;
							case 'E':
								//sb.Append("ь");
								arr[index++] = 'ь';
								state = 5;	// "E";
								break;
							case 'f':
								//sb.Append("ь");
								arr[index++] = 'ь';
								state = 6;	// "f";
								break;
							case 'F':
								//sb.Append("ь");
								arr[index++] = 'ь';
								state = 7;	// "F";
								break;
							case 'g':
								//sb.Append("ьг");
								arr[index++] = 'ь';
								//sb.Append("ьг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("ьГ");
								arr[index++] = 'ь';
								//sb.Append("ьГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("ьи");
								arr[index++] = 'ь';
								//sb.Append("ьи");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("ьИ");
								arr[index++] = 'ь';
								//sb.Append("ьИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("ьй");
								arr[index++] = 'ь';
								//sb.Append("ьй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("ьЙ");
								arr[index++] = 'ь';
								//sb.Append("ьЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("ьк");
								arr[index++] = 'ь';
								//sb.Append("ьк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("ьК");
								arr[index++] = 'ь';
								//sb.Append("ьК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("ьл");
								arr[index++] = 'ь';
								//sb.Append("ьл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("ьЛ");
								arr[index++] = 'ь';
								//sb.Append("ьЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("ьм");
								arr[index++] = 'ь';
								//sb.Append("ьм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("ьМ");
								arr[index++] = 'ь';
								//sb.Append("ьМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("ьн");
								arr[index++] = 'ь';
								//sb.Append("ьн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("ьН");
								arr[index++] = 'ь';
								//sb.Append("ьН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("ьо");
								arr[index++] = 'ь';
								//sb.Append("ьо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("ьО");
								arr[index++] = 'ь';
								//sb.Append("ьО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("ьп");
								arr[index++] = 'ь';
								//sb.Append("ьп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("ьП");
								arr[index++] = 'ь';
								//sb.Append("ьП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("ьр");
								arr[index++] = 'ь';
								//sb.Append("ьр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("ьР");
								arr[index++] = 'ь';
								//sb.Append("ьР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("ь");
								arr[index++] = 'ь';
								state = 8;	// "s";
								break;
							case 'S':
								//sb.Append("ь");
								arr[index++] = 'ь';
								state = 9;	// "S";
								break;
							case 't':
								//sb.Append("ьт");
								arr[index++] = 'ь';
								//sb.Append("ьт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("ьТ");
								arr[index++] = 'ь';
								//sb.Append("ьТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("ьу");
								arr[index++] = 'ь';
								//sb.Append("ьу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("ьУ");
								arr[index++] = 'ь';
								//sb.Append("ьУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("ьв");
								arr[index++] = 'ь';
								//sb.Append("ьв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("ьВ");
								arr[index++] = 'ь';
								//sb.Append("ьВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("ьх");
								arr[index++] = 'ь';
								//sb.Append("ьх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("ьХ");
								arr[index++] = 'ь';
								//sb.Append("ьХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("ь");
								arr[index++] = 'ь';
								state = 12;	// "y";
								break;
							case 'Y':
								//sb.Append("ь");
								arr[index++] = 'ь';
								state = 13;	// "Y";
								break;
							case 'z':
								//sb.Append("ь");
								arr[index++] = 'ь';
								state = 14;	// "z";
								break;
							case 'Z':
								//sb.Append("ь");
								arr[index++] = 'ь';
								state = 15;	// "Z";
								break;
							default:
								//sb.Append("ь");
								arr[index++] = 'ь';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 2:	// "c"
						switch (c)
						{
							case '\'':
								//sb.Append("ц’");
								arr[index++] = 'ц';
								//sb.Append("ц’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("ц№");
								arr[index++] = 'ц';
								//sb.Append("ц№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 1;	// "`";
								break;
							case 'a':
								//sb.Append("ца");
								arr[index++] = 'ц';
								//sb.Append("ца");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("цА");
								arr[index++] = 'ц';
								//sb.Append("цА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("цб");
								arr[index++] = 'ц';
								//sb.Append("цб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("цБ");
								arr[index++] = 'ц';
								//sb.Append("цБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("ц");
								arr[index++] = 'ц';
								break;
							case 'C':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 3;	// "C";
								break;
							case 'd':
								//sb.Append("цд");
								arr[index++] = 'ц';
								//sb.Append("цд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("цД");
								arr[index++] = 'ц';
								//sb.Append("цД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 4;	// "e";
								break;
							case 'E':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 5;	// "E";
								break;
							case 'f':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 6;	// "f";
								break;
							case 'F':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 7;	// "F";
								break;
							case 'g':
								//sb.Append("цг");
								arr[index++] = 'ц';
								//sb.Append("цг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("цГ");
								arr[index++] = 'ц';
								//sb.Append("цГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("ч");
								arr[index++] = 'ч';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("ци");
								arr[index++] = 'ц';
								//sb.Append("ци");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("цИ");
								arr[index++] = 'ц';
								//sb.Append("цИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("цй");
								arr[index++] = 'ц';
								//sb.Append("цй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("цЙ");
								arr[index++] = 'ц';
								//sb.Append("цЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("цк");
								arr[index++] = 'ц';
								//sb.Append("цк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("цК");
								arr[index++] = 'ц';
								//sb.Append("цК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("цл");
								arr[index++] = 'ц';
								//sb.Append("цл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("цЛ");
								arr[index++] = 'ц';
								//sb.Append("цЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("цм");
								arr[index++] = 'ц';
								//sb.Append("цм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("цМ");
								arr[index++] = 'ц';
								//sb.Append("цМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("цн");
								arr[index++] = 'ц';
								//sb.Append("цн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("цН");
								arr[index++] = 'ц';
								//sb.Append("цН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("цо");
								arr[index++] = 'ц';
								//sb.Append("цо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("цО");
								arr[index++] = 'ц';
								//sb.Append("цО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("цп");
								arr[index++] = 'ц';
								//sb.Append("цп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("цП");
								arr[index++] = 'ц';
								//sb.Append("цП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("цр");
								arr[index++] = 'ц';
								//sb.Append("цр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("цР");
								arr[index++] = 'ц';
								//sb.Append("цР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 8;	// "s";
								break;
							case 'S':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 9;	// "S";
								break;
							case 't':
								//sb.Append("цт");
								arr[index++] = 'ц';
								//sb.Append("цт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("цТ");
								arr[index++] = 'ц';
								//sb.Append("цТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("цу");
								arr[index++] = 'ц';
								//sb.Append("цу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("цУ");
								arr[index++] = 'ц';
								//sb.Append("цУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("цв");
								arr[index++] = 'ц';
								//sb.Append("цв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("цВ");
								arr[index++] = 'ц';
								//sb.Append("цВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("цх");
								arr[index++] = 'ц';
								//sb.Append("цх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("цХ");
								arr[index++] = 'ц';
								//sb.Append("цХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 12;	// "y";
								break;
							case 'Y':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 13;	// "Y";
								break;
							case 'z':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 0;	// "";
								break;
							case 'Z':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 15;	// "Z";
								break;
							default:
								//sb.Append("ц");
								arr[index++] = 'ц';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 3:	// "C"
						switch (c)
						{
							case '\'':
								//sb.Append("Ц’");
								arr[index++] = 'Ц';
								//sb.Append("Ц’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("Ц№");
								arr[index++] = 'Ц';
								//sb.Append("Ц№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 1;	// "`";
								break;
							case 'a':
								//sb.Append("Ца");
								arr[index++] = 'Ц';
								//sb.Append("Ца");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("ЦА");
								arr[index++] = 'Ц';
								//sb.Append("ЦА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Цб");
								arr[index++] = 'Ц';
								//sb.Append("Цб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("ЦБ");
								arr[index++] = 'Ц';
								//sb.Append("ЦБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 2;	// "c";
								break;
							case 'C':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								break;
							case 'd':
								//sb.Append("Цд");
								arr[index++] = 'Ц';
								//sb.Append("Цд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("ЦД");
								arr[index++] = 'Ц';
								//sb.Append("ЦД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 4;	// "e";
								break;
							case 'E':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 5;	// "E";
								break;
							case 'f':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 6;	// "f";
								break;
							case 'F':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 7;	// "F";
								break;
							case 'g':
								//sb.Append("Цг");
								arr[index++] = 'Ц';
								//sb.Append("Цг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("ЦГ");
								arr[index++] = 'Ц';
								//sb.Append("ЦГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("Ч");
								arr[index++] = 'Ч';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Ци");
								arr[index++] = 'Ц';
								//sb.Append("Ци");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("ЦИ");
								arr[index++] = 'Ц';
								//sb.Append("ЦИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Цй");
								arr[index++] = 'Ц';
								//sb.Append("Цй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("ЦЙ");
								arr[index++] = 'Ц';
								//sb.Append("ЦЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Цк");
								arr[index++] = 'Ц';
								//sb.Append("Цк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("ЦК");
								arr[index++] = 'Ц';
								//sb.Append("ЦК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Цл");
								arr[index++] = 'Ц';
								//sb.Append("Цл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("ЦЛ");
								arr[index++] = 'Ц';
								//sb.Append("ЦЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("Цм");
								arr[index++] = 'Ц';
								//sb.Append("Цм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("ЦМ");
								arr[index++] = 'Ц';
								//sb.Append("ЦМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Цн");
								arr[index++] = 'Ц';
								//sb.Append("Цн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("ЦН");
								arr[index++] = 'Ц';
								//sb.Append("ЦН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Цо");
								arr[index++] = 'Ц';
								//sb.Append("Цо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("ЦО");
								arr[index++] = 'Ц';
								//sb.Append("ЦО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Цп");
								arr[index++] = 'Ц';
								//sb.Append("Цп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("ЦП");
								arr[index++] = 'Ц';
								//sb.Append("ЦП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Цр");
								arr[index++] = 'Ц';
								//sb.Append("Цр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("ЦР");
								arr[index++] = 'Ц';
								//sb.Append("ЦР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 8;	// "s";
								break;
							case 'S':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 9;	// "S";
								break;
							case 't':
								//sb.Append("Цт");
								arr[index++] = 'Ц';
								//sb.Append("Цт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("ЦТ");
								arr[index++] = 'Ц';
								//sb.Append("ЦТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Цу");
								arr[index++] = 'Ц';
								//sb.Append("Цу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("ЦУ");
								arr[index++] = 'Ц';
								//sb.Append("ЦУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Цв");
								arr[index++] = 'Ц';
								//sb.Append("Цв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("ЦВ");
								arr[index++] = 'Ц';
								//sb.Append("ЦВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Цх");
								arr[index++] = 'Ц';
								//sb.Append("Цх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("ЦХ");
								arr[index++] = 'Ц';
								//sb.Append("ЦХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 12;	// "y";
								break;
							case 'Y':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 13;	// "Y";
								break;
							case 'z':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 0;	// "";
								break;
							case 'Z':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 15;	// "Z";
								break;
							default:
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 4:	// "e"
						switch (c)
						{
							case '\'':
								//sb.Append("е’");
								arr[index++] = 'е';
								//sb.Append("е’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("е№");
								arr[index++] = 'е';
								//sb.Append("е№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("э");
								arr[index++] = 'э';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("еа");
								arr[index++] = 'е';
								//sb.Append("еа");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("еА");
								arr[index++] = 'е';
								//sb.Append("еА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("еб");
								arr[index++] = 'е';
								//sb.Append("еб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("еБ");
								arr[index++] = 'е';
								//sb.Append("еБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("е");
								arr[index++] = 'е';
								state = 2;	// "c";
								break;
							case 'C':
								//sb.Append("е");
								arr[index++] = 'е';
								state = 3;	// "C";
								break;
							case 'd':
								//sb.Append("ед");
								arr[index++] = 'е';
								//sb.Append("ед");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("еД");
								arr[index++] = 'е';
								//sb.Append("еД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("е");
								arr[index++] = 'е';
								break;
							case 'E':
								//sb.Append("е");
								arr[index++] = 'е';
								state = 5;	// "E";
								break;
							case 'f':
								//sb.Append("е");
								arr[index++] = 'е';
								state = 6;	// "f";
								break;
							case 'F':
								//sb.Append("е");
								arr[index++] = 'е';
								state = 7;	// "F";
								break;
							case 'g':
								//sb.Append("ег");
								arr[index++] = 'е';
								//sb.Append("ег");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("еГ");
								arr[index++] = 'е';
								//sb.Append("еГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("еи");
								arr[index++] = 'е';
								//sb.Append("еи");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("еИ");
								arr[index++] = 'е';
								//sb.Append("еИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("ей");
								arr[index++] = 'е';
								//sb.Append("ей");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("еЙ");
								arr[index++] = 'е';
								//sb.Append("еЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("ек");
								arr[index++] = 'е';
								//sb.Append("ек");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("еК");
								arr[index++] = 'е';
								//sb.Append("еК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("ел");
								arr[index++] = 'е';
								//sb.Append("ел");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("еЛ");
								arr[index++] = 'е';
								//sb.Append("еЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("ем");
								arr[index++] = 'е';
								//sb.Append("ем");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("еМ");
								arr[index++] = 'е';
								//sb.Append("еМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("ен");
								arr[index++] = 'е';
								//sb.Append("ен");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("еН");
								arr[index++] = 'е';
								//sb.Append("еН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("ео");
								arr[index++] = 'е';
								//sb.Append("ео");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("еО");
								arr[index++] = 'е';
								//sb.Append("еО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("еп");
								arr[index++] = 'е';
								//sb.Append("еп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("еП");
								arr[index++] = 'е';
								//sb.Append("еП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("ер");
								arr[index++] = 'е';
								//sb.Append("ер");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("еР");
								arr[index++] = 'е';
								//sb.Append("еР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("е");
								arr[index++] = 'е';
								state = 8;	// "s";
								break;
							case 'S':
								//sb.Append("е");
								arr[index++] = 'е';
								state = 9;	// "S";
								break;
							case 't':
								//sb.Append("ет");
								arr[index++] = 'е';
								//sb.Append("ет");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("еТ");
								arr[index++] = 'е';
								//sb.Append("еТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("еу");
								arr[index++] = 'е';
								//sb.Append("еу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("еУ");
								arr[index++] = 'е';
								//sb.Append("еУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("ев");
								arr[index++] = 'е';
								//sb.Append("ев");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("еВ");
								arr[index++] = 'е';
								//sb.Append("еВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("ех");
								arr[index++] = 'е';
								//sb.Append("ех");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("еХ");
								arr[index++] = 'е';
								//sb.Append("еХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("е");
								arr[index++] = 'е';
								state = 12;	// "y";
								break;
							case 'Y':
								//sb.Append("е");
								arr[index++] = 'е';
								state = 13;	// "Y";
								break;
							case 'z':
								//sb.Append("е");
								arr[index++] = 'е';
								state = 14;	// "z";
								break;
							case 'Z':
								//sb.Append("е");
								arr[index++] = 'е';
								state = 15;	// "Z";
								break;
							default:
								//sb.Append("е");
								arr[index++] = 'е';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 5:	// "E"
						switch (c)
						{
							case '\'':
								//sb.Append("Е’");
								arr[index++] = 'Е';
								//sb.Append("Е’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("Е№");
								arr[index++] = 'Е';
								//sb.Append("Е№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Э");
								arr[index++] = 'Э';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("Еа");
								arr[index++] = 'Е';
								//sb.Append("Еа");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("ЕА");
								arr[index++] = 'Е';
								//sb.Append("ЕА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Еб");
								arr[index++] = 'Е';
								//sb.Append("Еб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("ЕБ");
								arr[index++] = 'Е';
								//sb.Append("ЕБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("Е");
								arr[index++] = 'Е';
								state = 2;	// "c";
								break;
							case 'C':
								//sb.Append("Е");
								arr[index++] = 'Е';
								state = 3;	// "C";
								break;
							case 'd':
								//sb.Append("Ед");
								arr[index++] = 'Е';
								//sb.Append("Ед");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("ЕД");
								arr[index++] = 'Е';
								//sb.Append("ЕД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("Е");
								arr[index++] = 'Е';
								state = 4;	// "e";
								break;
							case 'E':
								//sb.Append("Е");
								arr[index++] = 'Е';
								break;
							case 'f':
								//sb.Append("Е");
								arr[index++] = 'Е';
								state = 6;	// "f";
								break;
							case 'F':
								//sb.Append("Е");
								arr[index++] = 'Е';
								state = 7;	// "F";
								break;
							case 'g':
								//sb.Append("Ег");
								arr[index++] = 'Е';
								//sb.Append("Ег");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("ЕГ");
								arr[index++] = 'Е';
								//sb.Append("ЕГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Еи");
								arr[index++] = 'Е';
								//sb.Append("Еи");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("ЕИ");
								arr[index++] = 'Е';
								//sb.Append("ЕИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Ей");
								arr[index++] = 'Е';
								//sb.Append("Ей");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("ЕЙ");
								arr[index++] = 'Е';
								//sb.Append("ЕЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Ек");
								arr[index++] = 'Е';
								//sb.Append("Ек");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("ЕК");
								arr[index++] = 'Е';
								//sb.Append("ЕК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Ел");
								arr[index++] = 'Е';
								//sb.Append("Ел");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("ЕЛ");
								arr[index++] = 'Е';
								//sb.Append("ЕЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("Ем");
								arr[index++] = 'Е';
								//sb.Append("Ем");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("ЕМ");
								arr[index++] = 'Е';
								//sb.Append("ЕМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Ен");
								arr[index++] = 'Е';
								//sb.Append("Ен");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("ЕН");
								arr[index++] = 'Е';
								//sb.Append("ЕН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Ео");
								arr[index++] = 'Е';
								//sb.Append("Ео");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("ЕО");
								arr[index++] = 'Е';
								//sb.Append("ЕО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Еп");
								arr[index++] = 'Е';
								//sb.Append("Еп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("ЕП");
								arr[index++] = 'Е';
								//sb.Append("ЕП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Ер");
								arr[index++] = 'Е';
								//sb.Append("Ер");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("ЕР");
								arr[index++] = 'Е';
								//sb.Append("ЕР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("Е");
								arr[index++] = 'Е';
								state = 8;	// "s";
								break;
							case 'S':
								//sb.Append("Е");
								arr[index++] = 'Е';
								state = 9;	// "S";
								break;
							case 't':
								//sb.Append("Ет");
								arr[index++] = 'Е';
								//sb.Append("Ет");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("ЕТ");
								arr[index++] = 'Е';
								//sb.Append("ЕТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Еу");
								arr[index++] = 'Е';
								//sb.Append("Еу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("ЕУ");
								arr[index++] = 'Е';
								//sb.Append("ЕУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Ев");
								arr[index++] = 'Е';
								//sb.Append("Ев");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("ЕВ");
								arr[index++] = 'Е';
								//sb.Append("ЕВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Ех");
								arr[index++] = 'Е';
								//sb.Append("Ех");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("ЕХ");
								arr[index++] = 'Е';
								//sb.Append("ЕХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("Е");
								arr[index++] = 'Е';
								state = 12;	// "y";
								break;
							case 'Y':
								//sb.Append("Е");
								arr[index++] = 'Е';
								state = 13;	// "Y";
								break;
							case 'z':
								//sb.Append("Е");
								arr[index++] = 'Е';
								state = 14;	// "z";
								break;
							case 'Z':
								//sb.Append("Е");
								arr[index++] = 'Е';
								state = 15;	// "Z";
								break;
							default:
								//sb.Append("Е");
								arr[index++] = 'Е';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 6:	// "f"
						switch (c)
						{
							case '\'':
								//sb.Append("ф’");
								arr[index++] = 'ф';
								//sb.Append("ф’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("ф№");
								arr[index++] = 'ф';
								//sb.Append("ф№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 1;	// "`";
								break;
							case 'a':
								//sb.Append("фа");
								arr[index++] = 'ф';
								//sb.Append("фа");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("фА");
								arr[index++] = 'ф';
								//sb.Append("фА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("фб");
								arr[index++] = 'ф';
								//sb.Append("фб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("фБ");
								arr[index++] = 'ф';
								//sb.Append("фБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 2;	// "c";
								break;
							case 'C':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 3;	// "C";
								break;
							case 'd':
								//sb.Append("фд");
								arr[index++] = 'ф';
								//sb.Append("фд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("фД");
								arr[index++] = 'ф';
								//sb.Append("фД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 4;	// "e";
								break;
							case 'E':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 5;	// "E";
								break;
							case 'f':
								//sb.Append("ф");
								arr[index++] = 'ф';
								break;
							case 'F':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 7;	// "F";
								break;
							case 'g':
								//sb.Append("фг");
								arr[index++] = 'ф';
								//sb.Append("фг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("фГ");
								arr[index++] = 'ф';
								//sb.Append("фГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("ѳ");
								arr[index++] = 'ѳ';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("фи");
								arr[index++] = 'ф';
								//sb.Append("фи");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("фИ");
								arr[index++] = 'ф';
								//sb.Append("фИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("фй");
								arr[index++] = 'ф';
								//sb.Append("фй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("фЙ");
								arr[index++] = 'ф';
								//sb.Append("фЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("фк");
								arr[index++] = 'ф';
								//sb.Append("фк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("фК");
								arr[index++] = 'ф';
								//sb.Append("фК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("фл");
								arr[index++] = 'ф';
								//sb.Append("фл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("фЛ");
								arr[index++] = 'ф';
								//sb.Append("фЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("фм");
								arr[index++] = 'ф';
								//sb.Append("фм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("фМ");
								arr[index++] = 'ф';
								//sb.Append("фМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("фн");
								arr[index++] = 'ф';
								//sb.Append("фн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("фН");
								arr[index++] = 'ф';
								//sb.Append("фН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("фо");
								arr[index++] = 'ф';
								//sb.Append("фо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("фО");
								arr[index++] = 'ф';
								//sb.Append("фО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("фп");
								arr[index++] = 'ф';
								//sb.Append("фп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("фП");
								arr[index++] = 'ф';
								//sb.Append("фП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("фр");
								arr[index++] = 'ф';
								//sb.Append("фр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("фР");
								arr[index++] = 'ф';
								//sb.Append("фР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 8;	// "s";
								break;
							case 'S':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 9;	// "S";
								break;
							case 't':
								//sb.Append("фт");
								arr[index++] = 'ф';
								//sb.Append("фт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("фТ");
								arr[index++] = 'ф';
								//sb.Append("фТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("фу");
								arr[index++] = 'ф';
								//sb.Append("фу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("фУ");
								arr[index++] = 'ф';
								//sb.Append("фУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("фв");
								arr[index++] = 'ф';
								//sb.Append("фв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("фВ");
								arr[index++] = 'ф';
								//sb.Append("фВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("фх");
								arr[index++] = 'ф';
								//sb.Append("фх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("фХ");
								arr[index++] = 'ф';
								//sb.Append("фХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 12;	// "y";
								break;
							case 'Y':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 13;	// "Y";
								break;
							case 'z':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 14;	// "z";
								break;
							case 'Z':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 15;	// "Z";
								break;
							default:
								//sb.Append("ф");
								arr[index++] = 'ф';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 7:	// "F"
						switch (c)
						{
							case '\'':
								//sb.Append("Ф’");
								arr[index++] = 'Ф';
								//sb.Append("Ф’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("Ф№");
								arr[index++] = 'Ф';
								//sb.Append("Ф№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 1;	// "`";
								break;
							case 'a':
								//sb.Append("Фа");
								arr[index++] = 'Ф';
								//sb.Append("Фа");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("ФА");
								arr[index++] = 'Ф';
								//sb.Append("ФА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Фб");
								arr[index++] = 'Ф';
								//sb.Append("Фб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("ФБ");
								arr[index++] = 'Ф';
								//sb.Append("ФБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 2;	// "c";
								break;
							case 'C':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 3;	// "C";
								break;
							case 'd':
								//sb.Append("Фд");
								arr[index++] = 'Ф';
								//sb.Append("Фд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("ФД");
								arr[index++] = 'Ф';
								//sb.Append("ФД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 4;	// "e";
								break;
							case 'E':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 5;	// "E";
								break;
							case 'f':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 6;	// "f";
								break;
							case 'F':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								break;
							case 'g':
								//sb.Append("Фг");
								arr[index++] = 'Ф';
								//sb.Append("Фг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("ФГ");
								arr[index++] = 'Ф';
								//sb.Append("ФГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("Ѳ");
								arr[index++] = 'Ѳ';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Фи");
								arr[index++] = 'Ф';
								//sb.Append("Фи");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("ФИ");
								arr[index++] = 'Ф';
								//sb.Append("ФИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Фй");
								arr[index++] = 'Ф';
								//sb.Append("Фй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("ФЙ");
								arr[index++] = 'Ф';
								//sb.Append("ФЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Фк");
								arr[index++] = 'Ф';
								//sb.Append("Фк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("ФК");
								arr[index++] = 'Ф';
								//sb.Append("ФК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Фл");
								arr[index++] = 'Ф';
								//sb.Append("Фл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("ФЛ");
								arr[index++] = 'Ф';
								//sb.Append("ФЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("Фм");
								arr[index++] = 'Ф';
								//sb.Append("Фм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("ФМ");
								arr[index++] = 'Ф';
								//sb.Append("ФМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Фн");
								arr[index++] = 'Ф';
								//sb.Append("Фн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("ФН");
								arr[index++] = 'Ф';
								//sb.Append("ФН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Фо");
								arr[index++] = 'Ф';
								//sb.Append("Фо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("ФО");
								arr[index++] = 'Ф';
								//sb.Append("ФО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Фп");
								arr[index++] = 'Ф';
								//sb.Append("Фп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("ФП");
								arr[index++] = 'Ф';
								//sb.Append("ФП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Фр");
								arr[index++] = 'Ф';
								//sb.Append("Фр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("ФР");
								arr[index++] = 'Ф';
								//sb.Append("ФР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 8;	// "s";
								break;
							case 'S':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 9;	// "S";
								break;
							case 't':
								//sb.Append("Фт");
								arr[index++] = 'Ф';
								//sb.Append("Фт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("ФТ");
								arr[index++] = 'Ф';
								//sb.Append("ФТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Фу");
								arr[index++] = 'Ф';
								//sb.Append("Фу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("ФУ");
								arr[index++] = 'Ф';
								//sb.Append("ФУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Фв");
								arr[index++] = 'Ф';
								//sb.Append("Фв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("ФВ");
								arr[index++] = 'Ф';
								//sb.Append("ФВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Фх");
								arr[index++] = 'Ф';
								//sb.Append("Фх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("ФХ");
								arr[index++] = 'Ф';
								//sb.Append("ФХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 12;	// "y";
								break;
							case 'Y':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 13;	// "Y";
								break;
							case 'z':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 14;	// "z";
								break;
							case 'Z':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 15;	// "Z";
								break;
							default:
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 8:	// "s"
						switch (c)
						{
							case '\'':
								//sb.Append("с’");
								arr[index++] = 'с';
								//sb.Append("с’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("с№");
								arr[index++] = 'с';
								//sb.Append("с№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 1;	// "`";
								break;
							case 'a':
								//sb.Append("са");
								arr[index++] = 'с';
								//sb.Append("са");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("сА");
								arr[index++] = 'с';
								//sb.Append("сА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("сб");
								arr[index++] = 'с';
								//sb.Append("сб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("сБ");
								arr[index++] = 'с';
								//sb.Append("сБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 2;	// "c";
								break;
							case 'C':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 3;	// "C";
								break;
							case 'd':
								//sb.Append("сд");
								arr[index++] = 'с';
								//sb.Append("сд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("сД");
								arr[index++] = 'с';
								//sb.Append("сД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 4;	// "e";
								break;
							case 'E':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 5;	// "E";
								break;
							case 'f':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 6;	// "f";
								break;
							case 'F':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 7;	// "F";
								break;
							case 'g':
								//sb.Append("сг");
								arr[index++] = 'с';
								//sb.Append("сг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("сГ");
								arr[index++] = 'с';
								//sb.Append("сГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'h':
								state = 10;	// "sh";
								break;
							case 'i':
								//sb.Append("си");
								arr[index++] = 'с';
								//sb.Append("си");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("сИ");
								arr[index++] = 'с';
								//sb.Append("сИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("сй");
								arr[index++] = 'с';
								//sb.Append("сй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("сЙ");
								arr[index++] = 'с';
								//sb.Append("сЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("ск");
								arr[index++] = 'с';
								//sb.Append("ск");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("сК");
								arr[index++] = 'с';
								//sb.Append("сК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("сл");
								arr[index++] = 'с';
								//sb.Append("сл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("сЛ");
								arr[index++] = 'с';
								//sb.Append("сЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("см");
								arr[index++] = 'с';
								//sb.Append("см");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("сМ");
								arr[index++] = 'с';
								//sb.Append("сМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("сн");
								arr[index++] = 'с';
								//sb.Append("сн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("сН");
								arr[index++] = 'с';
								//sb.Append("сН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("со");
								arr[index++] = 'с';
								//sb.Append("со");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("сО");
								arr[index++] = 'с';
								//sb.Append("сО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("сп");
								arr[index++] = 'с';
								//sb.Append("сп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("сП");
								arr[index++] = 'с';
								//sb.Append("сП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("ср");
								arr[index++] = 'с';
								//sb.Append("ср");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("сР");
								arr[index++] = 'с';
								//sb.Append("сР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("с");
								arr[index++] = 'с';
								break;
							case 'S':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 9;	// "S";
								break;
							case 't':
								//sb.Append("ст");
								arr[index++] = 'с';
								//sb.Append("ст");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("сТ");
								arr[index++] = 'с';
								//sb.Append("сТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("су");
								arr[index++] = 'с';
								//sb.Append("су");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("сУ");
								arr[index++] = 'с';
								//sb.Append("сУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("св");
								arr[index++] = 'с';
								//sb.Append("св");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("сВ");
								arr[index++] = 'с';
								//sb.Append("сВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("сх");
								arr[index++] = 'с';
								//sb.Append("сх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("сХ");
								arr[index++] = 'с';
								//sb.Append("сХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 12;	// "y";
								break;
							case 'Y':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 13;	// "Y";
								break;
							case 'z':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 14;	// "z";
								break;
							case 'Z':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 15;	// "Z";
								break;
							default:
								//sb.Append("с");
								arr[index++] = 'с';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 9:	// "S"
						switch (c)
						{
							case '\'':
								//sb.Append("С’");
								arr[index++] = 'С';
								//sb.Append("С’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("С№");
								arr[index++] = 'С';
								//sb.Append("С№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 1;	// "`";
								break;
							case 'a':
								//sb.Append("Са");
								arr[index++] = 'С';
								//sb.Append("Са");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("СА");
								arr[index++] = 'С';
								//sb.Append("СА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Сб");
								arr[index++] = 'С';
								//sb.Append("Сб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("СБ");
								arr[index++] = 'С';
								//sb.Append("СБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 2;	// "c";
								break;
							case 'C':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 3;	// "C";
								break;
							case 'd':
								//sb.Append("Сд");
								arr[index++] = 'С';
								//sb.Append("Сд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("СД");
								arr[index++] = 'С';
								//sb.Append("СД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 4;	// "e";
								break;
							case 'E':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 5;	// "E";
								break;
							case 'f':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 6;	// "f";
								break;
							case 'F':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 7;	// "F";
								break;
							case 'g':
								//sb.Append("Сг");
								arr[index++] = 'С';
								//sb.Append("Сг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("СГ");
								arr[index++] = 'С';
								//sb.Append("СГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'h':
								state = 11;	// "Sh";
								break;
							case 'i':
								//sb.Append("Си");
								arr[index++] = 'С';
								//sb.Append("Си");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("СИ");
								arr[index++] = 'С';
								//sb.Append("СИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Сй");
								arr[index++] = 'С';
								//sb.Append("Сй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("СЙ");
								arr[index++] = 'С';
								//sb.Append("СЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Ск");
								arr[index++] = 'С';
								//sb.Append("Ск");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("СК");
								arr[index++] = 'С';
								//sb.Append("СК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Сл");
								arr[index++] = 'С';
								//sb.Append("Сл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("СЛ");
								arr[index++] = 'С';
								//sb.Append("СЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("См");
								arr[index++] = 'С';
								//sb.Append("См");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("СМ");
								arr[index++] = 'С';
								//sb.Append("СМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Сн");
								arr[index++] = 'С';
								//sb.Append("Сн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("СН");
								arr[index++] = 'С';
								//sb.Append("СН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Со");
								arr[index++] = 'С';
								//sb.Append("Со");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("СО");
								arr[index++] = 'С';
								//sb.Append("СО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Сп");
								arr[index++] = 'С';
								//sb.Append("Сп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("СП");
								arr[index++] = 'С';
								//sb.Append("СП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Ср");
								arr[index++] = 'С';
								//sb.Append("Ср");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("СР");
								arr[index++] = 'С';
								//sb.Append("СР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 8;	// "s";
								break;
							case 'S':
								//sb.Append("С");
								arr[index++] = 'С';
								break;
							case 't':
								//sb.Append("Ст");
								arr[index++] = 'С';
								//sb.Append("Ст");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("СТ");
								arr[index++] = 'С';
								//sb.Append("СТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Су");
								arr[index++] = 'С';
								//sb.Append("Су");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("СУ");
								arr[index++] = 'С';
								//sb.Append("СУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Св");
								arr[index++] = 'С';
								//sb.Append("Св");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("СВ");
								arr[index++] = 'С';
								//sb.Append("СВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Сх");
								arr[index++] = 'С';
								//sb.Append("Сх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("СХ");
								arr[index++] = 'С';
								//sb.Append("СХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 12;	// "y";
								break;
							case 'Y':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 13;	// "Y";
								break;
							case 'z':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 14;	// "z";
								break;
							case 'Z':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 15;	// "Z";
								break;
							default:
								//sb.Append("С");
								arr[index++] = 'С';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 10:	// "sh"
						switch (c)
						{
							case '\'':
								//sb.Append("ш’");
								arr[index++] = 'ш';
								//sb.Append("ш’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("ш№");
								arr[index++] = 'ш';
								//sb.Append("ш№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 1;	// "`";
								break;
							case 'a':
								//sb.Append("ша");
								arr[index++] = 'ш';
								//sb.Append("ша");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("шА");
								arr[index++] = 'ш';
								//sb.Append("шА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("шб");
								arr[index++] = 'ш';
								//sb.Append("шб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("шБ");
								arr[index++] = 'ш';
								//sb.Append("шБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 2;	// "c";
								break;
							case 'C':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 3;	// "C";
								break;
							case 'd':
								//sb.Append("шд");
								arr[index++] = 'ш';
								//sb.Append("шд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("шД");
								arr[index++] = 'ш';
								//sb.Append("шД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 4;	// "e";
								break;
							case 'E':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 5;	// "E";
								break;
							case 'f':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 6;	// "f";
								break;
							case 'F':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 7;	// "F";
								break;
							case 'g':
								//sb.Append("шг");
								arr[index++] = 'ш';
								//sb.Append("шг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("шГ");
								arr[index++] = 'ш';
								//sb.Append("шГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("щ");
								arr[index++] = 'щ';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("ши");
								arr[index++] = 'ш';
								//sb.Append("ши");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("шИ");
								arr[index++] = 'ш';
								//sb.Append("шИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("шй");
								arr[index++] = 'ш';
								//sb.Append("шй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("шЙ");
								arr[index++] = 'ш';
								//sb.Append("шЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("шк");
								arr[index++] = 'ш';
								//sb.Append("шк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("шК");
								arr[index++] = 'ш';
								//sb.Append("шК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("шл");
								arr[index++] = 'ш';
								//sb.Append("шл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("шЛ");
								arr[index++] = 'ш';
								//sb.Append("шЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("шм");
								arr[index++] = 'ш';
								//sb.Append("шм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("шМ");
								arr[index++] = 'ш';
								//sb.Append("шМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("шн");
								arr[index++] = 'ш';
								//sb.Append("шн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("шН");
								arr[index++] = 'ш';
								//sb.Append("шН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("шо");
								arr[index++] = 'ш';
								//sb.Append("шо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("шО");
								arr[index++] = 'ш';
								//sb.Append("шО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("шп");
								arr[index++] = 'ш';
								//sb.Append("шп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("шП");
								arr[index++] = 'ш';
								//sb.Append("шП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("шр");
								arr[index++] = 'ш';
								//sb.Append("шр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("шР");
								arr[index++] = 'ш';
								//sb.Append("шР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 8;	// "s";
								break;
							case 'S':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 9;	// "S";
								break;
							case 't':
								//sb.Append("шт");
								arr[index++] = 'ш';
								//sb.Append("шт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("шТ");
								arr[index++] = 'ш';
								//sb.Append("шТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("шу");
								arr[index++] = 'ш';
								//sb.Append("шу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("шУ");
								arr[index++] = 'ш';
								//sb.Append("шУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("шв");
								arr[index++] = 'ш';
								//sb.Append("шв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("шВ");
								arr[index++] = 'ш';
								//sb.Append("шВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("шх");
								arr[index++] = 'ш';
								//sb.Append("шх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("шХ");
								arr[index++] = 'ш';
								//sb.Append("шХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 12;	// "y";
								break;
							case 'Y':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 13;	// "Y";
								break;
							case 'z':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 14;	// "z";
								break;
							case 'Z':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 15;	// "Z";
								break;
							default:
								//sb.Append("ш");
								arr[index++] = 'ш';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 11:	// "Sh"
						switch (c)
						{
							case '\'':
								//sb.Append("Ш’");
								arr[index++] = 'Ш';
								//sb.Append("Ш’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("Ш№");
								arr[index++] = 'Ш';
								//sb.Append("Ш№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 1;	// "`";
								break;
							case 'a':
								//sb.Append("Ша");
								arr[index++] = 'Ш';
								//sb.Append("Ша");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("ША");
								arr[index++] = 'Ш';
								//sb.Append("ША");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Шб");
								arr[index++] = 'Ш';
								//sb.Append("Шб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("ШБ");
								arr[index++] = 'Ш';
								//sb.Append("ШБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 2;	// "c";
								break;
							case 'C':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 3;	// "C";
								break;
							case 'd':
								//sb.Append("Шд");
								arr[index++] = 'Ш';
								//sb.Append("Шд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("ШД");
								arr[index++] = 'Ш';
								//sb.Append("ШД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 4;	// "e";
								break;
							case 'E':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 5;	// "E";
								break;
							case 'f':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 6;	// "f";
								break;
							case 'F':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 7;	// "F";
								break;
							case 'g':
								//sb.Append("Шг");
								arr[index++] = 'Ш';
								//sb.Append("Шг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("ШГ");
								arr[index++] = 'Ш';
								//sb.Append("ШГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("Щ");
								arr[index++] = 'Щ';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Ши");
								arr[index++] = 'Ш';
								//sb.Append("Ши");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("ШИ");
								arr[index++] = 'Ш';
								//sb.Append("ШИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Шй");
								arr[index++] = 'Ш';
								//sb.Append("Шй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("ШЙ");
								arr[index++] = 'Ш';
								//sb.Append("ШЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Шк");
								arr[index++] = 'Ш';
								//sb.Append("Шк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("ШК");
								arr[index++] = 'Ш';
								//sb.Append("ШК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Шл");
								arr[index++] = 'Ш';
								//sb.Append("Шл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("ШЛ");
								arr[index++] = 'Ш';
								//sb.Append("ШЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("Шм");
								arr[index++] = 'Ш';
								//sb.Append("Шм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("ШМ");
								arr[index++] = 'Ш';
								//sb.Append("ШМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Шн");
								arr[index++] = 'Ш';
								//sb.Append("Шн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("ШН");
								arr[index++] = 'Ш';
								//sb.Append("ШН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Шо");
								arr[index++] = 'Ш';
								//sb.Append("Шо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("ШО");
								arr[index++] = 'Ш';
								//sb.Append("ШО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Шп");
								arr[index++] = 'Ш';
								//sb.Append("Шп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("ШП");
								arr[index++] = 'Ш';
								//sb.Append("ШП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Шр");
								arr[index++] = 'Ш';
								//sb.Append("Шр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("ШР");
								arr[index++] = 'Ш';
								//sb.Append("ШР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 8;	// "s";
								break;
							case 'S':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 9;	// "S";
								break;
							case 't':
								//sb.Append("Шт");
								arr[index++] = 'Ш';
								//sb.Append("Шт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("ШТ");
								arr[index++] = 'Ш';
								//sb.Append("ШТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Шу");
								arr[index++] = 'Ш';
								//sb.Append("Шу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("ШУ");
								arr[index++] = 'Ш';
								//sb.Append("ШУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Шв");
								arr[index++] = 'Ш';
								//sb.Append("Шв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("ШВ");
								arr[index++] = 'Ш';
								//sb.Append("ШВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Шх");
								arr[index++] = 'Ш';
								//sb.Append("Шх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("ШХ");
								arr[index++] = 'Ш';
								//sb.Append("ШХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 12;	// "y";
								break;
							case 'Y':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 13;	// "Y";
								break;
							case 'z':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 14;	// "z";
								break;
							case 'Z':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 15;	// "Z";
								break;
							default:
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 12:	// "y"
						switch (c)
						{
							case '\'':
								//sb.Append("y’");
								arr[index++] = 'y';
								//sb.Append("y’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("y№");
								arr[index++] = 'y';
								//sb.Append("y№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("ы");
								arr[index++] = 'ы';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("я");
								arr[index++] = 'я';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("yА");
								arr[index++] = 'y';
								//sb.Append("yА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("yб");
								arr[index++] = 'y';
								//sb.Append("yб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("yБ");
								arr[index++] = 'y';
								//sb.Append("yБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 2;	// "c";
								break;
							case 'C':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 3;	// "C";
								break;
							case 'd':
								//sb.Append("yд");
								arr[index++] = 'y';
								//sb.Append("yд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("yД");
								arr[index++] = 'y';
								//sb.Append("yД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("ѣ");
								arr[index++] = 'ѣ';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 5;	// "E";
								break;
							case 'f':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 6;	// "f";
								break;
							case 'F':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 7;	// "F";
								break;
							case 'g':
								//sb.Append("yг");
								arr[index++] = 'y';
								//sb.Append("yг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("yГ");
								arr[index++] = 'y';
								//sb.Append("yГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("ѵ");
								arr[index++] = 'ѵ';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("yи");
								arr[index++] = 'y';
								//sb.Append("yи");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("yИ");
								arr[index++] = 'y';
								//sb.Append("yИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("yй");
								arr[index++] = 'y';
								//sb.Append("yй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("yЙ");
								arr[index++] = 'y';
								//sb.Append("yЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("yк");
								arr[index++] = 'y';
								//sb.Append("yк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("yК");
								arr[index++] = 'y';
								//sb.Append("yК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("yл");
								arr[index++] = 'y';
								//sb.Append("yл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("yЛ");
								arr[index++] = 'y';
								//sb.Append("yЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("yм");
								arr[index++] = 'y';
								//sb.Append("yм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("yМ");
								arr[index++] = 'y';
								//sb.Append("yМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("yн");
								arr[index++] = 'y';
								//sb.Append("yн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("yН");
								arr[index++] = 'y';
								//sb.Append("yН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("ё");
								arr[index++] = 'ё';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("yО");
								arr[index++] = 'y';
								//sb.Append("yО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("yп");
								arr[index++] = 'y';
								//sb.Append("yп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("yП");
								arr[index++] = 'y';
								//sb.Append("yП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("yр");
								arr[index++] = 'y';
								//sb.Append("yр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("yР");
								arr[index++] = 'y';
								//sb.Append("yР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 8;	// "s";
								break;
							case 'S':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 9;	// "S";
								break;
							case 't':
								//sb.Append("yт");
								arr[index++] = 'y';
								//sb.Append("yт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("yТ");
								arr[index++] = 'y';
								//sb.Append("yТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("ю");
								arr[index++] = 'ю';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("yУ");
								arr[index++] = 'y';
								//sb.Append("yУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("yв");
								arr[index++] = 'y';
								//sb.Append("yв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("yВ");
								arr[index++] = 'y';
								//sb.Append("yВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("yх");
								arr[index++] = 'y';
								//sb.Append("yх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("yХ");
								arr[index++] = 'y';
								//sb.Append("yХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("y");
								arr[index++] = 'y';
								break;
							case 'Y':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 13;	// "Y";
								break;
							case 'z':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 14;	// "z";
								break;
							case 'Z':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 15;	// "Z";
								break;
							default:
								//sb.Append("y");
								arr[index++] = 'y';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 13:	// "Y"
						switch (c)
						{
							case '\'':
								//sb.Append("Y’");
								arr[index++] = 'Y';
								//sb.Append("Y’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("Y№");
								arr[index++] = 'Y';
								//sb.Append("Y№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Ы");
								arr[index++] = 'Ы';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("Я");
								arr[index++] = 'Я';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("YА");
								arr[index++] = 'Y';
								//sb.Append("YА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Yб");
								arr[index++] = 'Y';
								//sb.Append("Yб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("YБ");
								arr[index++] = 'Y';
								//sb.Append("YБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 2;	// "c";
								break;
							case 'C':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 3;	// "C";
								break;
							case 'd':
								//sb.Append("Yд");
								arr[index++] = 'Y';
								//sb.Append("Yд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("YД");
								arr[index++] = 'Y';
								//sb.Append("YД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("Ѣ");
								arr[index++] = 'Ѣ';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 5;	// "E";
								break;
							case 'f':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 6;	// "f";
								break;
							case 'F':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 7;	// "F";
								break;
							case 'g':
								//sb.Append("Yг");
								arr[index++] = 'Y';
								//sb.Append("Yг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("YГ");
								arr[index++] = 'Y';
								//sb.Append("YГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("Ѵ");
								arr[index++] = 'Ѵ';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Yи");
								arr[index++] = 'Y';
								//sb.Append("Yи");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("YИ");
								arr[index++] = 'Y';
								//sb.Append("YИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Yй");
								arr[index++] = 'Y';
								//sb.Append("Yй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("YЙ");
								arr[index++] = 'Y';
								//sb.Append("YЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Yк");
								arr[index++] = 'Y';
								//sb.Append("Yк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("YК");
								arr[index++] = 'Y';
								//sb.Append("YК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Yл");
								arr[index++] = 'Y';
								//sb.Append("Yл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("YЛ");
								arr[index++] = 'Y';
								//sb.Append("YЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("Yм");
								arr[index++] = 'Y';
								//sb.Append("Yм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("YМ");
								arr[index++] = 'Y';
								//sb.Append("YМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Yн");
								arr[index++] = 'Y';
								//sb.Append("Yн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("YН");
								arr[index++] = 'Y';
								//sb.Append("YН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Ё");
								arr[index++] = 'Ё';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("YО");
								arr[index++] = 'Y';
								//sb.Append("YО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Yп");
								arr[index++] = 'Y';
								//sb.Append("Yп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("YП");
								arr[index++] = 'Y';
								//sb.Append("YП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Yр");
								arr[index++] = 'Y';
								//sb.Append("Yр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("YР");
								arr[index++] = 'Y';
								//sb.Append("YР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 8;	// "s";
								break;
							case 'S':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 9;	// "S";
								break;
							case 't':
								//sb.Append("Yт");
								arr[index++] = 'Y';
								//sb.Append("Yт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("YТ");
								arr[index++] = 'Y';
								//sb.Append("YТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Ю");
								arr[index++] = 'Ю';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("YУ");
								arr[index++] = 'Y';
								//sb.Append("YУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Yв");
								arr[index++] = 'Y';
								//sb.Append("Yв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("YВ");
								arr[index++] = 'Y';
								//sb.Append("YВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Yх");
								arr[index++] = 'Y';
								//sb.Append("Yх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("YХ");
								arr[index++] = 'Y';
								//sb.Append("YХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 12;	// "y";
								break;
							case 'Y':
								//sb.Append("Y");
								arr[index++] = 'Y';
								break;
							case 'z':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 14;	// "z";
								break;
							case 'Z':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 15;	// "Z";
								break;
							default:
								//sb.Append("Y");
								arr[index++] = 'Y';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 14:	// "z"
						switch (c)
						{
							case '\'':
								//sb.Append("з’");
								arr[index++] = 'з';
								//sb.Append("з’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("з№");
								arr[index++] = 'з';
								//sb.Append("з№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 1;	// "`";
								break;
							case 'a':
								//sb.Append("за");
								arr[index++] = 'з';
								//sb.Append("за");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("зА");
								arr[index++] = 'з';
								//sb.Append("зА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("зб");
								arr[index++] = 'з';
								//sb.Append("зб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("зБ");
								arr[index++] = 'з';
								//sb.Append("зБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 2;	// "c";
								break;
							case 'C':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 3;	// "C";
								break;
							case 'd':
								//sb.Append("зд");
								arr[index++] = 'з';
								//sb.Append("зд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("зД");
								arr[index++] = 'з';
								//sb.Append("зД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 4;	// "e";
								break;
							case 'E':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 5;	// "E";
								break;
							case 'f':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 6;	// "f";
								break;
							case 'F':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 7;	// "F";
								break;
							case 'g':
								//sb.Append("зг");
								arr[index++] = 'з';
								//sb.Append("зг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("зГ");
								arr[index++] = 'з';
								//sb.Append("зГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("ж");
								arr[index++] = 'ж';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("зи");
								arr[index++] = 'з';
								//sb.Append("зи");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("зИ");
								arr[index++] = 'з';
								//sb.Append("зИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("зй");
								arr[index++] = 'з';
								//sb.Append("зй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("зЙ");
								arr[index++] = 'з';
								//sb.Append("зЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("зк");
								arr[index++] = 'з';
								//sb.Append("зк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("зК");
								arr[index++] = 'з';
								//sb.Append("зК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("зл");
								arr[index++] = 'з';
								//sb.Append("зл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("зЛ");
								arr[index++] = 'з';
								//sb.Append("зЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("зм");
								arr[index++] = 'з';
								//sb.Append("зм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("зМ");
								arr[index++] = 'з';
								//sb.Append("зМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("зн");
								arr[index++] = 'з';
								//sb.Append("зн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("зН");
								arr[index++] = 'з';
								//sb.Append("зН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("зо");
								arr[index++] = 'з';
								//sb.Append("зо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("зО");
								arr[index++] = 'з';
								//sb.Append("зО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("зп");
								arr[index++] = 'з';
								//sb.Append("зп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("зП");
								arr[index++] = 'з';
								//sb.Append("зП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("зр");
								arr[index++] = 'з';
								//sb.Append("зр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("зР");
								arr[index++] = 'з';
								//sb.Append("зР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 8;	// "s";
								break;
							case 'S':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 9;	// "S";
								break;
							case 't':
								//sb.Append("зт");
								arr[index++] = 'з';
								//sb.Append("зт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("зТ");
								arr[index++] = 'з';
								//sb.Append("зТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("зу");
								arr[index++] = 'з';
								//sb.Append("зу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("зУ");
								arr[index++] = 'з';
								//sb.Append("зУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("зв");
								arr[index++] = 'з';
								//sb.Append("зв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("зВ");
								arr[index++] = 'з';
								//sb.Append("зВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("зх");
								arr[index++] = 'з';
								//sb.Append("зх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("зХ");
								arr[index++] = 'з';
								//sb.Append("зХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 12;	// "y";
								break;
							case 'Y':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 13;	// "Y";
								break;
							case 'z':
								//sb.Append("з");
								arr[index++] = 'з';
								break;
							case 'Z':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 15;	// "Z";
								break;
							default:
								//sb.Append("з");
								arr[index++] = 'з';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 15:	// "Z"
						switch (c)
						{
							case '\'':
								//sb.Append("З’");
								arr[index++] = 'З';
								//sb.Append("З’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("З№");
								arr[index++] = 'З';
								//sb.Append("З№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 1;	// "`";
								break;
							case 'a':
								//sb.Append("За");
								arr[index++] = 'З';
								//sb.Append("За");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("ЗА");
								arr[index++] = 'З';
								//sb.Append("ЗА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Зб");
								arr[index++] = 'З';
								//sb.Append("Зб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("ЗБ");
								arr[index++] = 'З';
								//sb.Append("ЗБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 2;	// "c";
								break;
							case 'C':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 3;	// "C";
								break;
							case 'd':
								//sb.Append("Зд");
								arr[index++] = 'З';
								//sb.Append("Зд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("ЗД");
								arr[index++] = 'З';
								//sb.Append("ЗД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 4;	// "e";
								break;
							case 'E':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 5;	// "E";
								break;
							case 'f':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 6;	// "f";
								break;
							case 'F':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 7;	// "F";
								break;
							case 'g':
								//sb.Append("Зг");
								arr[index++] = 'З';
								//sb.Append("Зг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("ЗГ");
								arr[index++] = 'З';
								//sb.Append("ЗГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("Ж");
								arr[index++] = 'Ж';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Зи");
								arr[index++] = 'З';
								//sb.Append("Зи");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("ЗИ");
								arr[index++] = 'З';
								//sb.Append("ЗИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Зй");
								arr[index++] = 'З';
								//sb.Append("Зй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("ЗЙ");
								arr[index++] = 'З';
								//sb.Append("ЗЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Зк");
								arr[index++] = 'З';
								//sb.Append("Зк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("ЗК");
								arr[index++] = 'З';
								//sb.Append("ЗК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Зл");
								arr[index++] = 'З';
								//sb.Append("Зл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("ЗЛ");
								arr[index++] = 'З';
								//sb.Append("ЗЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("Зм");
								arr[index++] = 'З';
								//sb.Append("Зм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("ЗМ");
								arr[index++] = 'З';
								//sb.Append("ЗМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Зн");
								arr[index++] = 'З';
								//sb.Append("Зн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("ЗН");
								arr[index++] = 'З';
								//sb.Append("ЗН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Зо");
								arr[index++] = 'З';
								//sb.Append("Зо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("ЗО");
								arr[index++] = 'З';
								//sb.Append("ЗО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Зп");
								arr[index++] = 'З';
								//sb.Append("Зп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("ЗП");
								arr[index++] = 'З';
								//sb.Append("ЗП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Зр");
								arr[index++] = 'З';
								//sb.Append("Зр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("ЗР");
								arr[index++] = 'З';
								//sb.Append("ЗР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 8;	// "s";
								break;
							case 'S':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 9;	// "S";
								break;
							case 't':
								//sb.Append("Зт");
								arr[index++] = 'З';
								//sb.Append("Зт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("ЗТ");
								arr[index++] = 'З';
								//sb.Append("ЗТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Зу");
								arr[index++] = 'З';
								//sb.Append("Зу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("ЗУ");
								arr[index++] = 'З';
								//sb.Append("ЗУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Зв");
								arr[index++] = 'З';
								//sb.Append("Зв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("ЗВ");
								arr[index++] = 'З';
								//sb.Append("ЗВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Зх");
								arr[index++] = 'З';
								//sb.Append("Зх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("ЗХ");
								arr[index++] = 'З';
								//sb.Append("ЗХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 12;	// "y";
								break;
							case 'Y':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 13;	// "Y";
								break;
							case 'z':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 14;	// "z";
								break;
							case 'Z':
								//sb.Append("З");
								arr[index++] = 'З';
								break;
							default:
								//sb.Append("З");
								arr[index++] = 'З';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
				}
			}

			switch (state)
			{
				case 0:	// ""
					break;				
				case 1:	// "`"
					//sb.Append("ь");
					arr[index++] = 'ь';
					break;				
				case 2:	// "c"
					//sb.Append("ц");
					arr[index++] = 'ц';
					break;				
				case 3:	// "C"
					//sb.Append("Ц");
					arr[index++] = 'Ц';
					break;				
				case 4:	// "e"
					//sb.Append("е");
					arr[index++] = 'е';
					break;				
				case 5:	// "E"
					//sb.Append("Е");
					arr[index++] = 'Е';
					break;				
				case 6:	// "f"
					//sb.Append("ф");
					arr[index++] = 'ф';
					break;				
				case 7:	// "F"
					//sb.Append("Ф");
					arr[index++] = 'Ф';
					break;				
				case 8:	// "s"
					//sb.Append("с");
					arr[index++] = 'с';
					break;				
				case 9:	// "S"
					//sb.Append("С");
					arr[index++] = 'С';
					break;				
				case 10:	// "sh"
					//sb.Append("ш");
					arr[index++] = 'ш';
					break;				
				case 11:	// "Sh"
					//sb.Append("Ш");
					arr[index++] = 'Ш';
					break;				
				case 12:	// "y"
					//sb.Append("y");
					arr[index++] = 'y';
					break;				
				case 13:	// "Y"
					//sb.Append("Y");
					arr[index++] = 'Y';
					break;				
				case 14:	// "z"
					//sb.Append("з");
					arr[index++] = 'з';
					break;				
				case 15:	// "Z"
					//sb.Append("З");
					arr[index++] = 'З';
					break;				
			}
			//return sb.ToString();
			return new string(arr, 0, index);
		}

		internal static string Cyrillic2LatinBelorussian(string text)
		{
			var sb = new StringBuilder();
			var state = 0;			
			for (var i = 0; i < text.Length; i++)
			{
				var c = text[i];
				switch (state)
				{
					case 0:	// ""
						switch (c)
						{
							case '’':
								sb.Append("\'");
								break;
							case 'i':
								sb.Append("i");
								break;
							case 'I':
								sb.Append("I");
								break;
							case '№':
								sb.Append("#");
								break;
							case 'а':
								sb.Append("a");
								break;
							case 'А':
								sb.Append("A");
								break;
							case 'б':
								sb.Append("b");
								break;
							case 'Б':
								sb.Append("B");
								break;
							case 'в':
								sb.Append("v");
								break;
							case 'В':
								sb.Append("V");
								break;
							case 'г':
								sb.Append("h");
								break;
							case 'Г':
								sb.Append("H");
								break;
							case 'д':
								sb.Append("d");
								break;
							case 'Д':
								sb.Append("D");
								break;
							case 'е':
								sb.Append("e");
								break;
							case 'Е':
								sb.Append("E");
								break;
							case 'ё':
								sb.Append("yo");
								break;
							case 'Ё':
								sb.Append("Yo");
								break;
							case 'ж':
								sb.Append("zh");
								break;
							case 'Ж':
								sb.Append("Zh");
								break;
							case 'з':
								sb.Append("z");
								break;
							case 'З':
								sb.Append("Z");
								break;
							case 'й':
								sb.Append("j");
								break;
							case 'Й':
								sb.Append("J");
								break;
							case 'к':
								sb.Append("k");
								break;
							case 'К':
								sb.Append("K");
								break;
							case 'л':
								sb.Append("l");
								break;
							case 'Л':
								sb.Append("L");
								break;
							case 'м':
								sb.Append("m");
								break;
							case 'М':
								sb.Append("M");
								break;
							case 'н':
								sb.Append("n");
								break;
							case 'Н':
								sb.Append("N");
								break;
							case 'о':
								sb.Append("o");
								break;
							case 'О':
								sb.Append("O");
								break;
							case 'п':
								sb.Append("p");
								break;
							case 'П':
								sb.Append("P");
								break;
							case 'р':
								sb.Append("r");
								break;
							case 'Р':
								sb.Append("R");
								break;
							case 'с':
								sb.Append("s");
								break;
							case 'С':
								sb.Append("S");
								break;
							case 'т':
								sb.Append("t");
								break;
							case 'Т':
								sb.Append("T");
								break;
							case 'у':
								sb.Append("u");
								break;
							case 'У':
								sb.Append("U");
								break;
							case 'ў':
								sb.Append("u`");
								break;
							case 'Ў':
								sb.Append("U`");
								break;
							case 'ф':
								sb.Append("f");
								break;
							case 'Ф':
								sb.Append("F");
								break;
							case 'х':
								sb.Append("x");
								break;
							case 'Х':
								sb.Append("X");
								break;
							case 'ц':
								state = 1;	// "ц";
								break;
							case 'Ц':
								state = 2;	// "Ц";
								break;
							case 'ч':
								sb.Append("ch");
								break;
							case 'Ч':
								sb.Append("Ch");
								break;
							case 'ш':
								sb.Append("sh");
								break;
							case 'Ш':
								sb.Append("Sh");
								break;
							case 'ы':
								sb.Append("y`");
								break;
							case 'Ы':
								sb.Append("Y`");
								break;
							case 'ь':
								sb.Append("`");
								break;
							case 'Ь':
								sb.Append("`");
								break;
							case 'э':
								sb.Append("e`");
								break;
							case 'Э':
								sb.Append("E`");
								break;
							case 'ю':
								sb.Append("yu");
								break;
							case 'Ю':
								sb.Append("Yu");
								break;
							case 'я':
								sb.Append("ya");
								break;
							case 'Я':
								sb.Append("Ya");
								break;
							default:
								sb.Append(c);
								break;
						}
						break;				
					case 1:	// "ц"
						switch (c)
						{
							case '’':
								sb.Append("cz\'");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("ce");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("cE");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("ci");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("cI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("cj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("cJ");
								state = 0;	// "";
								break;
							case '№':
								sb.Append("cz#");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("cy");
								state = 0;	// "";
								break;
							case 'Y':
								sb.Append("cY");
								state = 0;	// "";
								break;
							case 'а':
								sb.Append("cza");
								state = 0;	// "";
								break;
							case 'А':
								sb.Append("czA");
								state = 0;	// "";
								break;
							case 'б':
								sb.Append("czb");
								state = 0;	// "";
								break;
							case 'Б':
								sb.Append("czB");
								state = 0;	// "";
								break;
							case 'в':
								sb.Append("czv");
								state = 0;	// "";
								break;
							case 'В':
								sb.Append("czV");
								state = 0;	// "";
								break;
							case 'г':
								sb.Append("czh");
								state = 0;	// "";
								break;
							case 'Г':
								sb.Append("czH");
								state = 0;	// "";
								break;
							case 'д':
								sb.Append("czd");
								state = 0;	// "";
								break;
							case 'Д':
								sb.Append("czD");
								state = 0;	// "";
								break;
							case 'е':
								sb.Append("ce");
								state = 0;	// "";
								break;
							case 'Е':
								sb.Append("cE");
								state = 0;	// "";
								break;
							case 'ё':
								sb.Append("cyo");
								state = 0;	// "";
								break;
							case 'Ё':
								sb.Append("cYo");
								state = 0;	// "";
								break;
							case 'ж':
								sb.Append("czzh");
								state = 0;	// "";
								break;
							case 'Ж':
								sb.Append("czZh");
								state = 0;	// "";
								break;
							case 'з':
								sb.Append("czz");
								state = 0;	// "";
								break;
							case 'З':
								sb.Append("czZ");
								state = 0;	// "";
								break;
							case 'й':
								sb.Append("cj");
								state = 0;	// "";
								break;
							case 'Й':
								sb.Append("cJ");
								state = 0;	// "";
								break;
							case 'к':
								sb.Append("czk");
								state = 0;	// "";
								break;
							case 'К':
								sb.Append("czK");
								state = 0;	// "";
								break;
							case 'л':
								sb.Append("czl");
								state = 0;	// "";
								break;
							case 'Л':
								sb.Append("czL");
								state = 0;	// "";
								break;
							case 'м':
								sb.Append("czm");
								state = 0;	// "";
								break;
							case 'М':
								sb.Append("czM");
								state = 0;	// "";
								break;
							case 'н':
								sb.Append("czn");
								state = 0;	// "";
								break;
							case 'Н':
								sb.Append("czN");
								state = 0;	// "";
								break;
							case 'о':
								sb.Append("czo");
								state = 0;	// "";
								break;
							case 'О':
								sb.Append("czO");
								state = 0;	// "";
								break;
							case 'п':
								sb.Append("czp");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("czP");
								state = 0;	// "";
								break;
							case 'р':
								sb.Append("czr");
								state = 0;	// "";
								break;
							case 'Р':
								sb.Append("czR");
								state = 0;	// "";
								break;
							case 'с':
								sb.Append("czs");
								state = 0;	// "";
								break;
							case 'С':
								sb.Append("czS");
								state = 0;	// "";
								break;
							case 'т':
								sb.Append("czt");
								state = 0;	// "";
								break;
							case 'Т':
								sb.Append("czT");
								state = 0;	// "";
								break;
							case 'у':
								sb.Append("czu");
								state = 0;	// "";
								break;
							case 'У':
								sb.Append("czU");
								state = 0;	// "";
								break;
							case 'ў':
								sb.Append("czu`");
								state = 0;	// "";
								break;
							case 'Ў':
								sb.Append("czU`");
								state = 0;	// "";
								break;
							case 'ф':
								sb.Append("czf");
								state = 0;	// "";
								break;
							case 'Ф':
								sb.Append("czF");
								state = 0;	// "";
								break;
							case 'х':
								sb.Append("czx");
								state = 0;	// "";
								break;
							case 'Х':
								sb.Append("czX");
								state = 0;	// "";
								break;
							case 'ц':
								sb.Append("cz");
								break;
							case 'Ц':
								sb.Append("cz");
								state = 2;	// "Ц";
								break;
							case 'ч':
								sb.Append("czch");
								state = 0;	// "";
								break;
							case 'Ч':
								sb.Append("czCh");
								state = 0;	// "";
								break;
							case 'ш':
								sb.Append("czsh");
								state = 0;	// "";
								break;
							case 'Ш':
								sb.Append("czSh");
								state = 0;	// "";
								break;
							case 'ы':
								sb.Append("cy`");
								state = 0;	// "";
								break;
							case 'Ы':
								sb.Append("cY`");
								state = 0;	// "";
								break;
							case 'ь':
								sb.Append("cz`");
								state = 0;	// "";
								break;
							case 'Ь':
								sb.Append("cz`");
								state = 0;	// "";
								break;
							case 'э':
								sb.Append("ce`");
								state = 0;	// "";
								break;
							case 'Э':
								sb.Append("cE`");
								state = 0;	// "";
								break;
							case 'ю':
								sb.Append("cyu");
								state = 0;	// "";
								break;
							case 'Ю':
								sb.Append("cYu");
								state = 0;	// "";
								break;
							case 'я':
								sb.Append("cya");
								state = 0;	// "";
								break;
							case 'Я':
								sb.Append("cYa");
								state = 0;	// "";
								break;
							default:
								sb.Append("cz");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 2:	// "Ц"
						switch (c)
						{
							case '’':
								sb.Append("Cz\'");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Ce");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("CE");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Ci");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("CI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Cj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("CJ");
								state = 0;	// "";
								break;
							case '№':
								sb.Append("Cz#");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Cy");
								state = 0;	// "";
								break;
							case 'Y':
								sb.Append("CY");
								state = 0;	// "";
								break;
							case 'а':
								sb.Append("Cza");
								state = 0;	// "";
								break;
							case 'А':
								sb.Append("CzA");
								state = 0;	// "";
								break;
							case 'б':
								sb.Append("Czb");
								state = 0;	// "";
								break;
							case 'Б':
								sb.Append("CzB");
								state = 0;	// "";
								break;
							case 'в':
								sb.Append("Czv");
								state = 0;	// "";
								break;
							case 'В':
								sb.Append("CzV");
								state = 0;	// "";
								break;
							case 'г':
								sb.Append("Czh");
								state = 0;	// "";
								break;
							case 'Г':
								sb.Append("CzH");
								state = 0;	// "";
								break;
							case 'д':
								sb.Append("Czd");
								state = 0;	// "";
								break;
							case 'Д':
								sb.Append("CzD");
								state = 0;	// "";
								break;
							case 'е':
								sb.Append("Ce");
								state = 0;	// "";
								break;
							case 'Е':
								sb.Append("CE");
								state = 0;	// "";
								break;
							case 'ё':
								sb.Append("Cyo");
								state = 0;	// "";
								break;
							case 'Ё':
								sb.Append("CYo");
								state = 0;	// "";
								break;
							case 'ж':
								sb.Append("Czzh");
								state = 0;	// "";
								break;
							case 'Ж':
								sb.Append("CzZh");
								state = 0;	// "";
								break;
							case 'з':
								sb.Append("Czz");
								state = 0;	// "";
								break;
							case 'З':
								sb.Append("CzZ");
								state = 0;	// "";
								break;
							case 'й':
								sb.Append("Cj");
								state = 0;	// "";
								break;
							case 'Й':
								sb.Append("CJ");
								state = 0;	// "";
								break;
							case 'к':
								sb.Append("Czk");
								state = 0;	// "";
								break;
							case 'К':
								sb.Append("CzK");
								state = 0;	// "";
								break;
							case 'л':
								sb.Append("Czl");
								state = 0;	// "";
								break;
							case 'Л':
								sb.Append("CzL");
								state = 0;	// "";
								break;
							case 'м':
								sb.Append("Czm");
								state = 0;	// "";
								break;
							case 'М':
								sb.Append("CzM");
								state = 0;	// "";
								break;
							case 'н':
								sb.Append("Czn");
								state = 0;	// "";
								break;
							case 'Н':
								sb.Append("CzN");
								state = 0;	// "";
								break;
							case 'о':
								sb.Append("Czo");
								state = 0;	// "";
								break;
							case 'О':
								sb.Append("CzO");
								state = 0;	// "";
								break;
							case 'п':
								sb.Append("Czp");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("CzP");
								state = 0;	// "";
								break;
							case 'р':
								sb.Append("Czr");
								state = 0;	// "";
								break;
							case 'Р':
								sb.Append("CzR");
								state = 0;	// "";
								break;
							case 'с':
								sb.Append("Czs");
								state = 0;	// "";
								break;
							case 'С':
								sb.Append("CzS");
								state = 0;	// "";
								break;
							case 'т':
								sb.Append("Czt");
								state = 0;	// "";
								break;
							case 'Т':
								sb.Append("CzT");
								state = 0;	// "";
								break;
							case 'у':
								sb.Append("Czu");
								state = 0;	// "";
								break;
							case 'У':
								sb.Append("CzU");
								state = 0;	// "";
								break;
							case 'ў':
								sb.Append("Czu`");
								state = 0;	// "";
								break;
							case 'Ў':
								sb.Append("CzU`");
								state = 0;	// "";
								break;
							case 'ф':
								sb.Append("Czf");
								state = 0;	// "";
								break;
							case 'Ф':
								sb.Append("CzF");
								state = 0;	// "";
								break;
							case 'х':
								sb.Append("Czx");
								state = 0;	// "";
								break;
							case 'Х':
								sb.Append("CzX");
								state = 0;	// "";
								break;
							case 'ц':
								sb.Append("Cz");
								state = 1;	// "ц";
								break;
							case 'Ц':
								sb.Append("Cz");
								break;
							case 'ч':
								sb.Append("Czch");
								state = 0;	// "";
								break;
							case 'Ч':
								sb.Append("CzCh");
								state = 0;	// "";
								break;
							case 'ш':
								sb.Append("Czsh");
								state = 0;	// "";
								break;
							case 'Ш':
								sb.Append("CzSh");
								state = 0;	// "";
								break;
							case 'ы':
								sb.Append("Cy`");
								state = 0;	// "";
								break;
							case 'Ы':
								sb.Append("CY`");
								state = 0;	// "";
								break;
							case 'ь':
								sb.Append("Cz`");
								state = 0;	// "";
								break;
							case 'Ь':
								sb.Append("Cz`");
								state = 0;	// "";
								break;
							case 'э':
								sb.Append("Ce`");
								state = 0;	// "";
								break;
							case 'Э':
								sb.Append("CE`");
								state = 0;	// "";
								break;
							case 'ю':
								sb.Append("Cyu");
								state = 0;	// "";
								break;
							case 'Ю':
								sb.Append("CYu");
								state = 0;	// "";
								break;
							case 'я':
								sb.Append("Cya");
								state = 0;	// "";
								break;
							case 'Я':
								sb.Append("CYa");
								state = 0;	// "";
								break;
							default:
								sb.Append("Cz");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
				}
			}

			switch (state)
			{
				case 0:	// ""
					break;				
				case 1:	// "ц"
					sb.Append("cz");
					break;				
				case 2:	// "Ц"
					sb.Append("Cz");
					break;				
			}
			return sb.ToString();
		}

        internal static string Latin2CyrillicBelorussian(string text)
		{
			//var sb = new StringBuilder(text.Length);
			var arr = new char[text.Length];
			var index = 0;

			var state = 0;			
			for (var i = 0; i < text.Length; i++)
			{
				var c = text[i];
				switch (state)
				{
					case 0:	// ""
						switch (c)
						{
							case '\'':
								//sb.Append("’");
								arr[index++] = '’';
								break;
							case '#':
								//sb.Append("№");
								arr[index++] = '№';
								break;
							case '`':
								//sb.Append("ь");
								arr[index++] = 'ь';
								break;
							case 'a':
								//sb.Append("а");
								arr[index++] = 'а';
								break;
							case 'A':
								//sb.Append("А");
								arr[index++] = 'А';
								break;
							case 'b':
								//sb.Append("б");
								arr[index++] = 'б';
								break;
							case 'B':
								//sb.Append("Б");
								arr[index++] = 'Б';
								break;
							case 'c':
								state = 1;	// "c";
								break;
							case 'C':
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("д");
								arr[index++] = 'д';
								break;
							case 'D':
								//sb.Append("Д");
								arr[index++] = 'Д';
								break;
							case 'e':
								state = 3;	// "e";
								break;
							case 'E':
								state = 4;	// "E";
								break;
							case 'f':
								//sb.Append("ф");
								arr[index++] = 'ф';
								break;
							case 'F':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								break;
							case 'h':
								//sb.Append("г");
								arr[index++] = 'г';
								break;
							case 'H':
								//sb.Append("Г");
								arr[index++] = 'Г';
								break;
							case 'i':
								//sb.Append("i");
								arr[index++] = 'i';
								break;
							case 'I':
								//sb.Append("I");
								arr[index++] = 'I';
								break;
							case 'j':
								//sb.Append("й");
								arr[index++] = 'й';
								break;
							case 'J':
								//sb.Append("Й");
								arr[index++] = 'Й';
								break;
							case 'k':
								//sb.Append("к");
								arr[index++] = 'к';
								break;
							case 'K':
								//sb.Append("К");
								arr[index++] = 'К';
								break;
							case 'l':
								//sb.Append("л");
								arr[index++] = 'л';
								break;
							case 'L':
								//sb.Append("Л");
								arr[index++] = 'Л';
								break;
							case 'm':
								//sb.Append("м");
								arr[index++] = 'м';
								break;
							case 'M':
								//sb.Append("М");
								arr[index++] = 'М';
								break;
							case 'n':
								//sb.Append("н");
								arr[index++] = 'н';
								break;
							case 'N':
								//sb.Append("Н");
								arr[index++] = 'Н';
								break;
							case 'o':
								//sb.Append("о");
								arr[index++] = 'о';
								break;
							case 'O':
								//sb.Append("О");
								arr[index++] = 'О';
								break;
							case 'p':
								//sb.Append("п");
								arr[index++] = 'п';
								break;
							case 'P':
								//sb.Append("П");
								arr[index++] = 'П';
								break;
							case 'r':
								//sb.Append("р");
								arr[index++] = 'р';
								break;
							case 'R':
								//sb.Append("Р");
								arr[index++] = 'Р';
								break;
							case 's':
								state = 5;	// "s";
								break;
							case 'S':
								state = 6;	// "S";
								break;
							case 't':
								//sb.Append("т");
								arr[index++] = 'т';
								break;
							case 'T':
								//sb.Append("Т");
								arr[index++] = 'Т';
								break;
							case 'u':
								state = 7;	// "u";
								break;
							case 'U':
								state = 8;	// "U";
								break;
							case 'v':
								//sb.Append("в");
								arr[index++] = 'в';
								break;
							case 'V':
								//sb.Append("В");
								arr[index++] = 'В';
								break;
							case 'x':
								//sb.Append("х");
								arr[index++] = 'х';
								break;
							case 'X':
								//sb.Append("Х");
								arr[index++] = 'Х';
								break;
							case 'y':
								state = 9;	// "y";
								break;
							case 'Y':
								state = 10;	// "Y";
								break;
							case 'z':
								state = 11;	// "z";
								break;
							case 'Z':
								state = 12;	// "Z";
								break;
							default:
								//sb.Append(c);
								arr[index++] = c;
								break;
						}
						break;				
					case 1:	// "c"
						switch (c)
						{
							case '\'':
								//sb.Append("ц’");
								arr[index++] = 'ц';
								//sb.Append("ц’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("ц№");
								arr[index++] = 'ц';
								//sb.Append("ц№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("ць");
								arr[index++] = 'ц';
								//sb.Append("ць");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("ца");
								arr[index++] = 'ц';
								//sb.Append("ца");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("цА");
								arr[index++] = 'ц';
								//sb.Append("цА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("цб");
								arr[index++] = 'ц';
								//sb.Append("цб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("цБ");
								arr[index++] = 'ц';
								//sb.Append("цБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("ц");
								arr[index++] = 'ц';
								break;
							case 'C':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("цд");
								arr[index++] = 'ц';
								//sb.Append("цд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("цД");
								arr[index++] = 'ц';
								//sb.Append("цД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 3;	// "e";
								break;
							case 'E':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 4;	// "E";
								break;
							case 'f':
								//sb.Append("цф");
								arr[index++] = 'ц';
								//sb.Append("цф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("цФ");
								arr[index++] = 'ц';
								//sb.Append("цФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("ч");
								arr[index++] = 'ч';
								state = 0;	// "";
								break;
							case 'H':
								//sb.Append("цГ");
								arr[index++] = 'ц';
								//sb.Append("цГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("цi");
								arr[index++] = 'ц';
								//sb.Append("цi");
								arr[index++] = 'i';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("цI");
								arr[index++] = 'ц';
								//sb.Append("цI");
								arr[index++] = 'I';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("цй");
								arr[index++] = 'ц';
								//sb.Append("цй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("цЙ");
								arr[index++] = 'ц';
								//sb.Append("цЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("цк");
								arr[index++] = 'ц';
								//sb.Append("цк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("цК");
								arr[index++] = 'ц';
								//sb.Append("цК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("цл");
								arr[index++] = 'ц';
								//sb.Append("цл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("цЛ");
								arr[index++] = 'ц';
								//sb.Append("цЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("цм");
								arr[index++] = 'ц';
								//sb.Append("цм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("цМ");
								arr[index++] = 'ц';
								//sb.Append("цМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("цн");
								arr[index++] = 'ц';
								//sb.Append("цн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("цН");
								arr[index++] = 'ц';
								//sb.Append("цН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("цо");
								arr[index++] = 'ц';
								//sb.Append("цо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("цО");
								arr[index++] = 'ц';
								//sb.Append("цО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("цп");
								arr[index++] = 'ц';
								//sb.Append("цп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("цП");
								arr[index++] = 'ц';
								//sb.Append("цП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("цр");
								arr[index++] = 'ц';
								//sb.Append("цр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("цР");
								arr[index++] = 'ц';
								//sb.Append("цР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 5;	// "s";
								break;
							case 'S':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 6;	// "S";
								break;
							case 't':
								//sb.Append("цт");
								arr[index++] = 'ц';
								//sb.Append("цт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("цТ");
								arr[index++] = 'ц';
								//sb.Append("цТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 7;	// "u";
								break;
							case 'U':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 8;	// "U";
								break;
							case 'v':
								//sb.Append("цв");
								arr[index++] = 'ц';
								//sb.Append("цв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("цВ");
								arr[index++] = 'ц';
								//sb.Append("цВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("цх");
								arr[index++] = 'ц';
								//sb.Append("цх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("цХ");
								arr[index++] = 'ц';
								//sb.Append("цХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 9;	// "y";
								break;
							case 'Y':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 10;	// "Y";
								break;
							case 'z':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 0;	// "";
								break;
							case 'Z':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 12;	// "Z";
								break;
							default:
								//sb.Append("ц");
								arr[index++] = 'ц';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 2:	// "C"
						switch (c)
						{
							case '\'':
								//sb.Append("Ц’");
								arr[index++] = 'Ц';
								//sb.Append("Ц’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("Ц№");
								arr[index++] = 'Ц';
								//sb.Append("Ц№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Ць");
								arr[index++] = 'Ц';
								//sb.Append("Ць");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("Ца");
								arr[index++] = 'Ц';
								//sb.Append("Ца");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("ЦА");
								arr[index++] = 'Ц';
								//sb.Append("ЦА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Цб");
								arr[index++] = 'Ц';
								//sb.Append("Цб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("ЦБ");
								arr[index++] = 'Ц';
								//sb.Append("ЦБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								break;
							case 'd':
								//sb.Append("Цд");
								arr[index++] = 'Ц';
								//sb.Append("Цд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("ЦД");
								arr[index++] = 'Ц';
								//sb.Append("ЦД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 3;	// "e";
								break;
							case 'E':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 4;	// "E";
								break;
							case 'f':
								//sb.Append("Цф");
								arr[index++] = 'Ц';
								//sb.Append("Цф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("ЦФ");
								arr[index++] = 'Ц';
								//sb.Append("ЦФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("Ч");
								arr[index++] = 'Ч';
								state = 0;	// "";
								break;
							case 'H':
								//sb.Append("ЦГ");
								arr[index++] = 'Ц';
								//sb.Append("ЦГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Цi");
								arr[index++] = 'Ц';
								//sb.Append("Цi");
								arr[index++] = 'i';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("ЦI");
								arr[index++] = 'Ц';
								//sb.Append("ЦI");
								arr[index++] = 'I';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Цй");
								arr[index++] = 'Ц';
								//sb.Append("Цй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("ЦЙ");
								arr[index++] = 'Ц';
								//sb.Append("ЦЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Цк");
								arr[index++] = 'Ц';
								//sb.Append("Цк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("ЦК");
								arr[index++] = 'Ц';
								//sb.Append("ЦК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Цл");
								arr[index++] = 'Ц';
								//sb.Append("Цл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("ЦЛ");
								arr[index++] = 'Ц';
								//sb.Append("ЦЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("Цм");
								arr[index++] = 'Ц';
								//sb.Append("Цм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("ЦМ");
								arr[index++] = 'Ц';
								//sb.Append("ЦМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Цн");
								arr[index++] = 'Ц';
								//sb.Append("Цн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("ЦН");
								arr[index++] = 'Ц';
								//sb.Append("ЦН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Цо");
								arr[index++] = 'Ц';
								//sb.Append("Цо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("ЦО");
								arr[index++] = 'Ц';
								//sb.Append("ЦО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Цп");
								arr[index++] = 'Ц';
								//sb.Append("Цп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("ЦП");
								arr[index++] = 'Ц';
								//sb.Append("ЦП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Цр");
								arr[index++] = 'Ц';
								//sb.Append("Цр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("ЦР");
								arr[index++] = 'Ц';
								//sb.Append("ЦР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 5;	// "s";
								break;
							case 'S':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 6;	// "S";
								break;
							case 't':
								//sb.Append("Цт");
								arr[index++] = 'Ц';
								//sb.Append("Цт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("ЦТ");
								arr[index++] = 'Ц';
								//sb.Append("ЦТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 7;	// "u";
								break;
							case 'U':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 8;	// "U";
								break;
							case 'v':
								//sb.Append("Цв");
								arr[index++] = 'Ц';
								//sb.Append("Цв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("ЦВ");
								arr[index++] = 'Ц';
								//sb.Append("ЦВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Цх");
								arr[index++] = 'Ц';
								//sb.Append("Цх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("ЦХ");
								arr[index++] = 'Ц';
								//sb.Append("ЦХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 9;	// "y";
								break;
							case 'Y':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 10;	// "Y";
								break;
							case 'z':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 0;	// "";
								break;
							case 'Z':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 12;	// "Z";
								break;
							default:
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 3:	// "e"
						switch (c)
						{
							case '\'':
								//sb.Append("е’");
								arr[index++] = 'е';
								//sb.Append("е’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("е№");
								arr[index++] = 'е';
								//sb.Append("е№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("э");
								arr[index++] = 'э';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("еа");
								arr[index++] = 'е';
								//sb.Append("еа");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("еА");
								arr[index++] = 'е';
								//sb.Append("еА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("еб");
								arr[index++] = 'е';
								//sb.Append("еб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("еБ");
								arr[index++] = 'е';
								//sb.Append("еБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("е");
								arr[index++] = 'е';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("е");
								arr[index++] = 'е';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("ед");
								arr[index++] = 'е';
								//sb.Append("ед");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("еД");
								arr[index++] = 'е';
								//sb.Append("еД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("е");
								arr[index++] = 'е';
								break;
							case 'E':
								//sb.Append("е");
								arr[index++] = 'е';
								state = 4;	// "E";
								break;
							case 'f':
								//sb.Append("еф");
								arr[index++] = 'е';
								//sb.Append("еф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("еФ");
								arr[index++] = 'е';
								//sb.Append("еФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("ег");
								arr[index++] = 'е';
								//sb.Append("ег");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'H':
								//sb.Append("еГ");
								arr[index++] = 'е';
								//sb.Append("еГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("еi");
								arr[index++] = 'е';
								//sb.Append("еi");
								arr[index++] = 'i';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("еI");
								arr[index++] = 'е';
								//sb.Append("еI");
								arr[index++] = 'I';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("ей");
								arr[index++] = 'е';
								//sb.Append("ей");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("еЙ");
								arr[index++] = 'е';
								//sb.Append("еЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("ек");
								arr[index++] = 'е';
								//sb.Append("ек");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("еК");
								arr[index++] = 'е';
								//sb.Append("еК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("ел");
								arr[index++] = 'е';
								//sb.Append("ел");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("еЛ");
								arr[index++] = 'е';
								//sb.Append("еЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("ем");
								arr[index++] = 'е';
								//sb.Append("ем");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("еМ");
								arr[index++] = 'е';
								//sb.Append("еМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("ен");
								arr[index++] = 'е';
								//sb.Append("ен");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("еН");
								arr[index++] = 'е';
								//sb.Append("еН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("ео");
								arr[index++] = 'е';
								//sb.Append("ео");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("еО");
								arr[index++] = 'е';
								//sb.Append("еО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("еп");
								arr[index++] = 'е';
								//sb.Append("еп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("еП");
								arr[index++] = 'е';
								//sb.Append("еП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("ер");
								arr[index++] = 'е';
								//sb.Append("ер");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("еР");
								arr[index++] = 'е';
								//sb.Append("еР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("е");
								arr[index++] = 'е';
								state = 5;	// "s";
								break;
							case 'S':
								//sb.Append("е");
								arr[index++] = 'е';
								state = 6;	// "S";
								break;
							case 't':
								//sb.Append("ет");
								arr[index++] = 'е';
								//sb.Append("ет");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("еТ");
								arr[index++] = 'е';
								//sb.Append("еТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("е");
								arr[index++] = 'е';
								state = 7;	// "u";
								break;
							case 'U':
								//sb.Append("е");
								arr[index++] = 'е';
								state = 8;	// "U";
								break;
							case 'v':
								//sb.Append("ев");
								arr[index++] = 'е';
								//sb.Append("ев");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("еВ");
								arr[index++] = 'е';
								//sb.Append("еВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("ех");
								arr[index++] = 'е';
								//sb.Append("ех");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("еХ");
								arr[index++] = 'е';
								//sb.Append("еХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("е");
								arr[index++] = 'е';
								state = 9;	// "y";
								break;
							case 'Y':
								//sb.Append("е");
								arr[index++] = 'е';
								state = 10;	// "Y";
								break;
							case 'z':
								//sb.Append("е");
								arr[index++] = 'е';
								state = 11;	// "z";
								break;
							case 'Z':
								//sb.Append("е");
								arr[index++] = 'е';
								state = 12;	// "Z";
								break;
							default:
								//sb.Append("е");
								arr[index++] = 'е';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 4:	// "E"
						switch (c)
						{
							case '\'':
								//sb.Append("Е’");
								arr[index++] = 'Е';
								//sb.Append("Е’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("Е№");
								arr[index++] = 'Е';
								//sb.Append("Е№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Э");
								arr[index++] = 'Э';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("Еа");
								arr[index++] = 'Е';
								//sb.Append("Еа");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("ЕА");
								arr[index++] = 'Е';
								//sb.Append("ЕА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Еб");
								arr[index++] = 'Е';
								//sb.Append("Еб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("ЕБ");
								arr[index++] = 'Е';
								//sb.Append("ЕБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("Е");
								arr[index++] = 'Е';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("Е");
								arr[index++] = 'Е';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("Ед");
								arr[index++] = 'Е';
								//sb.Append("Ед");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("ЕД");
								arr[index++] = 'Е';
								//sb.Append("ЕД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("Е");
								arr[index++] = 'Е';
								state = 3;	// "e";
								break;
							case 'E':
								//sb.Append("Е");
								arr[index++] = 'Е';
								break;
							case 'f':
								//sb.Append("Еф");
								arr[index++] = 'Е';
								//sb.Append("Еф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("ЕФ");
								arr[index++] = 'Е';
								//sb.Append("ЕФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("Ег");
								arr[index++] = 'Е';
								//sb.Append("Ег");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'H':
								//sb.Append("ЕГ");
								arr[index++] = 'Е';
								//sb.Append("ЕГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Еi");
								arr[index++] = 'Е';
								//sb.Append("Еi");
								arr[index++] = 'i';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("ЕI");
								arr[index++] = 'Е';
								//sb.Append("ЕI");
								arr[index++] = 'I';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Ей");
								arr[index++] = 'Е';
								//sb.Append("Ей");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("ЕЙ");
								arr[index++] = 'Е';
								//sb.Append("ЕЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Ек");
								arr[index++] = 'Е';
								//sb.Append("Ек");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("ЕК");
								arr[index++] = 'Е';
								//sb.Append("ЕК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Ел");
								arr[index++] = 'Е';
								//sb.Append("Ел");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("ЕЛ");
								arr[index++] = 'Е';
								//sb.Append("ЕЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("Ем");
								arr[index++] = 'Е';
								//sb.Append("Ем");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("ЕМ");
								arr[index++] = 'Е';
								//sb.Append("ЕМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Ен");
								arr[index++] = 'Е';
								//sb.Append("Ен");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("ЕН");
								arr[index++] = 'Е';
								//sb.Append("ЕН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Ео");
								arr[index++] = 'Е';
								//sb.Append("Ео");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("ЕО");
								arr[index++] = 'Е';
								//sb.Append("ЕО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Еп");
								arr[index++] = 'Е';
								//sb.Append("Еп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("ЕП");
								arr[index++] = 'Е';
								//sb.Append("ЕП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Ер");
								arr[index++] = 'Е';
								//sb.Append("Ер");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("ЕР");
								arr[index++] = 'Е';
								//sb.Append("ЕР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("Е");
								arr[index++] = 'Е';
								state = 5;	// "s";
								break;
							case 'S':
								//sb.Append("Е");
								arr[index++] = 'Е';
								state = 6;	// "S";
								break;
							case 't':
								//sb.Append("Ет");
								arr[index++] = 'Е';
								//sb.Append("Ет");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("ЕТ");
								arr[index++] = 'Е';
								//sb.Append("ЕТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Е");
								arr[index++] = 'Е';
								state = 7;	// "u";
								break;
							case 'U':
								//sb.Append("Е");
								arr[index++] = 'Е';
								state = 8;	// "U";
								break;
							case 'v':
								//sb.Append("Ев");
								arr[index++] = 'Е';
								//sb.Append("Ев");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("ЕВ");
								arr[index++] = 'Е';
								//sb.Append("ЕВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Ех");
								arr[index++] = 'Е';
								//sb.Append("Ех");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("ЕХ");
								arr[index++] = 'Е';
								//sb.Append("ЕХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("Е");
								arr[index++] = 'Е';
								state = 9;	// "y";
								break;
							case 'Y':
								//sb.Append("Е");
								arr[index++] = 'Е';
								state = 10;	// "Y";
								break;
							case 'z':
								//sb.Append("Е");
								arr[index++] = 'Е';
								state = 11;	// "z";
								break;
							case 'Z':
								//sb.Append("Е");
								arr[index++] = 'Е';
								state = 12;	// "Z";
								break;
							default:
								//sb.Append("Е");
								arr[index++] = 'Е';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 5:	// "s"
						switch (c)
						{
							case '\'':
								//sb.Append("с’");
								arr[index++] = 'с';
								//sb.Append("с’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("с№");
								arr[index++] = 'с';
								//sb.Append("с№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("сь");
								arr[index++] = 'с';
								//sb.Append("сь");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("са");
								arr[index++] = 'с';
								//sb.Append("са");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("сА");
								arr[index++] = 'с';
								//sb.Append("сА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("сб");
								arr[index++] = 'с';
								//sb.Append("сб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("сБ");
								arr[index++] = 'с';
								//sb.Append("сБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("сд");
								arr[index++] = 'с';
								//sb.Append("сд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("сД");
								arr[index++] = 'с';
								//sb.Append("сД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 3;	// "e";
								break;
							case 'E':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 4;	// "E";
								break;
							case 'f':
								//sb.Append("сф");
								arr[index++] = 'с';
								//sb.Append("сф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("сФ");
								arr[index++] = 'с';
								//sb.Append("сФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 0;	// "";
								break;
							case 'H':
								//sb.Append("сГ");
								arr[index++] = 'с';
								//sb.Append("сГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("сi");
								arr[index++] = 'с';
								//sb.Append("сi");
								arr[index++] = 'i';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("сI");
								arr[index++] = 'с';
								//sb.Append("сI");
								arr[index++] = 'I';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("сй");
								arr[index++] = 'с';
								//sb.Append("сй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("сЙ");
								arr[index++] = 'с';
								//sb.Append("сЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("ск");
								arr[index++] = 'с';
								//sb.Append("ск");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("сК");
								arr[index++] = 'с';
								//sb.Append("сК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("сл");
								arr[index++] = 'с';
								//sb.Append("сл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("сЛ");
								arr[index++] = 'с';
								//sb.Append("сЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("см");
								arr[index++] = 'с';
								//sb.Append("см");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("сМ");
								arr[index++] = 'с';
								//sb.Append("сМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("сн");
								arr[index++] = 'с';
								//sb.Append("сн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("сН");
								arr[index++] = 'с';
								//sb.Append("сН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("со");
								arr[index++] = 'с';
								//sb.Append("со");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("сО");
								arr[index++] = 'с';
								//sb.Append("сО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("сп");
								arr[index++] = 'с';
								//sb.Append("сп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("сП");
								arr[index++] = 'с';
								//sb.Append("сП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("ср");
								arr[index++] = 'с';
								//sb.Append("ср");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("сР");
								arr[index++] = 'с';
								//sb.Append("сР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("с");
								arr[index++] = 'с';
								break;
							case 'S':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 6;	// "S";
								break;
							case 't':
								//sb.Append("ст");
								arr[index++] = 'с';
								//sb.Append("ст");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("сТ");
								arr[index++] = 'с';
								//sb.Append("сТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 7;	// "u";
								break;
							case 'U':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 8;	// "U";
								break;
							case 'v':
								//sb.Append("св");
								arr[index++] = 'с';
								//sb.Append("св");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("сВ");
								arr[index++] = 'с';
								//sb.Append("сВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("сх");
								arr[index++] = 'с';
								//sb.Append("сх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("сХ");
								arr[index++] = 'с';
								//sb.Append("сХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 9;	// "y";
								break;
							case 'Y':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 10;	// "Y";
								break;
							case 'z':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 11;	// "z";
								break;
							case 'Z':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 12;	// "Z";
								break;
							default:
								//sb.Append("с");
								arr[index++] = 'с';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 6:	// "S"
						switch (c)
						{
							case '\'':
								//sb.Append("С’");
								arr[index++] = 'С';
								//sb.Append("С’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("С№");
								arr[index++] = 'С';
								//sb.Append("С№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Сь");
								arr[index++] = 'С';
								//sb.Append("Сь");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("Са");
								arr[index++] = 'С';
								//sb.Append("Са");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("СА");
								arr[index++] = 'С';
								//sb.Append("СА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Сб");
								arr[index++] = 'С';
								//sb.Append("Сб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("СБ");
								arr[index++] = 'С';
								//sb.Append("СБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("Сд");
								arr[index++] = 'С';
								//sb.Append("Сд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("СД");
								arr[index++] = 'С';
								//sb.Append("СД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 3;	// "e";
								break;
							case 'E':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 4;	// "E";
								break;
							case 'f':
								//sb.Append("Сф");
								arr[index++] = 'С';
								//sb.Append("Сф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("СФ");
								arr[index++] = 'С';
								//sb.Append("СФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 0;	// "";
								break;
							case 'H':
								//sb.Append("СГ");
								arr[index++] = 'С';
								//sb.Append("СГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Сi");
								arr[index++] = 'С';
								//sb.Append("Сi");
								arr[index++] = 'i';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("СI");
								arr[index++] = 'С';
								//sb.Append("СI");
								arr[index++] = 'I';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Сй");
								arr[index++] = 'С';
								//sb.Append("Сй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("СЙ");
								arr[index++] = 'С';
								//sb.Append("СЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Ск");
								arr[index++] = 'С';
								//sb.Append("Ск");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("СК");
								arr[index++] = 'С';
								//sb.Append("СК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Сл");
								arr[index++] = 'С';
								//sb.Append("Сл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("СЛ");
								arr[index++] = 'С';
								//sb.Append("СЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("См");
								arr[index++] = 'С';
								//sb.Append("См");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("СМ");
								arr[index++] = 'С';
								//sb.Append("СМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Сн");
								arr[index++] = 'С';
								//sb.Append("Сн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("СН");
								arr[index++] = 'С';
								//sb.Append("СН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Со");
								arr[index++] = 'С';
								//sb.Append("Со");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("СО");
								arr[index++] = 'С';
								//sb.Append("СО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Сп");
								arr[index++] = 'С';
								//sb.Append("Сп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("СП");
								arr[index++] = 'С';
								//sb.Append("СП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Ср");
								arr[index++] = 'С';
								//sb.Append("Ср");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("СР");
								arr[index++] = 'С';
								//sb.Append("СР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 5;	// "s";
								break;
							case 'S':
								//sb.Append("С");
								arr[index++] = 'С';
								break;
							case 't':
								//sb.Append("Ст");
								arr[index++] = 'С';
								//sb.Append("Ст");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("СТ");
								arr[index++] = 'С';
								//sb.Append("СТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 7;	// "u";
								break;
							case 'U':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 8;	// "U";
								break;
							case 'v':
								//sb.Append("Св");
								arr[index++] = 'С';
								//sb.Append("Св");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("СВ");
								arr[index++] = 'С';
								//sb.Append("СВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Сх");
								arr[index++] = 'С';
								//sb.Append("Сх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("СХ");
								arr[index++] = 'С';
								//sb.Append("СХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 9;	// "y";
								break;
							case 'Y':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 10;	// "Y";
								break;
							case 'z':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 11;	// "z";
								break;
							case 'Z':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 12;	// "Z";
								break;
							default:
								//sb.Append("С");
								arr[index++] = 'С';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 7:	// "u"
						switch (c)
						{
							case '\'':
								//sb.Append("у’");
								arr[index++] = 'у';
								//sb.Append("у’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("у№");
								arr[index++] = 'у';
								//sb.Append("у№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("ў");
								arr[index++] = 'ў';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("уа");
								arr[index++] = 'у';
								//sb.Append("уа");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("уА");
								arr[index++] = 'у';
								//sb.Append("уА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("уб");
								arr[index++] = 'у';
								//sb.Append("уб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("уБ");
								arr[index++] = 'у';
								//sb.Append("уБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("у");
								arr[index++] = 'у';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("у");
								arr[index++] = 'у';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("уд");
								arr[index++] = 'у';
								//sb.Append("уд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("уД");
								arr[index++] = 'у';
								//sb.Append("уД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("у");
								arr[index++] = 'у';
								state = 3;	// "e";
								break;
							case 'E':
								//sb.Append("у");
								arr[index++] = 'у';
								state = 4;	// "E";
								break;
							case 'f':
								//sb.Append("уф");
								arr[index++] = 'у';
								//sb.Append("уф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("уФ");
								arr[index++] = 'у';
								//sb.Append("уФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("уг");
								arr[index++] = 'у';
								//sb.Append("уг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'H':
								//sb.Append("уГ");
								arr[index++] = 'у';
								//sb.Append("уГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("уi");
								arr[index++] = 'у';
								//sb.Append("уi");
								arr[index++] = 'i';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("уI");
								arr[index++] = 'у';
								//sb.Append("уI");
								arr[index++] = 'I';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("уй");
								arr[index++] = 'у';
								//sb.Append("уй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("уЙ");
								arr[index++] = 'у';
								//sb.Append("уЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("ук");
								arr[index++] = 'у';
								//sb.Append("ук");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("уК");
								arr[index++] = 'у';
								//sb.Append("уК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("ул");
								arr[index++] = 'у';
								//sb.Append("ул");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("уЛ");
								arr[index++] = 'у';
								//sb.Append("уЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("ум");
								arr[index++] = 'у';
								//sb.Append("ум");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("уМ");
								arr[index++] = 'у';
								//sb.Append("уМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("ун");
								arr[index++] = 'у';
								//sb.Append("ун");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("уН");
								arr[index++] = 'у';
								//sb.Append("уН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("уо");
								arr[index++] = 'у';
								//sb.Append("уо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("уО");
								arr[index++] = 'у';
								//sb.Append("уО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("уп");
								arr[index++] = 'у';
								//sb.Append("уп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("уП");
								arr[index++] = 'у';
								//sb.Append("уП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("ур");
								arr[index++] = 'у';
								//sb.Append("ур");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("уР");
								arr[index++] = 'у';
								//sb.Append("уР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("у");
								arr[index++] = 'у';
								state = 5;	// "s";
								break;
							case 'S':
								//sb.Append("у");
								arr[index++] = 'у';
								state = 6;	// "S";
								break;
							case 't':
								//sb.Append("ут");
								arr[index++] = 'у';
								//sb.Append("ут");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("уТ");
								arr[index++] = 'у';
								//sb.Append("уТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("у");
								arr[index++] = 'у';
								break;
							case 'U':
								//sb.Append("у");
								arr[index++] = 'у';
								state = 8;	// "U";
								break;
							case 'v':
								//sb.Append("ув");
								arr[index++] = 'у';
								//sb.Append("ув");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("уВ");
								arr[index++] = 'у';
								//sb.Append("уВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("ух");
								arr[index++] = 'у';
								//sb.Append("ух");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("уХ");
								arr[index++] = 'у';
								//sb.Append("уХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("у");
								arr[index++] = 'у';
								state = 9;	// "y";
								break;
							case 'Y':
								//sb.Append("у");
								arr[index++] = 'у';
								state = 10;	// "Y";
								break;
							case 'z':
								//sb.Append("у");
								arr[index++] = 'у';
								state = 11;	// "z";
								break;
							case 'Z':
								//sb.Append("у");
								arr[index++] = 'у';
								state = 12;	// "Z";
								break;
							default:
								//sb.Append("у");
								arr[index++] = 'у';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 8:	// "U"
						switch (c)
						{
							case '\'':
								//sb.Append("У’");
								arr[index++] = 'У';
								//sb.Append("У’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("У№");
								arr[index++] = 'У';
								//sb.Append("У№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Ў");
								arr[index++] = 'Ў';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("Уа");
								arr[index++] = 'У';
								//sb.Append("Уа");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("УА");
								arr[index++] = 'У';
								//sb.Append("УА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Уб");
								arr[index++] = 'У';
								//sb.Append("Уб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("УБ");
								arr[index++] = 'У';
								//sb.Append("УБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("У");
								arr[index++] = 'У';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("У");
								arr[index++] = 'У';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("Уд");
								arr[index++] = 'У';
								//sb.Append("Уд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("УД");
								arr[index++] = 'У';
								//sb.Append("УД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("У");
								arr[index++] = 'У';
								state = 3;	// "e";
								break;
							case 'E':
								//sb.Append("У");
								arr[index++] = 'У';
								state = 4;	// "E";
								break;
							case 'f':
								//sb.Append("Уф");
								arr[index++] = 'У';
								//sb.Append("Уф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("УФ");
								arr[index++] = 'У';
								//sb.Append("УФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("Уг");
								arr[index++] = 'У';
								//sb.Append("Уг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'H':
								//sb.Append("УГ");
								arr[index++] = 'У';
								//sb.Append("УГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Уi");
								arr[index++] = 'У';
								//sb.Append("Уi");
								arr[index++] = 'i';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("УI");
								arr[index++] = 'У';
								//sb.Append("УI");
								arr[index++] = 'I';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Уй");
								arr[index++] = 'У';
								//sb.Append("Уй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("УЙ");
								arr[index++] = 'У';
								//sb.Append("УЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Ук");
								arr[index++] = 'У';
								//sb.Append("Ук");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("УК");
								arr[index++] = 'У';
								//sb.Append("УК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Ул");
								arr[index++] = 'У';
								//sb.Append("Ул");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("УЛ");
								arr[index++] = 'У';
								//sb.Append("УЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("Ум");
								arr[index++] = 'У';
								//sb.Append("Ум");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("УМ");
								arr[index++] = 'У';
								//sb.Append("УМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Ун");
								arr[index++] = 'У';
								//sb.Append("Ун");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("УН");
								arr[index++] = 'У';
								//sb.Append("УН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Уо");
								arr[index++] = 'У';
								//sb.Append("Уо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("УО");
								arr[index++] = 'У';
								//sb.Append("УО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Уп");
								arr[index++] = 'У';
								//sb.Append("Уп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("УП");
								arr[index++] = 'У';
								//sb.Append("УП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Ур");
								arr[index++] = 'У';
								//sb.Append("Ур");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("УР");
								arr[index++] = 'У';
								//sb.Append("УР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("У");
								arr[index++] = 'У';
								state = 5;	// "s";
								break;
							case 'S':
								//sb.Append("У");
								arr[index++] = 'У';
								state = 6;	// "S";
								break;
							case 't':
								//sb.Append("Ут");
								arr[index++] = 'У';
								//sb.Append("Ут");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("УТ");
								arr[index++] = 'У';
								//sb.Append("УТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("У");
								arr[index++] = 'У';
								state = 7;	// "u";
								break;
							case 'U':
								//sb.Append("У");
								arr[index++] = 'У';
								break;
							case 'v':
								//sb.Append("Ув");
								arr[index++] = 'У';
								//sb.Append("Ув");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("УВ");
								arr[index++] = 'У';
								//sb.Append("УВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Ух");
								arr[index++] = 'У';
								//sb.Append("Ух");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("УХ");
								arr[index++] = 'У';
								//sb.Append("УХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("У");
								arr[index++] = 'У';
								state = 9;	// "y";
								break;
							case 'Y':
								//sb.Append("У");
								arr[index++] = 'У';
								state = 10;	// "Y";
								break;
							case 'z':
								//sb.Append("У");
								arr[index++] = 'У';
								state = 11;	// "z";
								break;
							case 'Z':
								//sb.Append("У");
								arr[index++] = 'У';
								state = 12;	// "Z";
								break;
							default:
								//sb.Append("У");
								arr[index++] = 'У';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 9:	// "y"
						switch (c)
						{
							case '\'':
								//sb.Append("y’");
								arr[index++] = 'y';
								//sb.Append("y’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("y№");
								arr[index++] = 'y';
								//sb.Append("y№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("ы");
								arr[index++] = 'ы';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("я");
								arr[index++] = 'я';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("yА");
								arr[index++] = 'y';
								//sb.Append("yА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("yб");
								arr[index++] = 'y';
								//sb.Append("yб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("yБ");
								arr[index++] = 'y';
								//sb.Append("yБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("yд");
								arr[index++] = 'y';
								//sb.Append("yд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("yД");
								arr[index++] = 'y';
								//sb.Append("yД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 3;	// "e";
								break;
							case 'E':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 4;	// "E";
								break;
							case 'f':
								//sb.Append("yф");
								arr[index++] = 'y';
								//sb.Append("yф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("yФ");
								arr[index++] = 'y';
								//sb.Append("yФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("yг");
								arr[index++] = 'y';
								//sb.Append("yг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'H':
								//sb.Append("yГ");
								arr[index++] = 'y';
								//sb.Append("yГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("yi");
								arr[index++] = 'y';
								//sb.Append("yi");
								arr[index++] = 'i';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("yI");
								arr[index++] = 'y';
								//sb.Append("yI");
								arr[index++] = 'I';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("yй");
								arr[index++] = 'y';
								//sb.Append("yй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("yЙ");
								arr[index++] = 'y';
								//sb.Append("yЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("yк");
								arr[index++] = 'y';
								//sb.Append("yк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("yК");
								arr[index++] = 'y';
								//sb.Append("yК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("yл");
								arr[index++] = 'y';
								//sb.Append("yл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("yЛ");
								arr[index++] = 'y';
								//sb.Append("yЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("yм");
								arr[index++] = 'y';
								//sb.Append("yм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("yМ");
								arr[index++] = 'y';
								//sb.Append("yМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("yн");
								arr[index++] = 'y';
								//sb.Append("yн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("yН");
								arr[index++] = 'y';
								//sb.Append("yН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("ё");
								arr[index++] = 'ё';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("yО");
								arr[index++] = 'y';
								//sb.Append("yО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("yп");
								arr[index++] = 'y';
								//sb.Append("yп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("yП");
								arr[index++] = 'y';
								//sb.Append("yП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("yр");
								arr[index++] = 'y';
								//sb.Append("yр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("yР");
								arr[index++] = 'y';
								//sb.Append("yР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 5;	// "s";
								break;
							case 'S':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 6;	// "S";
								break;
							case 't':
								//sb.Append("yт");
								arr[index++] = 'y';
								//sb.Append("yт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("yТ");
								arr[index++] = 'y';
								//sb.Append("yТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("ю");
								arr[index++] = 'ю';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 8;	// "U";
								break;
							case 'v':
								//sb.Append("yв");
								arr[index++] = 'y';
								//sb.Append("yв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("yВ");
								arr[index++] = 'y';
								//sb.Append("yВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("yх");
								arr[index++] = 'y';
								//sb.Append("yх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("yХ");
								arr[index++] = 'y';
								//sb.Append("yХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("y");
								arr[index++] = 'y';
								break;
							case 'Y':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 10;	// "Y";
								break;
							case 'z':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 11;	// "z";
								break;
							case 'Z':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 12;	// "Z";
								break;
							default:
								//sb.Append("y");
								arr[index++] = 'y';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 10:	// "Y"
						switch (c)
						{
							case '\'':
								//sb.Append("Y’");
								arr[index++] = 'Y';
								//sb.Append("Y’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("Y№");
								arr[index++] = 'Y';
								//sb.Append("Y№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Ы");
								arr[index++] = 'Ы';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("Я");
								arr[index++] = 'Я';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("YА");
								arr[index++] = 'Y';
								//sb.Append("YА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Yб");
								arr[index++] = 'Y';
								//sb.Append("Yб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("YБ");
								arr[index++] = 'Y';
								//sb.Append("YБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("Yд");
								arr[index++] = 'Y';
								//sb.Append("Yд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("YД");
								arr[index++] = 'Y';
								//sb.Append("YД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 3;	// "e";
								break;
							case 'E':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 4;	// "E";
								break;
							case 'f':
								//sb.Append("Yф");
								arr[index++] = 'Y';
								//sb.Append("Yф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("YФ");
								arr[index++] = 'Y';
								//sb.Append("YФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("Yг");
								arr[index++] = 'Y';
								//sb.Append("Yг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'H':
								//sb.Append("YГ");
								arr[index++] = 'Y';
								//sb.Append("YГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Yi");
								arr[index++] = 'Y';
								//sb.Append("Yi");
								arr[index++] = 'i';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("YI");
								arr[index++] = 'Y';
								//sb.Append("YI");
								arr[index++] = 'I';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Yй");
								arr[index++] = 'Y';
								//sb.Append("Yй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("YЙ");
								arr[index++] = 'Y';
								//sb.Append("YЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Yк");
								arr[index++] = 'Y';
								//sb.Append("Yк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("YК");
								arr[index++] = 'Y';
								//sb.Append("YК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Yл");
								arr[index++] = 'Y';
								//sb.Append("Yл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("YЛ");
								arr[index++] = 'Y';
								//sb.Append("YЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("Yм");
								arr[index++] = 'Y';
								//sb.Append("Yм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("YМ");
								arr[index++] = 'Y';
								//sb.Append("YМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Yн");
								arr[index++] = 'Y';
								//sb.Append("Yн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("YН");
								arr[index++] = 'Y';
								//sb.Append("YН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Ё");
								arr[index++] = 'Ё';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("YО");
								arr[index++] = 'Y';
								//sb.Append("YО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Yп");
								arr[index++] = 'Y';
								//sb.Append("Yп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("YП");
								arr[index++] = 'Y';
								//sb.Append("YП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Yр");
								arr[index++] = 'Y';
								//sb.Append("Yр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("YР");
								arr[index++] = 'Y';
								//sb.Append("YР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 5;	// "s";
								break;
							case 'S':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 6;	// "S";
								break;
							case 't':
								//sb.Append("Yт");
								arr[index++] = 'Y';
								//sb.Append("Yт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("YТ");
								arr[index++] = 'Y';
								//sb.Append("YТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Ю");
								arr[index++] = 'Ю';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 8;	// "U";
								break;
							case 'v':
								//sb.Append("Yв");
								arr[index++] = 'Y';
								//sb.Append("Yв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("YВ");
								arr[index++] = 'Y';
								//sb.Append("YВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Yх");
								arr[index++] = 'Y';
								//sb.Append("Yх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("YХ");
								arr[index++] = 'Y';
								//sb.Append("YХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 9;	// "y";
								break;
							case 'Y':
								//sb.Append("Y");
								arr[index++] = 'Y';
								break;
							case 'z':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 11;	// "z";
								break;
							case 'Z':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 12;	// "Z";
								break;
							default:
								//sb.Append("Y");
								arr[index++] = 'Y';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 11:	// "z"
						switch (c)
						{
							case '\'':
								//sb.Append("з’");
								arr[index++] = 'з';
								//sb.Append("з’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("з№");
								arr[index++] = 'з';
								//sb.Append("з№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("зь");
								arr[index++] = 'з';
								//sb.Append("зь");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("за");
								arr[index++] = 'з';
								//sb.Append("за");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("зА");
								arr[index++] = 'з';
								//sb.Append("зА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("зб");
								arr[index++] = 'з';
								//sb.Append("зб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("зБ");
								arr[index++] = 'з';
								//sb.Append("зБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("зд");
								arr[index++] = 'з';
								//sb.Append("зд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("зД");
								arr[index++] = 'з';
								//sb.Append("зД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 3;	// "e";
								break;
							case 'E':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 4;	// "E";
								break;
							case 'f':
								//sb.Append("зф");
								arr[index++] = 'з';
								//sb.Append("зф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("зФ");
								arr[index++] = 'з';
								//sb.Append("зФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("ж");
								arr[index++] = 'ж';
								state = 0;	// "";
								break;
							case 'H':
								//sb.Append("зГ");
								arr[index++] = 'з';
								//sb.Append("зГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("зi");
								arr[index++] = 'з';
								//sb.Append("зi");
								arr[index++] = 'i';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("зI");
								arr[index++] = 'з';
								//sb.Append("зI");
								arr[index++] = 'I';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("зй");
								arr[index++] = 'з';
								//sb.Append("зй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("зЙ");
								arr[index++] = 'з';
								//sb.Append("зЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("зк");
								arr[index++] = 'з';
								//sb.Append("зк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("зК");
								arr[index++] = 'з';
								//sb.Append("зК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("зл");
								arr[index++] = 'з';
								//sb.Append("зл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("зЛ");
								arr[index++] = 'з';
								//sb.Append("зЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("зм");
								arr[index++] = 'з';
								//sb.Append("зм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("зМ");
								arr[index++] = 'з';
								//sb.Append("зМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("зн");
								arr[index++] = 'з';
								//sb.Append("зн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("зН");
								arr[index++] = 'з';
								//sb.Append("зН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("зо");
								arr[index++] = 'з';
								//sb.Append("зо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("зО");
								arr[index++] = 'з';
								//sb.Append("зО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("зп");
								arr[index++] = 'з';
								//sb.Append("зп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("зП");
								arr[index++] = 'з';
								//sb.Append("зП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("зр");
								arr[index++] = 'з';
								//sb.Append("зр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("зР");
								arr[index++] = 'з';
								//sb.Append("зР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 5;	// "s";
								break;
							case 'S':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 6;	// "S";
								break;
							case 't':
								//sb.Append("зт");
								arr[index++] = 'з';
								//sb.Append("зт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("зТ");
								arr[index++] = 'з';
								//sb.Append("зТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 7;	// "u";
								break;
							case 'U':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 8;	// "U";
								break;
							case 'v':
								//sb.Append("зв");
								arr[index++] = 'з';
								//sb.Append("зв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("зВ");
								arr[index++] = 'з';
								//sb.Append("зВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("зх");
								arr[index++] = 'з';
								//sb.Append("зх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("зХ");
								arr[index++] = 'з';
								//sb.Append("зХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 9;	// "y";
								break;
							case 'Y':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 10;	// "Y";
								break;
							case 'z':
								//sb.Append("з");
								arr[index++] = 'з';
								break;
							case 'Z':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 12;	// "Z";
								break;
							default:
								//sb.Append("з");
								arr[index++] = 'з';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 12:	// "Z"
						switch (c)
						{
							case '\'':
								//sb.Append("З’");
								arr[index++] = 'З';
								//sb.Append("З’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("З№");
								arr[index++] = 'З';
								//sb.Append("З№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Зь");
								arr[index++] = 'З';
								//sb.Append("Зь");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("За");
								arr[index++] = 'З';
								//sb.Append("За");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("ЗА");
								arr[index++] = 'З';
								//sb.Append("ЗА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Зб");
								arr[index++] = 'З';
								//sb.Append("Зб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("ЗБ");
								arr[index++] = 'З';
								//sb.Append("ЗБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("Зд");
								arr[index++] = 'З';
								//sb.Append("Зд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("ЗД");
								arr[index++] = 'З';
								//sb.Append("ЗД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 3;	// "e";
								break;
							case 'E':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 4;	// "E";
								break;
							case 'f':
								//sb.Append("Зф");
								arr[index++] = 'З';
								//sb.Append("Зф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("ЗФ");
								arr[index++] = 'З';
								//sb.Append("ЗФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("Ж");
								arr[index++] = 'Ж';
								state = 0;	// "";
								break;
							case 'H':
								//sb.Append("ЗГ");
								arr[index++] = 'З';
								//sb.Append("ЗГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Зi");
								arr[index++] = 'З';
								//sb.Append("Зi");
								arr[index++] = 'i';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("ЗI");
								arr[index++] = 'З';
								//sb.Append("ЗI");
								arr[index++] = 'I';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Зй");
								arr[index++] = 'З';
								//sb.Append("Зй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("ЗЙ");
								arr[index++] = 'З';
								//sb.Append("ЗЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Зк");
								arr[index++] = 'З';
								//sb.Append("Зк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("ЗК");
								arr[index++] = 'З';
								//sb.Append("ЗК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Зл");
								arr[index++] = 'З';
								//sb.Append("Зл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("ЗЛ");
								arr[index++] = 'З';
								//sb.Append("ЗЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("Зм");
								arr[index++] = 'З';
								//sb.Append("Зм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("ЗМ");
								arr[index++] = 'З';
								//sb.Append("ЗМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Зн");
								arr[index++] = 'З';
								//sb.Append("Зн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("ЗН");
								arr[index++] = 'З';
								//sb.Append("ЗН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Зо");
								arr[index++] = 'З';
								//sb.Append("Зо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("ЗО");
								arr[index++] = 'З';
								//sb.Append("ЗО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Зп");
								arr[index++] = 'З';
								//sb.Append("Зп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("ЗП");
								arr[index++] = 'З';
								//sb.Append("ЗП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Зр");
								arr[index++] = 'З';
								//sb.Append("Зр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("ЗР");
								arr[index++] = 'З';
								//sb.Append("ЗР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 5;	// "s";
								break;
							case 'S':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 6;	// "S";
								break;
							case 't':
								//sb.Append("Зт");
								arr[index++] = 'З';
								//sb.Append("Зт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("ЗТ");
								arr[index++] = 'З';
								//sb.Append("ЗТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 7;	// "u";
								break;
							case 'U':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 8;	// "U";
								break;
							case 'v':
								//sb.Append("Зв");
								arr[index++] = 'З';
								//sb.Append("Зв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("ЗВ");
								arr[index++] = 'З';
								//sb.Append("ЗВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Зх");
								arr[index++] = 'З';
								//sb.Append("Зх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("ЗХ");
								arr[index++] = 'З';
								//sb.Append("ЗХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 9;	// "y";
								break;
							case 'Y':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 10;	// "Y";
								break;
							case 'z':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 11;	// "z";
								break;
							case 'Z':
								//sb.Append("З");
								arr[index++] = 'З';
								break;
							default:
								//sb.Append("З");
								arr[index++] = 'З';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
				}
			}

			switch (state)
			{
				case 0:	// ""
					break;				
				case 1:	// "c"
					//sb.Append("ц");
					arr[index++] = 'ц';
					break;				
				case 2:	// "C"
					//sb.Append("Ц");
					arr[index++] = 'Ц';
					break;				
				case 3:	// "e"
					//sb.Append("е");
					arr[index++] = 'е';
					break;				
				case 4:	// "E"
					//sb.Append("Е");
					arr[index++] = 'Е';
					break;				
				case 5:	// "s"
					//sb.Append("с");
					arr[index++] = 'с';
					break;				
				case 6:	// "S"
					//sb.Append("С");
					arr[index++] = 'С';
					break;				
				case 7:	// "u"
					//sb.Append("у");
					arr[index++] = 'у';
					break;				
				case 8:	// "U"
					//sb.Append("У");
					arr[index++] = 'У';
					break;				
				case 9:	// "y"
					//sb.Append("y");
					arr[index++] = 'y';
					break;				
				case 10:	// "Y"
					//sb.Append("Y");
					arr[index++] = 'Y';
					break;				
				case 11:	// "z"
					//sb.Append("з");
					arr[index++] = 'з';
					break;				
				case 12:	// "Z"
					//sb.Append("З");
					arr[index++] = 'З';
					break;				
			}
			//return sb.ToString();
			return new string(arr, 0, index);
		}

		internal static string Cyrillic2LatinUkrainian(string text)
		{
			var sb = new StringBuilder();
			var state = 0;			
			for (var i = 0; i < text.Length; i++)
			{
				var c = text[i];
				switch (state)
				{
					case 0:	// ""
						switch (c)
						{
							case '’':
								sb.Append("\'");
								break;
							case 'i':
								sb.Append("i");
								break;
							case 'I':
								sb.Append("I");
								break;
							case '№':
								sb.Append("#");
								break;
							case 'а':
								sb.Append("a");
								break;
							case 'А':
								sb.Append("A");
								break;
							case 'б':
								sb.Append("b");
								break;
							case 'Б':
								sb.Append("B");
								break;
							case 'в':
								sb.Append("v");
								break;
							case 'В':
								sb.Append("V");
								break;
							case 'г':
								sb.Append("h");
								break;
							case 'Г':
								sb.Append("H");
								break;
							case 'ґ':
								sb.Append("g`");
								break;
							case 'Ґ':
								sb.Append("G`");
								break;
							case 'д':
								sb.Append("d");
								break;
							case 'Д':
								sb.Append("D");
								break;
							case 'е':
								sb.Append("e");
								break;
							case 'Е':
								sb.Append("E");
								break;
							case 'є':
								sb.Append("ye");
								break;
							case 'Є':
								sb.Append("Ye");
								break;
							case 'ж':
								sb.Append("zh");
								break;
							case 'Ж':
								sb.Append("Zh");
								break;
							case 'з':
								sb.Append("z");
								break;
							case 'З':
								sb.Append("Z");
								break;
							case 'и':
								sb.Append("y`");
								break;
							case 'И':
								sb.Append("Y`");
								break;
							case 'ї':
								sb.Append("yi");
								break;
							case 'Ї':
								sb.Append("Yi");
								break;
							case 'й':
								sb.Append("j");
								break;
							case 'Й':
								sb.Append("J");
								break;
							case 'к':
								sb.Append("k");
								break;
							case 'К':
								sb.Append("K");
								break;
							case 'л':
								sb.Append("l");
								break;
							case 'Л':
								sb.Append("L");
								break;
							case 'м':
								sb.Append("m");
								break;
							case 'М':
								sb.Append("M");
								break;
							case 'н':
								sb.Append("n");
								break;
							case 'Н':
								sb.Append("N");
								break;
							case 'о':
								sb.Append("o");
								break;
							case 'О':
								sb.Append("O");
								break;
							case 'п':
								sb.Append("p");
								break;
							case 'П':
								sb.Append("P");
								break;
							case 'р':
								sb.Append("r");
								break;
							case 'Р':
								sb.Append("R");
								break;
							case 'с':
								sb.Append("s");
								break;
							case 'С':
								sb.Append("S");
								break;
							case 'т':
								sb.Append("t");
								break;
							case 'Т':
								sb.Append("T");
								break;
							case 'у':
								sb.Append("u");
								break;
							case 'У':
								sb.Append("U");
								break;
							case 'ф':
								sb.Append("f");
								break;
							case 'Ф':
								sb.Append("F");
								break;
							case 'х':
								sb.Append("x");
								break;
							case 'Х':
								sb.Append("X");
								break;
							case 'ц':
								state = 1;	// "ц";
								break;
							case 'Ц':
								state = 2;	// "Ц";
								break;
							case 'ч':
								sb.Append("ch");
								break;
							case 'Ч':
								sb.Append("Ch");
								break;
							case 'ш':
								sb.Append("sh");
								break;
							case 'Ш':
								sb.Append("Sh");
								break;
							case 'щ':
								sb.Append("shh");
								break;
							case 'Щ':
								sb.Append("Shh");
								break;
							case 'ь':
								sb.Append("`");
								break;
							case 'Ь':
								sb.Append("`");
								break;
							case 'ю':
								sb.Append("yu");
								break;
							case 'Ю':
								sb.Append("Yu");
								break;
							case 'я':
								sb.Append("ya");
								break;
							case 'Я':
								sb.Append("Ya");
								break;
							default:
								sb.Append(c);
								break;
						}
						break;				
					case 1:	// "ц"
						switch (c)
						{
							case '’':
								sb.Append("cz\'");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("ce");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("cE");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("ci");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("cI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("cj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("cJ");
								state = 0;	// "";
								break;
							case '№':
								sb.Append("cz#");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("cy");
								state = 0;	// "";
								break;
							case 'Y':
								sb.Append("cY");
								state = 0;	// "";
								break;
							case 'а':
								sb.Append("cza");
								state = 0;	// "";
								break;
							case 'А':
								sb.Append("czA");
								state = 0;	// "";
								break;
							case 'б':
								sb.Append("czb");
								state = 0;	// "";
								break;
							case 'Б':
								sb.Append("czB");
								state = 0;	// "";
								break;
							case 'в':
								sb.Append("czv");
								state = 0;	// "";
								break;
							case 'В':
								sb.Append("czV");
								state = 0;	// "";
								break;
							case 'г':
								sb.Append("czh");
								state = 0;	// "";
								break;
							case 'Г':
								sb.Append("czH");
								state = 0;	// "";
								break;
							case 'ґ':
								sb.Append("czg`");
								state = 0;	// "";
								break;
							case 'Ґ':
								sb.Append("czG`");
								state = 0;	// "";
								break;
							case 'д':
								sb.Append("czd");
								state = 0;	// "";
								break;
							case 'Д':
								sb.Append("czD");
								state = 0;	// "";
								break;
							case 'е':
								sb.Append("ce");
								state = 0;	// "";
								break;
							case 'Е':
								sb.Append("cE");
								state = 0;	// "";
								break;
							case 'є':
								sb.Append("cye");
								state = 0;	// "";
								break;
							case 'Є':
								sb.Append("cYe");
								state = 0;	// "";
								break;
							case 'ж':
								sb.Append("czzh");
								state = 0;	// "";
								break;
							case 'Ж':
								sb.Append("czZh");
								state = 0;	// "";
								break;
							case 'з':
								sb.Append("czz");
								state = 0;	// "";
								break;
							case 'З':
								sb.Append("czZ");
								state = 0;	// "";
								break;
							case 'и':
								sb.Append("cy`");
								state = 0;	// "";
								break;
							case 'И':
								sb.Append("cY`");
								state = 0;	// "";
								break;
							case 'ї':
								sb.Append("cyi");
								state = 0;	// "";
								break;
							case 'Ї':
								sb.Append("cYi");
								state = 0;	// "";
								break;
							case 'й':
								sb.Append("cj");
								state = 0;	// "";
								break;
							case 'Й':
								sb.Append("cJ");
								state = 0;	// "";
								break;
							case 'к':
								sb.Append("czk");
								state = 0;	// "";
								break;
							case 'К':
								sb.Append("czK");
								state = 0;	// "";
								break;
							case 'л':
								sb.Append("czl");
								state = 0;	// "";
								break;
							case 'Л':
								sb.Append("czL");
								state = 0;	// "";
								break;
							case 'м':
								sb.Append("czm");
								state = 0;	// "";
								break;
							case 'М':
								sb.Append("czM");
								state = 0;	// "";
								break;
							case 'н':
								sb.Append("czn");
								state = 0;	// "";
								break;
							case 'Н':
								sb.Append("czN");
								state = 0;	// "";
								break;
							case 'о':
								sb.Append("czo");
								state = 0;	// "";
								break;
							case 'О':
								sb.Append("czO");
								state = 0;	// "";
								break;
							case 'п':
								sb.Append("czp");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("czP");
								state = 0;	// "";
								break;
							case 'р':
								sb.Append("czr");
								state = 0;	// "";
								break;
							case 'Р':
								sb.Append("czR");
								state = 0;	// "";
								break;
							case 'с':
								sb.Append("czs");
								state = 0;	// "";
								break;
							case 'С':
								sb.Append("czS");
								state = 0;	// "";
								break;
							case 'т':
								sb.Append("czt");
								state = 0;	// "";
								break;
							case 'Т':
								sb.Append("czT");
								state = 0;	// "";
								break;
							case 'у':
								sb.Append("czu");
								state = 0;	// "";
								break;
							case 'У':
								sb.Append("czU");
								state = 0;	// "";
								break;
							case 'ф':
								sb.Append("czf");
								state = 0;	// "";
								break;
							case 'Ф':
								sb.Append("czF");
								state = 0;	// "";
								break;
							case 'х':
								sb.Append("czx");
								state = 0;	// "";
								break;
							case 'Х':
								sb.Append("czX");
								state = 0;	// "";
								break;
							case 'ц':
								sb.Append("cz");
								break;
							case 'Ц':
								sb.Append("cz");
								state = 2;	// "Ц";
								break;
							case 'ч':
								sb.Append("czch");
								state = 0;	// "";
								break;
							case 'Ч':
								sb.Append("czCh");
								state = 0;	// "";
								break;
							case 'ш':
								sb.Append("czsh");
								state = 0;	// "";
								break;
							case 'Ш':
								sb.Append("czSh");
								state = 0;	// "";
								break;
							case 'щ':
								sb.Append("czshh");
								state = 0;	// "";
								break;
							case 'Щ':
								sb.Append("czShh");
								state = 0;	// "";
								break;
							case 'ь':
								sb.Append("cz`");
								state = 0;	// "";
								break;
							case 'Ь':
								sb.Append("cz`");
								state = 0;	// "";
								break;
							case 'ю':
								sb.Append("cyu");
								state = 0;	// "";
								break;
							case 'Ю':
								sb.Append("cYu");
								state = 0;	// "";
								break;
							case 'я':
								sb.Append("cya");
								state = 0;	// "";
								break;
							case 'Я':
								sb.Append("cYa");
								state = 0;	// "";
								break;
							default:
								sb.Append("cz");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 2:	// "Ц"
						switch (c)
						{
							case '’':
								sb.Append("Cz\'");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Ce");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("CE");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Ci");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("CI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Cj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("CJ");
								state = 0;	// "";
								break;
							case '№':
								sb.Append("Cz#");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Cy");
								state = 0;	// "";
								break;
							case 'Y':
								sb.Append("CY");
								state = 0;	// "";
								break;
							case 'а':
								sb.Append("Cza");
								state = 0;	// "";
								break;
							case 'А':
								sb.Append("CzA");
								state = 0;	// "";
								break;
							case 'б':
								sb.Append("Czb");
								state = 0;	// "";
								break;
							case 'Б':
								sb.Append("CzB");
								state = 0;	// "";
								break;
							case 'в':
								sb.Append("Czv");
								state = 0;	// "";
								break;
							case 'В':
								sb.Append("CzV");
								state = 0;	// "";
								break;
							case 'г':
								sb.Append("Czh");
								state = 0;	// "";
								break;
							case 'Г':
								sb.Append("CzH");
								state = 0;	// "";
								break;
							case 'ґ':
								sb.Append("Czg`");
								state = 0;	// "";
								break;
							case 'Ґ':
								sb.Append("CzG`");
								state = 0;	// "";
								break;
							case 'д':
								sb.Append("Czd");
								state = 0;	// "";
								break;
							case 'Д':
								sb.Append("CzD");
								state = 0;	// "";
								break;
							case 'е':
								sb.Append("Ce");
								state = 0;	// "";
								break;
							case 'Е':
								sb.Append("CE");
								state = 0;	// "";
								break;
							case 'є':
								sb.Append("Cye");
								state = 0;	// "";
								break;
							case 'Є':
								sb.Append("CYe");
								state = 0;	// "";
								break;
							case 'ж':
								sb.Append("Czzh");
								state = 0;	// "";
								break;
							case 'Ж':
								sb.Append("CzZh");
								state = 0;	// "";
								break;
							case 'з':
								sb.Append("Czz");
								state = 0;	// "";
								break;
							case 'З':
								sb.Append("CzZ");
								state = 0;	// "";
								break;
							case 'и':
								sb.Append("Cy`");
								state = 0;	// "";
								break;
							case 'И':
								sb.Append("CY`");
								state = 0;	// "";
								break;
							case 'ї':
								sb.Append("Cyi");
								state = 0;	// "";
								break;
							case 'Ї':
								sb.Append("CYi");
								state = 0;	// "";
								break;
							case 'й':
								sb.Append("Cj");
								state = 0;	// "";
								break;
							case 'Й':
								sb.Append("CJ");
								state = 0;	// "";
								break;
							case 'к':
								sb.Append("Czk");
								state = 0;	// "";
								break;
							case 'К':
								sb.Append("CzK");
								state = 0;	// "";
								break;
							case 'л':
								sb.Append("Czl");
								state = 0;	// "";
								break;
							case 'Л':
								sb.Append("CzL");
								state = 0;	// "";
								break;
							case 'м':
								sb.Append("Czm");
								state = 0;	// "";
								break;
							case 'М':
								sb.Append("CzM");
								state = 0;	// "";
								break;
							case 'н':
								sb.Append("Czn");
								state = 0;	// "";
								break;
							case 'Н':
								sb.Append("CzN");
								state = 0;	// "";
								break;
							case 'о':
								sb.Append("Czo");
								state = 0;	// "";
								break;
							case 'О':
								sb.Append("CzO");
								state = 0;	// "";
								break;
							case 'п':
								sb.Append("Czp");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("CzP");
								state = 0;	// "";
								break;
							case 'р':
								sb.Append("Czr");
								state = 0;	// "";
								break;
							case 'Р':
								sb.Append("CzR");
								state = 0;	// "";
								break;
							case 'с':
								sb.Append("Czs");
								state = 0;	// "";
								break;
							case 'С':
								sb.Append("CzS");
								state = 0;	// "";
								break;
							case 'т':
								sb.Append("Czt");
								state = 0;	// "";
								break;
							case 'Т':
								sb.Append("CzT");
								state = 0;	// "";
								break;
							case 'у':
								sb.Append("Czu");
								state = 0;	// "";
								break;
							case 'У':
								sb.Append("CzU");
								state = 0;	// "";
								break;
							case 'ф':
								sb.Append("Czf");
								state = 0;	// "";
								break;
							case 'Ф':
								sb.Append("CzF");
								state = 0;	// "";
								break;
							case 'х':
								sb.Append("Czx");
								state = 0;	// "";
								break;
							case 'Х':
								sb.Append("CzX");
								state = 0;	// "";
								break;
							case 'ц':
								sb.Append("Cz");
								state = 1;	// "ц";
								break;
							case 'Ц':
								sb.Append("Cz");
								break;
							case 'ч':
								sb.Append("Czch");
								state = 0;	// "";
								break;
							case 'Ч':
								sb.Append("CzCh");
								state = 0;	// "";
								break;
							case 'ш':
								sb.Append("Czsh");
								state = 0;	// "";
								break;
							case 'Ш':
								sb.Append("CzSh");
								state = 0;	// "";
								break;
							case 'щ':
								sb.Append("Czshh");
								state = 0;	// "";
								break;
							case 'Щ':
								sb.Append("CzShh");
								state = 0;	// "";
								break;
							case 'ь':
								sb.Append("Cz`");
								state = 0;	// "";
								break;
							case 'Ь':
								sb.Append("Cz`");
								state = 0;	// "";
								break;
							case 'ю':
								sb.Append("Cyu");
								state = 0;	// "";
								break;
							case 'Ю':
								sb.Append("CYu");
								state = 0;	// "";
								break;
							case 'я':
								sb.Append("Cya");
								state = 0;	// "";
								break;
							case 'Я':
								sb.Append("CYa");
								state = 0;	// "";
								break;
							default:
								sb.Append("Cz");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
				}
			}

			switch (state)
			{
				case 0:	// ""
					break;				
				case 1:	// "ц"
					sb.Append("cz");
					break;				
				case 2:	// "Ц"
					sb.Append("Cz");
					break;				
			}
			return sb.ToString();
		}

        internal static string Latin2CyrillicUkrainian(string text)
		{
			//var sb = new StringBuilder(text.Length);
			var arr = new char[text.Length];
			var index = 0;

			var state = 0;			
			for (var i = 0; i < text.Length; i++)
			{
				var c = text[i];
				switch (state)
				{
					case 0:	// ""
						switch (c)
						{
							case '\'':
								//sb.Append("’");
								arr[index++] = '’';
								break;
							case '#':
								//sb.Append("№");
								arr[index++] = '№';
								break;
							case '`':
								//sb.Append("ь");
								arr[index++] = 'ь';
								break;
							case 'a':
								//sb.Append("а");
								arr[index++] = 'а';
								break;
							case 'A':
								//sb.Append("А");
								arr[index++] = 'А';
								break;
							case 'b':
								//sb.Append("б");
								arr[index++] = 'б';
								break;
							case 'B':
								//sb.Append("Б");
								arr[index++] = 'Б';
								break;
							case 'c':
								state = 1;	// "c";
								break;
							case 'C':
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("д");
								arr[index++] = 'д';
								break;
							case 'D':
								//sb.Append("Д");
								arr[index++] = 'Д';
								break;
							case 'e':
								//sb.Append("е");
								arr[index++] = 'е';
								break;
							case 'E':
								//sb.Append("Е");
								arr[index++] = 'Е';
								break;
							case 'f':
								//sb.Append("ф");
								arr[index++] = 'ф';
								break;
							case 'F':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								break;
							case 'g':
								state = 3;	// "g";
								break;
							case 'G':
								state = 4;	// "G";
								break;
							case 'h':
								//sb.Append("г");
								arr[index++] = 'г';
								break;
							case 'H':
								//sb.Append("Г");
								arr[index++] = 'Г';
								break;
							case 'i':
								//sb.Append("i");
								arr[index++] = 'i';
								break;
							case 'I':
								//sb.Append("I");
								arr[index++] = 'I';
								break;
							case 'j':
								//sb.Append("й");
								arr[index++] = 'й';
								break;
							case 'J':
								//sb.Append("Й");
								arr[index++] = 'Й';
								break;
							case 'k':
								//sb.Append("к");
								arr[index++] = 'к';
								break;
							case 'K':
								//sb.Append("К");
								arr[index++] = 'К';
								break;
							case 'l':
								//sb.Append("л");
								arr[index++] = 'л';
								break;
							case 'L':
								//sb.Append("Л");
								arr[index++] = 'Л';
								break;
							case 'm':
								//sb.Append("м");
								arr[index++] = 'м';
								break;
							case 'M':
								//sb.Append("М");
								arr[index++] = 'М';
								break;
							case 'n':
								//sb.Append("н");
								arr[index++] = 'н';
								break;
							case 'N':
								//sb.Append("Н");
								arr[index++] = 'Н';
								break;
							case 'o':
								//sb.Append("о");
								arr[index++] = 'о';
								break;
							case 'O':
								//sb.Append("О");
								arr[index++] = 'О';
								break;
							case 'p':
								//sb.Append("п");
								arr[index++] = 'п';
								break;
							case 'P':
								//sb.Append("П");
								arr[index++] = 'П';
								break;
							case 'r':
								//sb.Append("р");
								arr[index++] = 'р';
								break;
							case 'R':
								//sb.Append("Р");
								arr[index++] = 'Р';
								break;
							case 's':
								state = 5;	// "s";
								break;
							case 'S':
								state = 6;	// "S";
								break;
							case 't':
								//sb.Append("т");
								arr[index++] = 'т';
								break;
							case 'T':
								//sb.Append("Т");
								arr[index++] = 'Т';
								break;
							case 'u':
								//sb.Append("у");
								arr[index++] = 'у';
								break;
							case 'U':
								//sb.Append("У");
								arr[index++] = 'У';
								break;
							case 'v':
								//sb.Append("в");
								arr[index++] = 'в';
								break;
							case 'V':
								//sb.Append("В");
								arr[index++] = 'В';
								break;
							case 'x':
								//sb.Append("х");
								arr[index++] = 'х';
								break;
							case 'X':
								//sb.Append("Х");
								arr[index++] = 'Х';
								break;
							case 'y':
								state = 9;	// "y";
								break;
							case 'Y':
								state = 10;	// "Y";
								break;
							case 'z':
								state = 11;	// "z";
								break;
							case 'Z':
								state = 12;	// "Z";
								break;
							default:
								//sb.Append(c);
								arr[index++] = c;
								break;
						}
						break;				
					case 1:	// "c"
						switch (c)
						{
							case '\'':
								//sb.Append("ц’");
								arr[index++] = 'ц';
								//sb.Append("ц’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("ц№");
								arr[index++] = 'ц';
								//sb.Append("ц№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("ць");
								arr[index++] = 'ц';
								//sb.Append("ць");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("ца");
								arr[index++] = 'ц';
								//sb.Append("ца");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("цА");
								arr[index++] = 'ц';
								//sb.Append("цА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("цб");
								arr[index++] = 'ц';
								//sb.Append("цб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("цБ");
								arr[index++] = 'ц';
								//sb.Append("цБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("ц");
								arr[index++] = 'ц';
								break;
							case 'C':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("цд");
								arr[index++] = 'ц';
								//sb.Append("цд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("цД");
								arr[index++] = 'ц';
								//sb.Append("цД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("це");
								arr[index++] = 'ц';
								//sb.Append("це");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("цЕ");
								arr[index++] = 'ц';
								//sb.Append("цЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("цф");
								arr[index++] = 'ц';
								//sb.Append("цф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("цФ");
								arr[index++] = 'ц';
								//sb.Append("цФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 3;	// "g";
								break;
							case 'G':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 4;	// "G";
								break;
							case 'h':
								//sb.Append("ч");
								arr[index++] = 'ч';
								state = 0;	// "";
								break;
							case 'H':
								//sb.Append("цГ");
								arr[index++] = 'ц';
								//sb.Append("цГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("цi");
								arr[index++] = 'ц';
								//sb.Append("цi");
								arr[index++] = 'i';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("цI");
								arr[index++] = 'ц';
								//sb.Append("цI");
								arr[index++] = 'I';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("цй");
								arr[index++] = 'ц';
								//sb.Append("цй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("цЙ");
								arr[index++] = 'ц';
								//sb.Append("цЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("цк");
								arr[index++] = 'ц';
								//sb.Append("цк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("цК");
								arr[index++] = 'ц';
								//sb.Append("цК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("цл");
								arr[index++] = 'ц';
								//sb.Append("цл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("цЛ");
								arr[index++] = 'ц';
								//sb.Append("цЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("цм");
								arr[index++] = 'ц';
								//sb.Append("цм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("цМ");
								arr[index++] = 'ц';
								//sb.Append("цМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("цн");
								arr[index++] = 'ц';
								//sb.Append("цн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("цН");
								arr[index++] = 'ц';
								//sb.Append("цН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("цо");
								arr[index++] = 'ц';
								//sb.Append("цо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("цО");
								arr[index++] = 'ц';
								//sb.Append("цО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("цп");
								arr[index++] = 'ц';
								//sb.Append("цп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("цП");
								arr[index++] = 'ц';
								//sb.Append("цП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("цр");
								arr[index++] = 'ц';
								//sb.Append("цр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("цР");
								arr[index++] = 'ц';
								//sb.Append("цР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 5;	// "s";
								break;
							case 'S':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 6;	// "S";
								break;
							case 't':
								//sb.Append("цт");
								arr[index++] = 'ц';
								//sb.Append("цт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("цТ");
								arr[index++] = 'ц';
								//sb.Append("цТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("цу");
								arr[index++] = 'ц';
								//sb.Append("цу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("цУ");
								arr[index++] = 'ц';
								//sb.Append("цУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("цв");
								arr[index++] = 'ц';
								//sb.Append("цв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("цВ");
								arr[index++] = 'ц';
								//sb.Append("цВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("цх");
								arr[index++] = 'ц';
								//sb.Append("цх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("цХ");
								arr[index++] = 'ц';
								//sb.Append("цХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 9;	// "y";
								break;
							case 'Y':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 10;	// "Y";
								break;
							case 'z':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 0;	// "";
								break;
							case 'Z':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 12;	// "Z";
								break;
							default:
								//sb.Append("ц");
								arr[index++] = 'ц';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 2:	// "C"
						switch (c)
						{
							case '\'':
								//sb.Append("Ц’");
								arr[index++] = 'Ц';
								//sb.Append("Ц’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("Ц№");
								arr[index++] = 'Ц';
								//sb.Append("Ц№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Ць");
								arr[index++] = 'Ц';
								//sb.Append("Ць");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("Ца");
								arr[index++] = 'Ц';
								//sb.Append("Ца");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("ЦА");
								arr[index++] = 'Ц';
								//sb.Append("ЦА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Цб");
								arr[index++] = 'Ц';
								//sb.Append("Цб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("ЦБ");
								arr[index++] = 'Ц';
								//sb.Append("ЦБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								break;
							case 'd':
								//sb.Append("Цд");
								arr[index++] = 'Ц';
								//sb.Append("Цд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("ЦД");
								arr[index++] = 'Ц';
								//sb.Append("ЦД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("Це");
								arr[index++] = 'Ц';
								//sb.Append("Це");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("ЦЕ");
								arr[index++] = 'Ц';
								//sb.Append("ЦЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("Цф");
								arr[index++] = 'Ц';
								//sb.Append("Цф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("ЦФ");
								arr[index++] = 'Ц';
								//sb.Append("ЦФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 3;	// "g";
								break;
							case 'G':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 4;	// "G";
								break;
							case 'h':
								//sb.Append("Ч");
								arr[index++] = 'Ч';
								state = 0;	// "";
								break;
							case 'H':
								//sb.Append("ЦГ");
								arr[index++] = 'Ц';
								//sb.Append("ЦГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Цi");
								arr[index++] = 'Ц';
								//sb.Append("Цi");
								arr[index++] = 'i';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("ЦI");
								arr[index++] = 'Ц';
								//sb.Append("ЦI");
								arr[index++] = 'I';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Цй");
								arr[index++] = 'Ц';
								//sb.Append("Цй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("ЦЙ");
								arr[index++] = 'Ц';
								//sb.Append("ЦЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Цк");
								arr[index++] = 'Ц';
								//sb.Append("Цк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("ЦК");
								arr[index++] = 'Ц';
								//sb.Append("ЦК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Цл");
								arr[index++] = 'Ц';
								//sb.Append("Цл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("ЦЛ");
								arr[index++] = 'Ц';
								//sb.Append("ЦЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("Цм");
								arr[index++] = 'Ц';
								//sb.Append("Цм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("ЦМ");
								arr[index++] = 'Ц';
								//sb.Append("ЦМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Цн");
								arr[index++] = 'Ц';
								//sb.Append("Цн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("ЦН");
								arr[index++] = 'Ц';
								//sb.Append("ЦН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Цо");
								arr[index++] = 'Ц';
								//sb.Append("Цо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("ЦО");
								arr[index++] = 'Ц';
								//sb.Append("ЦО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Цп");
								arr[index++] = 'Ц';
								//sb.Append("Цп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("ЦП");
								arr[index++] = 'Ц';
								//sb.Append("ЦП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Цр");
								arr[index++] = 'Ц';
								//sb.Append("Цр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("ЦР");
								arr[index++] = 'Ц';
								//sb.Append("ЦР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 5;	// "s";
								break;
							case 'S':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 6;	// "S";
								break;
							case 't':
								//sb.Append("Цт");
								arr[index++] = 'Ц';
								//sb.Append("Цт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("ЦТ");
								arr[index++] = 'Ц';
								//sb.Append("ЦТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Цу");
								arr[index++] = 'Ц';
								//sb.Append("Цу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("ЦУ");
								arr[index++] = 'Ц';
								//sb.Append("ЦУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Цв");
								arr[index++] = 'Ц';
								//sb.Append("Цв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("ЦВ");
								arr[index++] = 'Ц';
								//sb.Append("ЦВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Цх");
								arr[index++] = 'Ц';
								//sb.Append("Цх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("ЦХ");
								arr[index++] = 'Ц';
								//sb.Append("ЦХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 9;	// "y";
								break;
							case 'Y':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 10;	// "Y";
								break;
							case 'z':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 0;	// "";
								break;
							case 'Z':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 12;	// "Z";
								break;
							default:
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 3:	// "g"
						switch (c)
						{
							case '\'':
								//sb.Append("g’");
								arr[index++] = 'g';
								//sb.Append("g’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("g№");
								arr[index++] = 'g';
								//sb.Append("g№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("ґ");
								arr[index++] = 'ґ';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("gа");
								arr[index++] = 'g';
								//sb.Append("gа");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("gА");
								arr[index++] = 'g';
								//sb.Append("gА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("gб");
								arr[index++] = 'g';
								//sb.Append("gб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("gБ");
								arr[index++] = 'g';
								//sb.Append("gБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("g");
								arr[index++] = 'g';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("g");
								arr[index++] = 'g';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("gд");
								arr[index++] = 'g';
								//sb.Append("gд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("gД");
								arr[index++] = 'g';
								//sb.Append("gД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("gе");
								arr[index++] = 'g';
								//sb.Append("gе");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("gЕ");
								arr[index++] = 'g';
								//sb.Append("gЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("gф");
								arr[index++] = 'g';
								//sb.Append("gф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("gФ");
								arr[index++] = 'g';
								//sb.Append("gФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("g");
								arr[index++] = 'g';
								break;
							case 'G':
								//sb.Append("g");
								arr[index++] = 'g';
								state = 4;	// "G";
								break;
							case 'h':
								//sb.Append("gг");
								arr[index++] = 'g';
								//sb.Append("gг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'H':
								//sb.Append("gГ");
								arr[index++] = 'g';
								//sb.Append("gГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("gi");
								arr[index++] = 'g';
								//sb.Append("gi");
								arr[index++] = 'i';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("gI");
								arr[index++] = 'g';
								//sb.Append("gI");
								arr[index++] = 'I';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("gй");
								arr[index++] = 'g';
								//sb.Append("gй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("gЙ");
								arr[index++] = 'g';
								//sb.Append("gЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("gк");
								arr[index++] = 'g';
								//sb.Append("gк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("gК");
								arr[index++] = 'g';
								//sb.Append("gК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("gл");
								arr[index++] = 'g';
								//sb.Append("gл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("gЛ");
								arr[index++] = 'g';
								//sb.Append("gЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("gм");
								arr[index++] = 'g';
								//sb.Append("gм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("gМ");
								arr[index++] = 'g';
								//sb.Append("gМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("gн");
								arr[index++] = 'g';
								//sb.Append("gн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("gН");
								arr[index++] = 'g';
								//sb.Append("gН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("gо");
								arr[index++] = 'g';
								//sb.Append("gо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("gО");
								arr[index++] = 'g';
								//sb.Append("gО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("gп");
								arr[index++] = 'g';
								//sb.Append("gп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("gП");
								arr[index++] = 'g';
								//sb.Append("gП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("gр");
								arr[index++] = 'g';
								//sb.Append("gр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("gР");
								arr[index++] = 'g';
								//sb.Append("gР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("g");
								arr[index++] = 'g';
								state = 5;	// "s";
								break;
							case 'S':
								//sb.Append("g");
								arr[index++] = 'g';
								state = 6;	// "S";
								break;
							case 't':
								//sb.Append("gт");
								arr[index++] = 'g';
								//sb.Append("gт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("gТ");
								arr[index++] = 'g';
								//sb.Append("gТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("gу");
								arr[index++] = 'g';
								//sb.Append("gу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("gУ");
								arr[index++] = 'g';
								//sb.Append("gУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("gв");
								arr[index++] = 'g';
								//sb.Append("gв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("gВ");
								arr[index++] = 'g';
								//sb.Append("gВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("gх");
								arr[index++] = 'g';
								//sb.Append("gх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("gХ");
								arr[index++] = 'g';
								//sb.Append("gХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("g");
								arr[index++] = 'g';
								state = 9;	// "y";
								break;
							case 'Y':
								//sb.Append("g");
								arr[index++] = 'g';
								state = 10;	// "Y";
								break;
							case 'z':
								//sb.Append("g");
								arr[index++] = 'g';
								state = 11;	// "z";
								break;
							case 'Z':
								//sb.Append("g");
								arr[index++] = 'g';
								state = 12;	// "Z";
								break;
							default:
								//sb.Append("g");
								arr[index++] = 'g';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 4:	// "G"
						switch (c)
						{
							case '\'':
								//sb.Append("G’");
								arr[index++] = 'G';
								//sb.Append("G’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("G№");
								arr[index++] = 'G';
								//sb.Append("G№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Ґ");
								arr[index++] = 'Ґ';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("Gа");
								arr[index++] = 'G';
								//sb.Append("Gа");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("GА");
								arr[index++] = 'G';
								//sb.Append("GА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Gб");
								arr[index++] = 'G';
								//sb.Append("Gб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("GБ");
								arr[index++] = 'G';
								//sb.Append("GБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("G");
								arr[index++] = 'G';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("G");
								arr[index++] = 'G';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("Gд");
								arr[index++] = 'G';
								//sb.Append("Gд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("GД");
								arr[index++] = 'G';
								//sb.Append("GД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("Gе");
								arr[index++] = 'G';
								//sb.Append("Gе");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("GЕ");
								arr[index++] = 'G';
								//sb.Append("GЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("Gф");
								arr[index++] = 'G';
								//sb.Append("Gф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("GФ");
								arr[index++] = 'G';
								//sb.Append("GФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("G");
								arr[index++] = 'G';
								state = 3;	// "g";
								break;
							case 'G':
								//sb.Append("G");
								arr[index++] = 'G';
								break;
							case 'h':
								//sb.Append("Gг");
								arr[index++] = 'G';
								//sb.Append("Gг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'H':
								//sb.Append("GГ");
								arr[index++] = 'G';
								//sb.Append("GГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Gi");
								arr[index++] = 'G';
								//sb.Append("Gi");
								arr[index++] = 'i';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("GI");
								arr[index++] = 'G';
								//sb.Append("GI");
								arr[index++] = 'I';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Gй");
								arr[index++] = 'G';
								//sb.Append("Gй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("GЙ");
								arr[index++] = 'G';
								//sb.Append("GЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Gк");
								arr[index++] = 'G';
								//sb.Append("Gк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("GК");
								arr[index++] = 'G';
								//sb.Append("GК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Gл");
								arr[index++] = 'G';
								//sb.Append("Gл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("GЛ");
								arr[index++] = 'G';
								//sb.Append("GЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("Gм");
								arr[index++] = 'G';
								//sb.Append("Gм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("GМ");
								arr[index++] = 'G';
								//sb.Append("GМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Gн");
								arr[index++] = 'G';
								//sb.Append("Gн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("GН");
								arr[index++] = 'G';
								//sb.Append("GН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Gо");
								arr[index++] = 'G';
								//sb.Append("Gо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("GО");
								arr[index++] = 'G';
								//sb.Append("GО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Gп");
								arr[index++] = 'G';
								//sb.Append("Gп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("GП");
								arr[index++] = 'G';
								//sb.Append("GП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Gр");
								arr[index++] = 'G';
								//sb.Append("Gр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("GР");
								arr[index++] = 'G';
								//sb.Append("GР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("G");
								arr[index++] = 'G';
								state = 5;	// "s";
								break;
							case 'S':
								//sb.Append("G");
								arr[index++] = 'G';
								state = 6;	// "S";
								break;
							case 't':
								//sb.Append("Gт");
								arr[index++] = 'G';
								//sb.Append("Gт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("GТ");
								arr[index++] = 'G';
								//sb.Append("GТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Gу");
								arr[index++] = 'G';
								//sb.Append("Gу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("GУ");
								arr[index++] = 'G';
								//sb.Append("GУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Gв");
								arr[index++] = 'G';
								//sb.Append("Gв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("GВ");
								arr[index++] = 'G';
								//sb.Append("GВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Gх");
								arr[index++] = 'G';
								//sb.Append("Gх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("GХ");
								arr[index++] = 'G';
								//sb.Append("GХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("G");
								arr[index++] = 'G';
								state = 9;	// "y";
								break;
							case 'Y':
								//sb.Append("G");
								arr[index++] = 'G';
								state = 10;	// "Y";
								break;
							case 'z':
								//sb.Append("G");
								arr[index++] = 'G';
								state = 11;	// "z";
								break;
							case 'Z':
								//sb.Append("G");
								arr[index++] = 'G';
								state = 12;	// "Z";
								break;
							default:
								//sb.Append("G");
								arr[index++] = 'G';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 5:	// "s"
						switch (c)
						{
							case '\'':
								//sb.Append("с’");
								arr[index++] = 'с';
								//sb.Append("с’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("с№");
								arr[index++] = 'с';
								//sb.Append("с№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("сь");
								arr[index++] = 'с';
								//sb.Append("сь");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("са");
								arr[index++] = 'с';
								//sb.Append("са");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("сА");
								arr[index++] = 'с';
								//sb.Append("сА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("сб");
								arr[index++] = 'с';
								//sb.Append("сб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("сБ");
								arr[index++] = 'с';
								//sb.Append("сБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("сд");
								arr[index++] = 'с';
								//sb.Append("сд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("сД");
								arr[index++] = 'с';
								//sb.Append("сД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("се");
								arr[index++] = 'с';
								//sb.Append("се");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("сЕ");
								arr[index++] = 'с';
								//sb.Append("сЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("сф");
								arr[index++] = 'с';
								//sb.Append("сф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("сФ");
								arr[index++] = 'с';
								//sb.Append("сФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 3;	// "g";
								break;
							case 'G':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 4;	// "G";
								break;
							case 'h':
								state = 7;	// "sh";
								break;
							case 'H':
								//sb.Append("сГ");
								arr[index++] = 'с';
								//sb.Append("сГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("сi");
								arr[index++] = 'с';
								//sb.Append("сi");
								arr[index++] = 'i';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("сI");
								arr[index++] = 'с';
								//sb.Append("сI");
								arr[index++] = 'I';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("сй");
								arr[index++] = 'с';
								//sb.Append("сй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("сЙ");
								arr[index++] = 'с';
								//sb.Append("сЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("ск");
								arr[index++] = 'с';
								//sb.Append("ск");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("сК");
								arr[index++] = 'с';
								//sb.Append("сК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("сл");
								arr[index++] = 'с';
								//sb.Append("сл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("сЛ");
								arr[index++] = 'с';
								//sb.Append("сЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("см");
								arr[index++] = 'с';
								//sb.Append("см");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("сМ");
								arr[index++] = 'с';
								//sb.Append("сМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("сн");
								arr[index++] = 'с';
								//sb.Append("сн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("сН");
								arr[index++] = 'с';
								//sb.Append("сН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("со");
								arr[index++] = 'с';
								//sb.Append("со");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("сО");
								arr[index++] = 'с';
								//sb.Append("сО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("сп");
								arr[index++] = 'с';
								//sb.Append("сп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("сП");
								arr[index++] = 'с';
								//sb.Append("сП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("ср");
								arr[index++] = 'с';
								//sb.Append("ср");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("сР");
								arr[index++] = 'с';
								//sb.Append("сР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("с");
								arr[index++] = 'с';
								break;
							case 'S':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 6;	// "S";
								break;
							case 't':
								//sb.Append("ст");
								arr[index++] = 'с';
								//sb.Append("ст");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("сТ");
								arr[index++] = 'с';
								//sb.Append("сТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("су");
								arr[index++] = 'с';
								//sb.Append("су");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("сУ");
								arr[index++] = 'с';
								//sb.Append("сУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("св");
								arr[index++] = 'с';
								//sb.Append("св");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("сВ");
								arr[index++] = 'с';
								//sb.Append("сВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("сх");
								arr[index++] = 'с';
								//sb.Append("сх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("сХ");
								arr[index++] = 'с';
								//sb.Append("сХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 9;	// "y";
								break;
							case 'Y':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 10;	// "Y";
								break;
							case 'z':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 11;	// "z";
								break;
							case 'Z':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 12;	// "Z";
								break;
							default:
								//sb.Append("с");
								arr[index++] = 'с';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 6:	// "S"
						switch (c)
						{
							case '\'':
								//sb.Append("С’");
								arr[index++] = 'С';
								//sb.Append("С’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("С№");
								arr[index++] = 'С';
								//sb.Append("С№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Сь");
								arr[index++] = 'С';
								//sb.Append("Сь");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("Са");
								arr[index++] = 'С';
								//sb.Append("Са");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("СА");
								arr[index++] = 'С';
								//sb.Append("СА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Сб");
								arr[index++] = 'С';
								//sb.Append("Сб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("СБ");
								arr[index++] = 'С';
								//sb.Append("СБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("Сд");
								arr[index++] = 'С';
								//sb.Append("Сд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("СД");
								arr[index++] = 'С';
								//sb.Append("СД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("Се");
								arr[index++] = 'С';
								//sb.Append("Се");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("СЕ");
								arr[index++] = 'С';
								//sb.Append("СЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("Сф");
								arr[index++] = 'С';
								//sb.Append("Сф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("СФ");
								arr[index++] = 'С';
								//sb.Append("СФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 3;	// "g";
								break;
							case 'G':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 4;	// "G";
								break;
							case 'h':
								state = 8;	// "Sh";
								break;
							case 'H':
								//sb.Append("СГ");
								arr[index++] = 'С';
								//sb.Append("СГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Сi");
								arr[index++] = 'С';
								//sb.Append("Сi");
								arr[index++] = 'i';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("СI");
								arr[index++] = 'С';
								//sb.Append("СI");
								arr[index++] = 'I';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Сй");
								arr[index++] = 'С';
								//sb.Append("Сй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("СЙ");
								arr[index++] = 'С';
								//sb.Append("СЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Ск");
								arr[index++] = 'С';
								//sb.Append("Ск");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("СК");
								arr[index++] = 'С';
								//sb.Append("СК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Сл");
								arr[index++] = 'С';
								//sb.Append("Сл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("СЛ");
								arr[index++] = 'С';
								//sb.Append("СЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("См");
								arr[index++] = 'С';
								//sb.Append("См");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("СМ");
								arr[index++] = 'С';
								//sb.Append("СМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Сн");
								arr[index++] = 'С';
								//sb.Append("Сн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("СН");
								arr[index++] = 'С';
								//sb.Append("СН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Со");
								arr[index++] = 'С';
								//sb.Append("Со");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("СО");
								arr[index++] = 'С';
								//sb.Append("СО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Сп");
								arr[index++] = 'С';
								//sb.Append("Сп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("СП");
								arr[index++] = 'С';
								//sb.Append("СП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Ср");
								arr[index++] = 'С';
								//sb.Append("Ср");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("СР");
								arr[index++] = 'С';
								//sb.Append("СР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 5;	// "s";
								break;
							case 'S':
								//sb.Append("С");
								arr[index++] = 'С';
								break;
							case 't':
								//sb.Append("Ст");
								arr[index++] = 'С';
								//sb.Append("Ст");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("СТ");
								arr[index++] = 'С';
								//sb.Append("СТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Су");
								arr[index++] = 'С';
								//sb.Append("Су");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("СУ");
								arr[index++] = 'С';
								//sb.Append("СУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Св");
								arr[index++] = 'С';
								//sb.Append("Св");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("СВ");
								arr[index++] = 'С';
								//sb.Append("СВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Сх");
								arr[index++] = 'С';
								//sb.Append("Сх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("СХ");
								arr[index++] = 'С';
								//sb.Append("СХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 9;	// "y";
								break;
							case 'Y':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 10;	// "Y";
								break;
							case 'z':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 11;	// "z";
								break;
							case 'Z':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 12;	// "Z";
								break;
							default:
								//sb.Append("С");
								arr[index++] = 'С';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 7:	// "sh"
						switch (c)
						{
							case '\'':
								//sb.Append("ш’");
								arr[index++] = 'ш';
								//sb.Append("ш’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("ш№");
								arr[index++] = 'ш';
								//sb.Append("ш№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("шь");
								arr[index++] = 'ш';
								//sb.Append("шь");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("ша");
								arr[index++] = 'ш';
								//sb.Append("ша");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("шА");
								arr[index++] = 'ш';
								//sb.Append("шА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("шб");
								arr[index++] = 'ш';
								//sb.Append("шб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("шБ");
								arr[index++] = 'ш';
								//sb.Append("шБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("шд");
								arr[index++] = 'ш';
								//sb.Append("шд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("шД");
								arr[index++] = 'ш';
								//sb.Append("шД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("ше");
								arr[index++] = 'ш';
								//sb.Append("ше");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("шЕ");
								arr[index++] = 'ш';
								//sb.Append("шЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("шф");
								arr[index++] = 'ш';
								//sb.Append("шф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("шФ");
								arr[index++] = 'ш';
								//sb.Append("шФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 3;	// "g";
								break;
							case 'G':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 4;	// "G";
								break;
							case 'h':
								//sb.Append("щ");
								arr[index++] = 'щ';
								state = 0;	// "";
								break;
							case 'H':
								//sb.Append("шГ");
								arr[index++] = 'ш';
								//sb.Append("шГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("шi");
								arr[index++] = 'ш';
								//sb.Append("шi");
								arr[index++] = 'i';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("шI");
								arr[index++] = 'ш';
								//sb.Append("шI");
								arr[index++] = 'I';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("шй");
								arr[index++] = 'ш';
								//sb.Append("шй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("шЙ");
								arr[index++] = 'ш';
								//sb.Append("шЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("шк");
								arr[index++] = 'ш';
								//sb.Append("шк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("шК");
								arr[index++] = 'ш';
								//sb.Append("шК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("шл");
								arr[index++] = 'ш';
								//sb.Append("шл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("шЛ");
								arr[index++] = 'ш';
								//sb.Append("шЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("шм");
								arr[index++] = 'ш';
								//sb.Append("шм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("шМ");
								arr[index++] = 'ш';
								//sb.Append("шМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("шн");
								arr[index++] = 'ш';
								//sb.Append("шн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("шН");
								arr[index++] = 'ш';
								//sb.Append("шН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("шо");
								arr[index++] = 'ш';
								//sb.Append("шо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("шО");
								arr[index++] = 'ш';
								//sb.Append("шО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("шп");
								arr[index++] = 'ш';
								//sb.Append("шп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("шП");
								arr[index++] = 'ш';
								//sb.Append("шП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("шр");
								arr[index++] = 'ш';
								//sb.Append("шр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("шР");
								arr[index++] = 'ш';
								//sb.Append("шР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 5;	// "s";
								break;
							case 'S':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 6;	// "S";
								break;
							case 't':
								//sb.Append("шт");
								arr[index++] = 'ш';
								//sb.Append("шт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("шТ");
								arr[index++] = 'ш';
								//sb.Append("шТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("шу");
								arr[index++] = 'ш';
								//sb.Append("шу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("шУ");
								arr[index++] = 'ш';
								//sb.Append("шУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("шв");
								arr[index++] = 'ш';
								//sb.Append("шв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("шВ");
								arr[index++] = 'ш';
								//sb.Append("шВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("шх");
								arr[index++] = 'ш';
								//sb.Append("шх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("шХ");
								arr[index++] = 'ш';
								//sb.Append("шХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 9;	// "y";
								break;
							case 'Y':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 10;	// "Y";
								break;
							case 'z':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 11;	// "z";
								break;
							case 'Z':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 12;	// "Z";
								break;
							default:
								//sb.Append("ш");
								arr[index++] = 'ш';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 8:	// "Sh"
						switch (c)
						{
							case '\'':
								//sb.Append("Ш’");
								arr[index++] = 'Ш';
								//sb.Append("Ш’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("Ш№");
								arr[index++] = 'Ш';
								//sb.Append("Ш№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Шь");
								arr[index++] = 'Ш';
								//sb.Append("Шь");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("Ша");
								arr[index++] = 'Ш';
								//sb.Append("Ша");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("ША");
								arr[index++] = 'Ш';
								//sb.Append("ША");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Шб");
								arr[index++] = 'Ш';
								//sb.Append("Шб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("ШБ");
								arr[index++] = 'Ш';
								//sb.Append("ШБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("Шд");
								arr[index++] = 'Ш';
								//sb.Append("Шд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("ШД");
								arr[index++] = 'Ш';
								//sb.Append("ШД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("Ше");
								arr[index++] = 'Ш';
								//sb.Append("Ше");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("ШЕ");
								arr[index++] = 'Ш';
								//sb.Append("ШЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("Шф");
								arr[index++] = 'Ш';
								//sb.Append("Шф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("ШФ");
								arr[index++] = 'Ш';
								//sb.Append("ШФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 3;	// "g";
								break;
							case 'G':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 4;	// "G";
								break;
							case 'h':
								//sb.Append("Щ");
								arr[index++] = 'Щ';
								state = 0;	// "";
								break;
							case 'H':
								//sb.Append("ШГ");
								arr[index++] = 'Ш';
								//sb.Append("ШГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Шi");
								arr[index++] = 'Ш';
								//sb.Append("Шi");
								arr[index++] = 'i';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("ШI");
								arr[index++] = 'Ш';
								//sb.Append("ШI");
								arr[index++] = 'I';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Шй");
								arr[index++] = 'Ш';
								//sb.Append("Шй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("ШЙ");
								arr[index++] = 'Ш';
								//sb.Append("ШЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Шк");
								arr[index++] = 'Ш';
								//sb.Append("Шк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("ШК");
								arr[index++] = 'Ш';
								//sb.Append("ШК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Шл");
								arr[index++] = 'Ш';
								//sb.Append("Шл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("ШЛ");
								arr[index++] = 'Ш';
								//sb.Append("ШЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("Шм");
								arr[index++] = 'Ш';
								//sb.Append("Шм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("ШМ");
								arr[index++] = 'Ш';
								//sb.Append("ШМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Шн");
								arr[index++] = 'Ш';
								//sb.Append("Шн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("ШН");
								arr[index++] = 'Ш';
								//sb.Append("ШН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Шо");
								arr[index++] = 'Ш';
								//sb.Append("Шо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("ШО");
								arr[index++] = 'Ш';
								//sb.Append("ШО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Шп");
								arr[index++] = 'Ш';
								//sb.Append("Шп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("ШП");
								arr[index++] = 'Ш';
								//sb.Append("ШП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Шр");
								arr[index++] = 'Ш';
								//sb.Append("Шр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("ШР");
								arr[index++] = 'Ш';
								//sb.Append("ШР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 5;	// "s";
								break;
							case 'S':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 6;	// "S";
								break;
							case 't':
								//sb.Append("Шт");
								arr[index++] = 'Ш';
								//sb.Append("Шт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("ШТ");
								arr[index++] = 'Ш';
								//sb.Append("ШТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Шу");
								arr[index++] = 'Ш';
								//sb.Append("Шу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("ШУ");
								arr[index++] = 'Ш';
								//sb.Append("ШУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Шв");
								arr[index++] = 'Ш';
								//sb.Append("Шв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("ШВ");
								arr[index++] = 'Ш';
								//sb.Append("ШВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Шх");
								arr[index++] = 'Ш';
								//sb.Append("Шх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("ШХ");
								arr[index++] = 'Ш';
								//sb.Append("ШХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 9;	// "y";
								break;
							case 'Y':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 10;	// "Y";
								break;
							case 'z':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 11;	// "z";
								break;
							case 'Z':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 12;	// "Z";
								break;
							default:
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 9:	// "y"
						switch (c)
						{
							case '\'':
								//sb.Append("y’");
								arr[index++] = 'y';
								//sb.Append("y’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("y№");
								arr[index++] = 'y';
								//sb.Append("y№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("и");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("я");
								arr[index++] = 'я';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("yА");
								arr[index++] = 'y';
								//sb.Append("yА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("yб");
								arr[index++] = 'y';
								//sb.Append("yб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("yБ");
								arr[index++] = 'y';
								//sb.Append("yБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("yд");
								arr[index++] = 'y';
								//sb.Append("yд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("yД");
								arr[index++] = 'y';
								//sb.Append("yД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("є");
								arr[index++] = 'є';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("yЕ");
								arr[index++] = 'y';
								//sb.Append("yЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("yф");
								arr[index++] = 'y';
								//sb.Append("yф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("yФ");
								arr[index++] = 'y';
								//sb.Append("yФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 3;	// "g";
								break;
							case 'G':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 4;	// "G";
								break;
							case 'h':
								//sb.Append("yг");
								arr[index++] = 'y';
								//sb.Append("yг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'H':
								//sb.Append("yГ");
								arr[index++] = 'y';
								//sb.Append("yГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("ї");
								arr[index++] = 'ї';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("yI");
								arr[index++] = 'y';
								//sb.Append("yI");
								arr[index++] = 'I';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("yй");
								arr[index++] = 'y';
								//sb.Append("yй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("yЙ");
								arr[index++] = 'y';
								//sb.Append("yЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("yк");
								arr[index++] = 'y';
								//sb.Append("yк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("yК");
								arr[index++] = 'y';
								//sb.Append("yК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("yл");
								arr[index++] = 'y';
								//sb.Append("yл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("yЛ");
								arr[index++] = 'y';
								//sb.Append("yЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("yм");
								arr[index++] = 'y';
								//sb.Append("yм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("yМ");
								arr[index++] = 'y';
								//sb.Append("yМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("yн");
								arr[index++] = 'y';
								//sb.Append("yн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("yН");
								arr[index++] = 'y';
								//sb.Append("yН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("yо");
								arr[index++] = 'y';
								//sb.Append("yо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("yО");
								arr[index++] = 'y';
								//sb.Append("yО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("yп");
								arr[index++] = 'y';
								//sb.Append("yп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("yП");
								arr[index++] = 'y';
								//sb.Append("yП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("yр");
								arr[index++] = 'y';
								//sb.Append("yр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("yР");
								arr[index++] = 'y';
								//sb.Append("yР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 5;	// "s";
								break;
							case 'S':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 6;	// "S";
								break;
							case 't':
								//sb.Append("yт");
								arr[index++] = 'y';
								//sb.Append("yт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("yТ");
								arr[index++] = 'y';
								//sb.Append("yТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("ю");
								arr[index++] = 'ю';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("yУ");
								arr[index++] = 'y';
								//sb.Append("yУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("yв");
								arr[index++] = 'y';
								//sb.Append("yв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("yВ");
								arr[index++] = 'y';
								//sb.Append("yВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("yх");
								arr[index++] = 'y';
								//sb.Append("yх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("yХ");
								arr[index++] = 'y';
								//sb.Append("yХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("y");
								arr[index++] = 'y';
								break;
							case 'Y':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 10;	// "Y";
								break;
							case 'z':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 11;	// "z";
								break;
							case 'Z':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 12;	// "Z";
								break;
							default:
								//sb.Append("y");
								arr[index++] = 'y';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 10:	// "Y"
						switch (c)
						{
							case '\'':
								//sb.Append("Y’");
								arr[index++] = 'Y';
								//sb.Append("Y’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("Y№");
								arr[index++] = 'Y';
								//sb.Append("Y№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("И");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("Я");
								arr[index++] = 'Я';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("YА");
								arr[index++] = 'Y';
								//sb.Append("YА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Yб");
								arr[index++] = 'Y';
								//sb.Append("Yб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("YБ");
								arr[index++] = 'Y';
								//sb.Append("YБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("Yд");
								arr[index++] = 'Y';
								//sb.Append("Yд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("YД");
								arr[index++] = 'Y';
								//sb.Append("YД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("Є");
								arr[index++] = 'Є';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("YЕ");
								arr[index++] = 'Y';
								//sb.Append("YЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("Yф");
								arr[index++] = 'Y';
								//sb.Append("Yф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("YФ");
								arr[index++] = 'Y';
								//sb.Append("YФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 3;	// "g";
								break;
							case 'G':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 4;	// "G";
								break;
							case 'h':
								//sb.Append("Yг");
								arr[index++] = 'Y';
								//sb.Append("Yг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'H':
								//sb.Append("YГ");
								arr[index++] = 'Y';
								//sb.Append("YГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Ї");
								arr[index++] = 'Ї';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("YI");
								arr[index++] = 'Y';
								//sb.Append("YI");
								arr[index++] = 'I';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Yй");
								arr[index++] = 'Y';
								//sb.Append("Yй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("YЙ");
								arr[index++] = 'Y';
								//sb.Append("YЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Yк");
								arr[index++] = 'Y';
								//sb.Append("Yк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("YК");
								arr[index++] = 'Y';
								//sb.Append("YК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Yл");
								arr[index++] = 'Y';
								//sb.Append("Yл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("YЛ");
								arr[index++] = 'Y';
								//sb.Append("YЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("Yм");
								arr[index++] = 'Y';
								//sb.Append("Yм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("YМ");
								arr[index++] = 'Y';
								//sb.Append("YМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Yн");
								arr[index++] = 'Y';
								//sb.Append("Yн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("YН");
								arr[index++] = 'Y';
								//sb.Append("YН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Yо");
								arr[index++] = 'Y';
								//sb.Append("Yо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("YО");
								arr[index++] = 'Y';
								//sb.Append("YО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Yп");
								arr[index++] = 'Y';
								//sb.Append("Yп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("YП");
								arr[index++] = 'Y';
								//sb.Append("YП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Yр");
								arr[index++] = 'Y';
								//sb.Append("Yр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("YР");
								arr[index++] = 'Y';
								//sb.Append("YР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 5;	// "s";
								break;
							case 'S':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 6;	// "S";
								break;
							case 't':
								//sb.Append("Yт");
								arr[index++] = 'Y';
								//sb.Append("Yт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("YТ");
								arr[index++] = 'Y';
								//sb.Append("YТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Ю");
								arr[index++] = 'Ю';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("YУ");
								arr[index++] = 'Y';
								//sb.Append("YУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Yв");
								arr[index++] = 'Y';
								//sb.Append("Yв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("YВ");
								arr[index++] = 'Y';
								//sb.Append("YВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Yх");
								arr[index++] = 'Y';
								//sb.Append("Yх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("YХ");
								arr[index++] = 'Y';
								//sb.Append("YХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 9;	// "y";
								break;
							case 'Y':
								//sb.Append("Y");
								arr[index++] = 'Y';
								break;
							case 'z':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 11;	// "z";
								break;
							case 'Z':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 12;	// "Z";
								break;
							default:
								//sb.Append("Y");
								arr[index++] = 'Y';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 11:	// "z"
						switch (c)
						{
							case '\'':
								//sb.Append("з’");
								arr[index++] = 'з';
								//sb.Append("з’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("з№");
								arr[index++] = 'з';
								//sb.Append("з№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("зь");
								arr[index++] = 'з';
								//sb.Append("зь");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("за");
								arr[index++] = 'з';
								//sb.Append("за");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("зА");
								arr[index++] = 'з';
								//sb.Append("зА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("зб");
								arr[index++] = 'з';
								//sb.Append("зб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("зБ");
								arr[index++] = 'з';
								//sb.Append("зБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("зд");
								arr[index++] = 'з';
								//sb.Append("зд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("зД");
								arr[index++] = 'з';
								//sb.Append("зД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("зе");
								arr[index++] = 'з';
								//sb.Append("зе");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("зЕ");
								arr[index++] = 'з';
								//sb.Append("зЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("зф");
								arr[index++] = 'з';
								//sb.Append("зф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("зФ");
								arr[index++] = 'з';
								//sb.Append("зФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 3;	// "g";
								break;
							case 'G':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 4;	// "G";
								break;
							case 'h':
								//sb.Append("ж");
								arr[index++] = 'ж';
								state = 0;	// "";
								break;
							case 'H':
								//sb.Append("зГ");
								arr[index++] = 'з';
								//sb.Append("зГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("зi");
								arr[index++] = 'з';
								//sb.Append("зi");
								arr[index++] = 'i';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("зI");
								arr[index++] = 'з';
								//sb.Append("зI");
								arr[index++] = 'I';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("зй");
								arr[index++] = 'з';
								//sb.Append("зй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("зЙ");
								arr[index++] = 'з';
								//sb.Append("зЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("зк");
								arr[index++] = 'з';
								//sb.Append("зк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("зК");
								arr[index++] = 'з';
								//sb.Append("зК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("зл");
								arr[index++] = 'з';
								//sb.Append("зл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("зЛ");
								arr[index++] = 'з';
								//sb.Append("зЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("зм");
								arr[index++] = 'з';
								//sb.Append("зм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("зМ");
								arr[index++] = 'з';
								//sb.Append("зМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("зн");
								arr[index++] = 'з';
								//sb.Append("зн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("зН");
								arr[index++] = 'з';
								//sb.Append("зН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("зо");
								arr[index++] = 'з';
								//sb.Append("зо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("зО");
								arr[index++] = 'з';
								//sb.Append("зО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("зп");
								arr[index++] = 'з';
								//sb.Append("зп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("зП");
								arr[index++] = 'з';
								//sb.Append("зП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("зр");
								arr[index++] = 'з';
								//sb.Append("зр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("зР");
								arr[index++] = 'з';
								//sb.Append("зР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 5;	// "s";
								break;
							case 'S':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 6;	// "S";
								break;
							case 't':
								//sb.Append("зт");
								arr[index++] = 'з';
								//sb.Append("зт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("зТ");
								arr[index++] = 'з';
								//sb.Append("зТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("зу");
								arr[index++] = 'з';
								//sb.Append("зу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("зУ");
								arr[index++] = 'з';
								//sb.Append("зУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("зв");
								arr[index++] = 'з';
								//sb.Append("зв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("зВ");
								arr[index++] = 'з';
								//sb.Append("зВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("зх");
								arr[index++] = 'з';
								//sb.Append("зх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("зХ");
								arr[index++] = 'з';
								//sb.Append("зХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 9;	// "y";
								break;
							case 'Y':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 10;	// "Y";
								break;
							case 'z':
								//sb.Append("з");
								arr[index++] = 'з';
								break;
							case 'Z':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 12;	// "Z";
								break;
							default:
								//sb.Append("з");
								arr[index++] = 'з';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 12:	// "Z"
						switch (c)
						{
							case '\'':
								//sb.Append("З’");
								arr[index++] = 'З';
								//sb.Append("З’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("З№");
								arr[index++] = 'З';
								//sb.Append("З№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Зь");
								arr[index++] = 'З';
								//sb.Append("Зь");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("За");
								arr[index++] = 'З';
								//sb.Append("За");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("ЗА");
								arr[index++] = 'З';
								//sb.Append("ЗА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Зб");
								arr[index++] = 'З';
								//sb.Append("Зб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("ЗБ");
								arr[index++] = 'З';
								//sb.Append("ЗБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("Зд");
								arr[index++] = 'З';
								//sb.Append("Зд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("ЗД");
								arr[index++] = 'З';
								//sb.Append("ЗД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("Зе");
								arr[index++] = 'З';
								//sb.Append("Зе");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("ЗЕ");
								arr[index++] = 'З';
								//sb.Append("ЗЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("Зф");
								arr[index++] = 'З';
								//sb.Append("Зф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("ЗФ");
								arr[index++] = 'З';
								//sb.Append("ЗФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 3;	// "g";
								break;
							case 'G':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 4;	// "G";
								break;
							case 'h':
								//sb.Append("Ж");
								arr[index++] = 'Ж';
								state = 0;	// "";
								break;
							case 'H':
								//sb.Append("ЗГ");
								arr[index++] = 'З';
								//sb.Append("ЗГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Зi");
								arr[index++] = 'З';
								//sb.Append("Зi");
								arr[index++] = 'i';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("ЗI");
								arr[index++] = 'З';
								//sb.Append("ЗI");
								arr[index++] = 'I';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Зй");
								arr[index++] = 'З';
								//sb.Append("Зй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("ЗЙ");
								arr[index++] = 'З';
								//sb.Append("ЗЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Зк");
								arr[index++] = 'З';
								//sb.Append("Зк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("ЗК");
								arr[index++] = 'З';
								//sb.Append("ЗК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Зл");
								arr[index++] = 'З';
								//sb.Append("Зл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("ЗЛ");
								arr[index++] = 'З';
								//sb.Append("ЗЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("Зм");
								arr[index++] = 'З';
								//sb.Append("Зм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("ЗМ");
								arr[index++] = 'З';
								//sb.Append("ЗМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Зн");
								arr[index++] = 'З';
								//sb.Append("Зн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("ЗН");
								arr[index++] = 'З';
								//sb.Append("ЗН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Зо");
								arr[index++] = 'З';
								//sb.Append("Зо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("ЗО");
								arr[index++] = 'З';
								//sb.Append("ЗО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Зп");
								arr[index++] = 'З';
								//sb.Append("Зп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("ЗП");
								arr[index++] = 'З';
								//sb.Append("ЗП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Зр");
								arr[index++] = 'З';
								//sb.Append("Зр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("ЗР");
								arr[index++] = 'З';
								//sb.Append("ЗР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 5;	// "s";
								break;
							case 'S':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 6;	// "S";
								break;
							case 't':
								//sb.Append("Зт");
								arr[index++] = 'З';
								//sb.Append("Зт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("ЗТ");
								arr[index++] = 'З';
								//sb.Append("ЗТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Зу");
								arr[index++] = 'З';
								//sb.Append("Зу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("ЗУ");
								arr[index++] = 'З';
								//sb.Append("ЗУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Зв");
								arr[index++] = 'З';
								//sb.Append("Зв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("ЗВ");
								arr[index++] = 'З';
								//sb.Append("ЗВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Зх");
								arr[index++] = 'З';
								//sb.Append("Зх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("ЗХ");
								arr[index++] = 'З';
								//sb.Append("ЗХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 9;	// "y";
								break;
							case 'Y':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 10;	// "Y";
								break;
							case 'z':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 11;	// "z";
								break;
							case 'Z':
								//sb.Append("З");
								arr[index++] = 'З';
								break;
							default:
								//sb.Append("З");
								arr[index++] = 'З';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
				}
			}

			switch (state)
			{
				case 0:	// ""
					break;				
				case 1:	// "c"
					//sb.Append("ц");
					arr[index++] = 'ц';
					break;				
				case 2:	// "C"
					//sb.Append("Ц");
					arr[index++] = 'Ц';
					break;				
				case 3:	// "g"
					//sb.Append("g");
					arr[index++] = 'g';
					break;				
				case 4:	// "G"
					//sb.Append("G");
					arr[index++] = 'G';
					break;				
				case 5:	// "s"
					//sb.Append("с");
					arr[index++] = 'с';
					break;				
				case 6:	// "S"
					//sb.Append("С");
					arr[index++] = 'С';
					break;				
				case 7:	// "sh"
					//sb.Append("ш");
					arr[index++] = 'ш';
					break;				
				case 8:	// "Sh"
					//sb.Append("Ш");
					arr[index++] = 'Ш';
					break;				
				case 9:	// "y"
					//sb.Append("y");
					arr[index++] = 'y';
					break;				
				case 10:	// "Y"
					//sb.Append("Y");
					arr[index++] = 'Y';
					break;				
				case 11:	// "z"
					//sb.Append("з");
					arr[index++] = 'з';
					break;				
				case 12:	// "Z"
					//sb.Append("З");
					arr[index++] = 'З';
					break;				
			}
			//return sb.ToString();
			return new string(arr, 0, index);
		}

		internal static string Cyrillic2LatinBulgarian(string text)
		{
			var sb = new StringBuilder();
			var state = 0;			
			for (var i = 0; i < text.Length; i++)
			{
				var c = text[i];
				switch (state)
				{
					case 0:	// ""
						switch (c)
						{
							case '’':
								sb.Append("\'");
								break;
							case 'i':
								sb.Append("i");
								break;
							case 'I':
								sb.Append("I");
								break;
							case '№':
								sb.Append("#");
								break;
							case 'а':
								sb.Append("a");
								break;
							case 'А':
								sb.Append("A");
								break;
							case 'б':
								sb.Append("b");
								break;
							case 'Б':
								sb.Append("B");
								break;
							case 'в':
								sb.Append("v");
								break;
							case 'В':
								sb.Append("V");
								break;
							case 'г':
								sb.Append("g");
								break;
							case 'Г':
								sb.Append("G");
								break;
							case 'д':
								sb.Append("d");
								break;
							case 'Д':
								sb.Append("D");
								break;
							case 'е':
								sb.Append("e");
								break;
							case 'Е':
								sb.Append("E");
								break;
							case 'ж':
								sb.Append("zh");
								break;
							case 'Ж':
								sb.Append("Zh");
								break;
							case 'з':
								sb.Append("z");
								break;
							case 'З':
								sb.Append("Z");
								break;
							case 'и':
								sb.Append("i");
								break;
							case 'И':
								sb.Append("I");
								break;
							case 'й':
								sb.Append("j");
								break;
							case 'Й':
								sb.Append("J");
								break;
							case 'к':
								sb.Append("k");
								break;
							case 'К':
								sb.Append("K");
								break;
							case 'л':
								sb.Append("l");
								break;
							case 'Л':
								sb.Append("L");
								break;
							case 'м':
								sb.Append("m");
								break;
							case 'М':
								sb.Append("M");
								break;
							case 'н':
								sb.Append("n");
								break;
							case 'Н':
								sb.Append("N");
								break;
							case 'о':
								sb.Append("o");
								break;
							case 'О':
								sb.Append("O");
								break;
							case 'п':
								sb.Append("p");
								break;
							case 'П':
								sb.Append("P");
								break;
							case 'р':
								sb.Append("r");
								break;
							case 'Р':
								sb.Append("R");
								break;
							case 'с':
								sb.Append("s");
								break;
							case 'С':
								sb.Append("S");
								break;
							case 'т':
								sb.Append("t");
								break;
							case 'Т':
								sb.Append("T");
								break;
							case 'у':
								sb.Append("u");
								break;
							case 'У':
								sb.Append("U");
								break;
							case 'ф':
								sb.Append("f");
								break;
							case 'Ф':
								sb.Append("F");
								break;
							case 'х':
								sb.Append("x");
								break;
							case 'Х':
								sb.Append("X");
								break;
							case 'ц':
								state = 1;	// "ц";
								break;
							case 'Ц':
								state = 2;	// "Ц";
								break;
							case 'ч':
								sb.Append("ch");
								break;
							case 'Ч':
								sb.Append("Ch");
								break;
							case 'ш':
								sb.Append("sh");
								break;
							case 'Ш':
								sb.Append("Sh");
								break;
							case 'щ':
								sb.Append("sht");
								break;
							case 'Щ':
								sb.Append("Sht");
								break;
							case 'ъ':
								sb.Append("a`");
								break;
							case 'Ъ':
								sb.Append("A`");
								break;
							case 'ь':
								sb.Append("`");
								break;
							case 'Ь':
								sb.Append("`");
								break;
							case 'ю':
								sb.Append("yu");
								break;
							case 'Ю':
								sb.Append("Yu");
								break;
							case 'я':
								sb.Append("ya");
								break;
							case 'Я':
								sb.Append("Ya");
								break;
							case 'ѣ':
								sb.Append("ye");
								break;
							case 'Ѣ':
								sb.Append("Ye");
								break;
							case 'ѫ':
								sb.Append("о`");
								break;
							case 'Ѫ':
								sb.Append("О`");
								break;
							case 'ѳ':
								sb.Append("fh");
								break;
							case 'Ѳ':
								sb.Append("Fh");
								break;
							case 'ѵ':
								sb.Append("yh");
								break;
							case 'Ѵ':
								sb.Append("Yh");
								break;
							default:
								sb.Append(c);
								break;
						}
						break;				
					case 1:	// "ц"
						switch (c)
						{
							case '’':
								sb.Append("cz\'");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("ce");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("cE");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("ci");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("cI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("cj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("cJ");
								state = 0;	// "";
								break;
							case '№':
								sb.Append("cz#");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("cy");
								state = 0;	// "";
								break;
							case 'Y':
								sb.Append("cY");
								state = 0;	// "";
								break;
							case 'а':
								sb.Append("cza");
								state = 0;	// "";
								break;
							case 'А':
								sb.Append("czA");
								state = 0;	// "";
								break;
							case 'б':
								sb.Append("czb");
								state = 0;	// "";
								break;
							case 'Б':
								sb.Append("czB");
								state = 0;	// "";
								break;
							case 'в':
								sb.Append("czv");
								state = 0;	// "";
								break;
							case 'В':
								sb.Append("czV");
								state = 0;	// "";
								break;
							case 'г':
								sb.Append("czg");
								state = 0;	// "";
								break;
							case 'Г':
								sb.Append("czG");
								state = 0;	// "";
								break;
							case 'д':
								sb.Append("czd");
								state = 0;	// "";
								break;
							case 'Д':
								sb.Append("czD");
								state = 0;	// "";
								break;
							case 'е':
								sb.Append("ce");
								state = 0;	// "";
								break;
							case 'Е':
								sb.Append("cE");
								state = 0;	// "";
								break;
							case 'ж':
								sb.Append("czzh");
								state = 0;	// "";
								break;
							case 'Ж':
								sb.Append("czZh");
								state = 0;	// "";
								break;
							case 'з':
								sb.Append("czz");
								state = 0;	// "";
								break;
							case 'З':
								sb.Append("czZ");
								state = 0;	// "";
								break;
							case 'и':
								sb.Append("ci");
								state = 0;	// "";
								break;
							case 'И':
								sb.Append("cI");
								state = 0;	// "";
								break;
							case 'й':
								sb.Append("cj");
								state = 0;	// "";
								break;
							case 'Й':
								sb.Append("cJ");
								state = 0;	// "";
								break;
							case 'к':
								sb.Append("czk");
								state = 0;	// "";
								break;
							case 'К':
								sb.Append("czK");
								state = 0;	// "";
								break;
							case 'л':
								sb.Append("czl");
								state = 0;	// "";
								break;
							case 'Л':
								sb.Append("czL");
								state = 0;	// "";
								break;
							case 'м':
								sb.Append("czm");
								state = 0;	// "";
								break;
							case 'М':
								sb.Append("czM");
								state = 0;	// "";
								break;
							case 'н':
								sb.Append("czn");
								state = 0;	// "";
								break;
							case 'Н':
								sb.Append("czN");
								state = 0;	// "";
								break;
							case 'о':
								sb.Append("czo");
								state = 0;	// "";
								break;
							case 'О':
								sb.Append("czO");
								state = 0;	// "";
								break;
							case 'п':
								sb.Append("czp");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("czP");
								state = 0;	// "";
								break;
							case 'р':
								sb.Append("czr");
								state = 0;	// "";
								break;
							case 'Р':
								sb.Append("czR");
								state = 0;	// "";
								break;
							case 'с':
								sb.Append("czs");
								state = 0;	// "";
								break;
							case 'С':
								sb.Append("czS");
								state = 0;	// "";
								break;
							case 'т':
								sb.Append("czt");
								state = 0;	// "";
								break;
							case 'Т':
								sb.Append("czT");
								state = 0;	// "";
								break;
							case 'у':
								sb.Append("czu");
								state = 0;	// "";
								break;
							case 'У':
								sb.Append("czU");
								state = 0;	// "";
								break;
							case 'ф':
								sb.Append("czf");
								state = 0;	// "";
								break;
							case 'Ф':
								sb.Append("czF");
								state = 0;	// "";
								break;
							case 'х':
								sb.Append("czx");
								state = 0;	// "";
								break;
							case 'Х':
								sb.Append("czX");
								state = 0;	// "";
								break;
							case 'ц':
								sb.Append("cz");
								break;
							case 'Ц':
								sb.Append("cz");
								state = 2;	// "Ц";
								break;
							case 'ч':
								sb.Append("czch");
								state = 0;	// "";
								break;
							case 'Ч':
								sb.Append("czCh");
								state = 0;	// "";
								break;
							case 'ш':
								sb.Append("czsh");
								state = 0;	// "";
								break;
							case 'Ш':
								sb.Append("czSh");
								state = 0;	// "";
								break;
							case 'щ':
								sb.Append("czsht");
								state = 0;	// "";
								break;
							case 'Щ':
								sb.Append("czSht");
								state = 0;	// "";
								break;
							case 'ъ':
								sb.Append("cza`");
								state = 0;	// "";
								break;
							case 'Ъ':
								sb.Append("czA`");
								state = 0;	// "";
								break;
							case 'ь':
								sb.Append("cz`");
								state = 0;	// "";
								break;
							case 'Ь':
								sb.Append("cz`");
								state = 0;	// "";
								break;
							case 'ю':
								sb.Append("cyu");
								state = 0;	// "";
								break;
							case 'Ю':
								sb.Append("cYu");
								state = 0;	// "";
								break;
							case 'я':
								sb.Append("cya");
								state = 0;	// "";
								break;
							case 'Я':
								sb.Append("cYa");
								state = 0;	// "";
								break;
							case 'ѣ':
								sb.Append("cye");
								state = 0;	// "";
								break;
							case 'Ѣ':
								sb.Append("cYe");
								state = 0;	// "";
								break;
							case 'ѫ':
								sb.Append("czо`");
								state = 0;	// "";
								break;
							case 'Ѫ':
								sb.Append("czО`");
								state = 0;	// "";
								break;
							case 'ѳ':
								sb.Append("czfh");
								state = 0;	// "";
								break;
							case 'Ѳ':
								sb.Append("czFh");
								state = 0;	// "";
								break;
							case 'ѵ':
								sb.Append("cyh");
								state = 0;	// "";
								break;
							case 'Ѵ':
								sb.Append("cYh");
								state = 0;	// "";
								break;
							default:
								sb.Append("cz");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 2:	// "Ц"
						switch (c)
						{
							case '’':
								sb.Append("Cz\'");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Ce");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("CE");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Ci");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("CI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Cj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("CJ");
								state = 0;	// "";
								break;
							case '№':
								sb.Append("Cz#");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Cy");
								state = 0;	// "";
								break;
							case 'Y':
								sb.Append("CY");
								state = 0;	// "";
								break;
							case 'а':
								sb.Append("Cza");
								state = 0;	// "";
								break;
							case 'А':
								sb.Append("CzA");
								state = 0;	// "";
								break;
							case 'б':
								sb.Append("Czb");
								state = 0;	// "";
								break;
							case 'Б':
								sb.Append("CzB");
								state = 0;	// "";
								break;
							case 'в':
								sb.Append("Czv");
								state = 0;	// "";
								break;
							case 'В':
								sb.Append("CzV");
								state = 0;	// "";
								break;
							case 'г':
								sb.Append("Czg");
								state = 0;	// "";
								break;
							case 'Г':
								sb.Append("CzG");
								state = 0;	// "";
								break;
							case 'д':
								sb.Append("Czd");
								state = 0;	// "";
								break;
							case 'Д':
								sb.Append("CzD");
								state = 0;	// "";
								break;
							case 'е':
								sb.Append("Ce");
								state = 0;	// "";
								break;
							case 'Е':
								sb.Append("CE");
								state = 0;	// "";
								break;
							case 'ж':
								sb.Append("Czzh");
								state = 0;	// "";
								break;
							case 'Ж':
								sb.Append("CzZh");
								state = 0;	// "";
								break;
							case 'з':
								sb.Append("Czz");
								state = 0;	// "";
								break;
							case 'З':
								sb.Append("CzZ");
								state = 0;	// "";
								break;
							case 'и':
								sb.Append("Ci");
								state = 0;	// "";
								break;
							case 'И':
								sb.Append("CI");
								state = 0;	// "";
								break;
							case 'й':
								sb.Append("Cj");
								state = 0;	// "";
								break;
							case 'Й':
								sb.Append("CJ");
								state = 0;	// "";
								break;
							case 'к':
								sb.Append("Czk");
								state = 0;	// "";
								break;
							case 'К':
								sb.Append("CzK");
								state = 0;	// "";
								break;
							case 'л':
								sb.Append("Czl");
								state = 0;	// "";
								break;
							case 'Л':
								sb.Append("CzL");
								state = 0;	// "";
								break;
							case 'м':
								sb.Append("Czm");
								state = 0;	// "";
								break;
							case 'М':
								sb.Append("CzM");
								state = 0;	// "";
								break;
							case 'н':
								sb.Append("Czn");
								state = 0;	// "";
								break;
							case 'Н':
								sb.Append("CzN");
								state = 0;	// "";
								break;
							case 'о':
								sb.Append("Czo");
								state = 0;	// "";
								break;
							case 'О':
								sb.Append("CzO");
								state = 0;	// "";
								break;
							case 'п':
								sb.Append("Czp");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("CzP");
								state = 0;	// "";
								break;
							case 'р':
								sb.Append("Czr");
								state = 0;	// "";
								break;
							case 'Р':
								sb.Append("CzR");
								state = 0;	// "";
								break;
							case 'с':
								sb.Append("Czs");
								state = 0;	// "";
								break;
							case 'С':
								sb.Append("CzS");
								state = 0;	// "";
								break;
							case 'т':
								sb.Append("Czt");
								state = 0;	// "";
								break;
							case 'Т':
								sb.Append("CzT");
								state = 0;	// "";
								break;
							case 'у':
								sb.Append("Czu");
								state = 0;	// "";
								break;
							case 'У':
								sb.Append("CzU");
								state = 0;	// "";
								break;
							case 'ф':
								sb.Append("Czf");
								state = 0;	// "";
								break;
							case 'Ф':
								sb.Append("CzF");
								state = 0;	// "";
								break;
							case 'х':
								sb.Append("Czx");
								state = 0;	// "";
								break;
							case 'Х':
								sb.Append("CzX");
								state = 0;	// "";
								break;
							case 'ц':
								sb.Append("Cz");
								state = 1;	// "ц";
								break;
							case 'Ц':
								sb.Append("Cz");
								break;
							case 'ч':
								sb.Append("Czch");
								state = 0;	// "";
								break;
							case 'Ч':
								sb.Append("CzCh");
								state = 0;	// "";
								break;
							case 'ш':
								sb.Append("Czsh");
								state = 0;	// "";
								break;
							case 'Ш':
								sb.Append("CzSh");
								state = 0;	// "";
								break;
							case 'щ':
								sb.Append("Czsht");
								state = 0;	// "";
								break;
							case 'Щ':
								sb.Append("CzSht");
								state = 0;	// "";
								break;
							case 'ъ':
								sb.Append("Cza`");
								state = 0;	// "";
								break;
							case 'Ъ':
								sb.Append("CzA`");
								state = 0;	// "";
								break;
							case 'ь':
								sb.Append("Cz`");
								state = 0;	// "";
								break;
							case 'Ь':
								sb.Append("Cz`");
								state = 0;	// "";
								break;
							case 'ю':
								sb.Append("Cyu");
								state = 0;	// "";
								break;
							case 'Ю':
								sb.Append("CYu");
								state = 0;	// "";
								break;
							case 'я':
								sb.Append("Cya");
								state = 0;	// "";
								break;
							case 'Я':
								sb.Append("CYa");
								state = 0;	// "";
								break;
							case 'ѣ':
								sb.Append("Cye");
								state = 0;	// "";
								break;
							case 'Ѣ':
								sb.Append("CYe");
								state = 0;	// "";
								break;
							case 'ѫ':
								sb.Append("Czо`");
								state = 0;	// "";
								break;
							case 'Ѫ':
								sb.Append("CzО`");
								state = 0;	// "";
								break;
							case 'ѳ':
								sb.Append("Czfh");
								state = 0;	// "";
								break;
							case 'Ѳ':
								sb.Append("CzFh");
								state = 0;	// "";
								break;
							case 'ѵ':
								sb.Append("Cyh");
								state = 0;	// "";
								break;
							case 'Ѵ':
								sb.Append("CYh");
								state = 0;	// "";
								break;
							default:
								sb.Append("Cz");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
				}
			}

			switch (state)
			{
				case 0:	// ""
					break;				
				case 1:	// "ц"
					sb.Append("cz");
					break;				
				case 2:	// "Ц"
					sb.Append("Cz");
					break;				
			}
			return sb.ToString();
		}

        internal static string Latin2CyrillicBulgarian(string text)
		{
			//var sb = new StringBuilder(text.Length);
			var arr = new char[text.Length];
			var index = 0;

			var state = 0;			
			for (var i = 0; i < text.Length; i++)
			{
				var c = text[i];
				switch (state)
				{
					case 0:	// ""
						switch (c)
						{
							case '\'':
								//sb.Append("’");
								arr[index++] = '’';
								break;
							case '#':
								//sb.Append("№");
								arr[index++] = '№';
								break;
							case '`':
								//sb.Append("ь");
								arr[index++] = 'ь';
								break;
							case 'a':
								state = 1;	// "a";
								break;
							case 'A':
								state = 2;	// "A";
								break;
							case 'b':
								//sb.Append("б");
								arr[index++] = 'б';
								break;
							case 'B':
								//sb.Append("Б");
								arr[index++] = 'Б';
								break;
							case 'c':
								state = 3;	// "c";
								break;
							case 'C':
								state = 4;	// "C";
								break;
							case 'd':
								//sb.Append("д");
								arr[index++] = 'д';
								break;
							case 'D':
								//sb.Append("Д");
								arr[index++] = 'Д';
								break;
							case 'e':
								//sb.Append("е");
								arr[index++] = 'е';
								break;
							case 'E':
								//sb.Append("Е");
								arr[index++] = 'Е';
								break;
							case 'f':
								state = 5;	// "f";
								break;
							case 'F':
								state = 6;	// "F";
								break;
							case 'g':
								//sb.Append("г");
								arr[index++] = 'г';
								break;
							case 'G':
								//sb.Append("Г");
								arr[index++] = 'Г';
								break;
							case 'i':
								//sb.Append("и");
								arr[index++] = 'и';
								break;
							case 'I':
								//sb.Append("И");
								arr[index++] = 'И';
								break;
							case 'j':
								//sb.Append("й");
								arr[index++] = 'й';
								break;
							case 'J':
								//sb.Append("Й");
								arr[index++] = 'Й';
								break;
							case 'k':
								//sb.Append("к");
								arr[index++] = 'к';
								break;
							case 'K':
								//sb.Append("К");
								arr[index++] = 'К';
								break;
							case 'l':
								//sb.Append("л");
								arr[index++] = 'л';
								break;
							case 'L':
								//sb.Append("Л");
								arr[index++] = 'Л';
								break;
							case 'm':
								//sb.Append("м");
								arr[index++] = 'м';
								break;
							case 'M':
								//sb.Append("М");
								arr[index++] = 'М';
								break;
							case 'n':
								//sb.Append("н");
								arr[index++] = 'н';
								break;
							case 'N':
								//sb.Append("Н");
								arr[index++] = 'Н';
								break;
							case 'o':
								//sb.Append("о");
								arr[index++] = 'о';
								break;
							case 'O':
								//sb.Append("О");
								arr[index++] = 'О';
								break;
							case 'p':
								//sb.Append("п");
								arr[index++] = 'п';
								break;
							case 'P':
								//sb.Append("П");
								arr[index++] = 'П';
								break;
							case 'r':
								//sb.Append("р");
								arr[index++] = 'р';
								break;
							case 'R':
								//sb.Append("Р");
								arr[index++] = 'Р';
								break;
							case 's':
								state = 7;	// "s";
								break;
							case 'S':
								state = 8;	// "S";
								break;
							case 't':
								//sb.Append("т");
								arr[index++] = 'т';
								break;
							case 'T':
								//sb.Append("Т");
								arr[index++] = 'Т';
								break;
							case 'u':
								//sb.Append("у");
								arr[index++] = 'у';
								break;
							case 'U':
								//sb.Append("У");
								arr[index++] = 'У';
								break;
							case 'v':
								//sb.Append("в");
								arr[index++] = 'в';
								break;
							case 'V':
								//sb.Append("В");
								arr[index++] = 'В';
								break;
							case 'x':
								//sb.Append("х");
								arr[index++] = 'х';
								break;
							case 'X':
								//sb.Append("Х");
								arr[index++] = 'Х';
								break;
							case 'y':
								state = 11;	// "y";
								break;
							case 'Y':
								state = 12;	// "Y";
								break;
							case 'z':
								state = 13;	// "z";
								break;
							case 'Z':
								state = 14;	// "Z";
								break;
							case 'о':
								state = 15;	// "о";
								break;
							case 'О':
								state = 16;	// "О";
								break;
							default:
								//sb.Append(c);
								arr[index++] = c;
								break;
						}
						break;				
					case 1:	// "a"
						switch (c)
						{
							case '\'':
								//sb.Append("а’");
								arr[index++] = 'а';
								//sb.Append("а’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("а№");
								arr[index++] = 'а';
								//sb.Append("а№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("ъ");
								arr[index++] = 'ъ';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("а");
								arr[index++] = 'а';
								break;
							case 'A':
								//sb.Append("а");
								arr[index++] = 'а';
								state = 2;	// "A";
								break;
							case 'b':
								//sb.Append("аб");
								arr[index++] = 'а';
								//sb.Append("аб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("аБ");
								arr[index++] = 'а';
								//sb.Append("аБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("а");
								arr[index++] = 'а';
								state = 3;	// "c";
								break;
							case 'C':
								//sb.Append("а");
								arr[index++] = 'а';
								state = 4;	// "C";
								break;
							case 'd':
								//sb.Append("ад");
								arr[index++] = 'а';
								//sb.Append("ад");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("аД");
								arr[index++] = 'а';
								//sb.Append("аД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("ае");
								arr[index++] = 'а';
								//sb.Append("ае");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("аЕ");
								arr[index++] = 'а';
								//sb.Append("аЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("а");
								arr[index++] = 'а';
								state = 5;	// "f";
								break;
							case 'F':
								//sb.Append("а");
								arr[index++] = 'а';
								state = 6;	// "F";
								break;
							case 'g':
								//sb.Append("аг");
								arr[index++] = 'а';
								//sb.Append("аг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("аГ");
								arr[index++] = 'а';
								//sb.Append("аГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("аи");
								arr[index++] = 'а';
								//sb.Append("аи");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("аИ");
								arr[index++] = 'а';
								//sb.Append("аИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("ай");
								arr[index++] = 'а';
								//sb.Append("ай");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("аЙ");
								arr[index++] = 'а';
								//sb.Append("аЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("ак");
								arr[index++] = 'а';
								//sb.Append("ак");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("аК");
								arr[index++] = 'а';
								//sb.Append("аК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("ал");
								arr[index++] = 'а';
								//sb.Append("ал");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("аЛ");
								arr[index++] = 'а';
								//sb.Append("аЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("ам");
								arr[index++] = 'а';
								//sb.Append("ам");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("аМ");
								arr[index++] = 'а';
								//sb.Append("аМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("ан");
								arr[index++] = 'а';
								//sb.Append("ан");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("аН");
								arr[index++] = 'а';
								//sb.Append("аН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("ао");
								arr[index++] = 'а';
								//sb.Append("ао");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("аО");
								arr[index++] = 'а';
								//sb.Append("аО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("ап");
								arr[index++] = 'а';
								//sb.Append("ап");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("аП");
								arr[index++] = 'а';
								//sb.Append("аП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("ар");
								arr[index++] = 'а';
								//sb.Append("ар");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("аР");
								arr[index++] = 'а';
								//sb.Append("аР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("а");
								arr[index++] = 'а';
								state = 7;	// "s";
								break;
							case 'S':
								//sb.Append("а");
								arr[index++] = 'а';
								state = 8;	// "S";
								break;
							case 't':
								//sb.Append("ат");
								arr[index++] = 'а';
								//sb.Append("ат");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("аТ");
								arr[index++] = 'а';
								//sb.Append("аТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("ау");
								arr[index++] = 'а';
								//sb.Append("ау");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("аУ");
								arr[index++] = 'а';
								//sb.Append("аУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("ав");
								arr[index++] = 'а';
								//sb.Append("ав");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("аВ");
								arr[index++] = 'а';
								//sb.Append("аВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("ах");
								arr[index++] = 'а';
								//sb.Append("ах");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("аХ");
								arr[index++] = 'а';
								//sb.Append("аХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("а");
								arr[index++] = 'а';
								state = 11;	// "y";
								break;
							case 'Y':
								//sb.Append("а");
								arr[index++] = 'а';
								state = 12;	// "Y";
								break;
							case 'z':
								//sb.Append("а");
								arr[index++] = 'а';
								state = 13;	// "z";
								break;
							case 'Z':
								//sb.Append("а");
								arr[index++] = 'а';
								state = 14;	// "Z";
								break;
							case 'о':
								//sb.Append("а");
								arr[index++] = 'а';
								state = 15;	// "о";
								break;
							case 'О':
								//sb.Append("а");
								arr[index++] = 'а';
								state = 16;	// "О";
								break;
							default:
								//sb.Append("а");
								arr[index++] = 'а';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 2:	// "A"
						switch (c)
						{
							case '\'':
								//sb.Append("А’");
								arr[index++] = 'А';
								//sb.Append("А’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("А№");
								arr[index++] = 'А';
								//sb.Append("А№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Ъ");
								arr[index++] = 'Ъ';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("А");
								arr[index++] = 'А';
								state = 1;	// "a";
								break;
							case 'A':
								//sb.Append("А");
								arr[index++] = 'А';
								break;
							case 'b':
								//sb.Append("Аб");
								arr[index++] = 'А';
								//sb.Append("Аб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("АБ");
								arr[index++] = 'А';
								//sb.Append("АБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("А");
								arr[index++] = 'А';
								state = 3;	// "c";
								break;
							case 'C':
								//sb.Append("А");
								arr[index++] = 'А';
								state = 4;	// "C";
								break;
							case 'd':
								//sb.Append("Ад");
								arr[index++] = 'А';
								//sb.Append("Ад");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("АД");
								arr[index++] = 'А';
								//sb.Append("АД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("Ае");
								arr[index++] = 'А';
								//sb.Append("Ае");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("АЕ");
								arr[index++] = 'А';
								//sb.Append("АЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("А");
								arr[index++] = 'А';
								state = 5;	// "f";
								break;
							case 'F':
								//sb.Append("А");
								arr[index++] = 'А';
								state = 6;	// "F";
								break;
							case 'g':
								//sb.Append("Аг");
								arr[index++] = 'А';
								//sb.Append("Аг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("АГ");
								arr[index++] = 'А';
								//sb.Append("АГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Аи");
								arr[index++] = 'А';
								//sb.Append("Аи");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("АИ");
								arr[index++] = 'А';
								//sb.Append("АИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Ай");
								arr[index++] = 'А';
								//sb.Append("Ай");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("АЙ");
								arr[index++] = 'А';
								//sb.Append("АЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Ак");
								arr[index++] = 'А';
								//sb.Append("Ак");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("АК");
								arr[index++] = 'А';
								//sb.Append("АК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Ал");
								arr[index++] = 'А';
								//sb.Append("Ал");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("АЛ");
								arr[index++] = 'А';
								//sb.Append("АЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("Ам");
								arr[index++] = 'А';
								//sb.Append("Ам");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("АМ");
								arr[index++] = 'А';
								//sb.Append("АМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Ан");
								arr[index++] = 'А';
								//sb.Append("Ан");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("АН");
								arr[index++] = 'А';
								//sb.Append("АН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Ао");
								arr[index++] = 'А';
								//sb.Append("Ао");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("АО");
								arr[index++] = 'А';
								//sb.Append("АО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Ап");
								arr[index++] = 'А';
								//sb.Append("Ап");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("АП");
								arr[index++] = 'А';
								//sb.Append("АП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Ар");
								arr[index++] = 'А';
								//sb.Append("Ар");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("АР");
								arr[index++] = 'А';
								//sb.Append("АР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("А");
								arr[index++] = 'А';
								state = 7;	// "s";
								break;
							case 'S':
								//sb.Append("А");
								arr[index++] = 'А';
								state = 8;	// "S";
								break;
							case 't':
								//sb.Append("Ат");
								arr[index++] = 'А';
								//sb.Append("Ат");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("АТ");
								arr[index++] = 'А';
								//sb.Append("АТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Ау");
								arr[index++] = 'А';
								//sb.Append("Ау");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("АУ");
								arr[index++] = 'А';
								//sb.Append("АУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Ав");
								arr[index++] = 'А';
								//sb.Append("Ав");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("АВ");
								arr[index++] = 'А';
								//sb.Append("АВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Ах");
								arr[index++] = 'А';
								//sb.Append("Ах");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("АХ");
								arr[index++] = 'А';
								//sb.Append("АХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("А");
								arr[index++] = 'А';
								state = 11;	// "y";
								break;
							case 'Y':
								//sb.Append("А");
								arr[index++] = 'А';
								state = 12;	// "Y";
								break;
							case 'z':
								//sb.Append("А");
								arr[index++] = 'А';
								state = 13;	// "z";
								break;
							case 'Z':
								//sb.Append("А");
								arr[index++] = 'А';
								state = 14;	// "Z";
								break;
							case 'о':
								//sb.Append("А");
								arr[index++] = 'А';
								state = 15;	// "о";
								break;
							case 'О':
								//sb.Append("А");
								arr[index++] = 'А';
								state = 16;	// "О";
								break;
							default:
								//sb.Append("А");
								arr[index++] = 'А';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 3:	// "c"
						switch (c)
						{
							case '\'':
								//sb.Append("ц’");
								arr[index++] = 'ц';
								//sb.Append("ц’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("ц№");
								arr[index++] = 'ц';
								//sb.Append("ц№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("ць");
								arr[index++] = 'ц';
								//sb.Append("ць");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 1;	// "a";
								break;
							case 'A':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 2;	// "A";
								break;
							case 'b':
								//sb.Append("цб");
								arr[index++] = 'ц';
								//sb.Append("цб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("цБ");
								arr[index++] = 'ц';
								//sb.Append("цБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("ц");
								arr[index++] = 'ц';
								break;
							case 'C':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 4;	// "C";
								break;
							case 'd':
								//sb.Append("цд");
								arr[index++] = 'ц';
								//sb.Append("цд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("цД");
								arr[index++] = 'ц';
								//sb.Append("цД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("це");
								arr[index++] = 'ц';
								//sb.Append("це");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("цЕ");
								arr[index++] = 'ц';
								//sb.Append("цЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 5;	// "f";
								break;
							case 'F':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 6;	// "F";
								break;
							case 'g':
								//sb.Append("цг");
								arr[index++] = 'ц';
								//sb.Append("цг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("цГ");
								arr[index++] = 'ц';
								//sb.Append("цГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("ч");
								arr[index++] = 'ч';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("ци");
								arr[index++] = 'ц';
								//sb.Append("ци");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("цИ");
								arr[index++] = 'ц';
								//sb.Append("цИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("цй");
								arr[index++] = 'ц';
								//sb.Append("цй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("цЙ");
								arr[index++] = 'ц';
								//sb.Append("цЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("цк");
								arr[index++] = 'ц';
								//sb.Append("цк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("цК");
								arr[index++] = 'ц';
								//sb.Append("цК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("цл");
								arr[index++] = 'ц';
								//sb.Append("цл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("цЛ");
								arr[index++] = 'ц';
								//sb.Append("цЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("цм");
								arr[index++] = 'ц';
								//sb.Append("цм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("цМ");
								arr[index++] = 'ц';
								//sb.Append("цМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("цн");
								arr[index++] = 'ц';
								//sb.Append("цн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("цН");
								arr[index++] = 'ц';
								//sb.Append("цН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("цо");
								arr[index++] = 'ц';
								//sb.Append("цо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("цО");
								arr[index++] = 'ц';
								//sb.Append("цО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("цп");
								arr[index++] = 'ц';
								//sb.Append("цп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("цП");
								arr[index++] = 'ц';
								//sb.Append("цП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("цр");
								arr[index++] = 'ц';
								//sb.Append("цр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("цР");
								arr[index++] = 'ц';
								//sb.Append("цР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 7;	// "s";
								break;
							case 'S':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 8;	// "S";
								break;
							case 't':
								//sb.Append("цт");
								arr[index++] = 'ц';
								//sb.Append("цт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("цТ");
								arr[index++] = 'ц';
								//sb.Append("цТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("цу");
								arr[index++] = 'ц';
								//sb.Append("цу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("цУ");
								arr[index++] = 'ц';
								//sb.Append("цУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("цв");
								arr[index++] = 'ц';
								//sb.Append("цв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("цВ");
								arr[index++] = 'ц';
								//sb.Append("цВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("цх");
								arr[index++] = 'ц';
								//sb.Append("цх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("цХ");
								arr[index++] = 'ц';
								//sb.Append("цХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 11;	// "y";
								break;
							case 'Y':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 12;	// "Y";
								break;
							case 'z':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 0;	// "";
								break;
							case 'Z':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 14;	// "Z";
								break;
							case 'о':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 15;	// "о";
								break;
							case 'О':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 16;	// "О";
								break;
							default:
								//sb.Append("ц");
								arr[index++] = 'ц';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 4:	// "C"
						switch (c)
						{
							case '\'':
								//sb.Append("Ц’");
								arr[index++] = 'Ц';
								//sb.Append("Ц’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("Ц№");
								arr[index++] = 'Ц';
								//sb.Append("Ц№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Ць");
								arr[index++] = 'Ц';
								//sb.Append("Ць");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 1;	// "a";
								break;
							case 'A':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 2;	// "A";
								break;
							case 'b':
								//sb.Append("Цб");
								arr[index++] = 'Ц';
								//sb.Append("Цб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("ЦБ");
								arr[index++] = 'Ц';
								//sb.Append("ЦБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 3;	// "c";
								break;
							case 'C':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								break;
							case 'd':
								//sb.Append("Цд");
								arr[index++] = 'Ц';
								//sb.Append("Цд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("ЦД");
								arr[index++] = 'Ц';
								//sb.Append("ЦД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("Це");
								arr[index++] = 'Ц';
								//sb.Append("Це");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("ЦЕ");
								arr[index++] = 'Ц';
								//sb.Append("ЦЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 5;	// "f";
								break;
							case 'F':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 6;	// "F";
								break;
							case 'g':
								//sb.Append("Цг");
								arr[index++] = 'Ц';
								//sb.Append("Цг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("ЦГ");
								arr[index++] = 'Ц';
								//sb.Append("ЦГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("Ч");
								arr[index++] = 'Ч';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Ци");
								arr[index++] = 'Ц';
								//sb.Append("Ци");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("ЦИ");
								arr[index++] = 'Ц';
								//sb.Append("ЦИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Цй");
								arr[index++] = 'Ц';
								//sb.Append("Цй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("ЦЙ");
								arr[index++] = 'Ц';
								//sb.Append("ЦЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Цк");
								arr[index++] = 'Ц';
								//sb.Append("Цк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("ЦК");
								arr[index++] = 'Ц';
								//sb.Append("ЦК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Цл");
								arr[index++] = 'Ц';
								//sb.Append("Цл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("ЦЛ");
								arr[index++] = 'Ц';
								//sb.Append("ЦЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("Цм");
								arr[index++] = 'Ц';
								//sb.Append("Цм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("ЦМ");
								arr[index++] = 'Ц';
								//sb.Append("ЦМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Цн");
								arr[index++] = 'Ц';
								//sb.Append("Цн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("ЦН");
								arr[index++] = 'Ц';
								//sb.Append("ЦН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Цо");
								arr[index++] = 'Ц';
								//sb.Append("Цо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("ЦО");
								arr[index++] = 'Ц';
								//sb.Append("ЦО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Цп");
								arr[index++] = 'Ц';
								//sb.Append("Цп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("ЦП");
								arr[index++] = 'Ц';
								//sb.Append("ЦП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Цр");
								arr[index++] = 'Ц';
								//sb.Append("Цр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("ЦР");
								arr[index++] = 'Ц';
								//sb.Append("ЦР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 7;	// "s";
								break;
							case 'S':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 8;	// "S";
								break;
							case 't':
								//sb.Append("Цт");
								arr[index++] = 'Ц';
								//sb.Append("Цт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("ЦТ");
								arr[index++] = 'Ц';
								//sb.Append("ЦТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Цу");
								arr[index++] = 'Ц';
								//sb.Append("Цу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("ЦУ");
								arr[index++] = 'Ц';
								//sb.Append("ЦУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Цв");
								arr[index++] = 'Ц';
								//sb.Append("Цв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("ЦВ");
								arr[index++] = 'Ц';
								//sb.Append("ЦВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Цх");
								arr[index++] = 'Ц';
								//sb.Append("Цх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("ЦХ");
								arr[index++] = 'Ц';
								//sb.Append("ЦХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 11;	// "y";
								break;
							case 'Y':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 12;	// "Y";
								break;
							case 'z':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 0;	// "";
								break;
							case 'Z':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 14;	// "Z";
								break;
							case 'о':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 15;	// "о";
								break;
							case 'О':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 16;	// "О";
								break;
							default:
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 5:	// "f"
						switch (c)
						{
							case '\'':
								//sb.Append("ф’");
								arr[index++] = 'ф';
								//sb.Append("ф’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("ф№");
								arr[index++] = 'ф';
								//sb.Append("ф№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("фь");
								arr[index++] = 'ф';
								//sb.Append("фь");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 1;	// "a";
								break;
							case 'A':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 2;	// "A";
								break;
							case 'b':
								//sb.Append("фб");
								arr[index++] = 'ф';
								//sb.Append("фб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("фБ");
								arr[index++] = 'ф';
								//sb.Append("фБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 3;	// "c";
								break;
							case 'C':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 4;	// "C";
								break;
							case 'd':
								//sb.Append("фд");
								arr[index++] = 'ф';
								//sb.Append("фд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("фД");
								arr[index++] = 'ф';
								//sb.Append("фД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("фе");
								arr[index++] = 'ф';
								//sb.Append("фе");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("фЕ");
								arr[index++] = 'ф';
								//sb.Append("фЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("ф");
								arr[index++] = 'ф';
								break;
							case 'F':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 6;	// "F";
								break;
							case 'g':
								//sb.Append("фг");
								arr[index++] = 'ф';
								//sb.Append("фг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("фГ");
								arr[index++] = 'ф';
								//sb.Append("фГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("ѳ");
								arr[index++] = 'ѳ';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("фи");
								arr[index++] = 'ф';
								//sb.Append("фи");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("фИ");
								arr[index++] = 'ф';
								//sb.Append("фИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("фй");
								arr[index++] = 'ф';
								//sb.Append("фй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("фЙ");
								arr[index++] = 'ф';
								//sb.Append("фЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("фк");
								arr[index++] = 'ф';
								//sb.Append("фк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("фК");
								arr[index++] = 'ф';
								//sb.Append("фК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("фл");
								arr[index++] = 'ф';
								//sb.Append("фл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("фЛ");
								arr[index++] = 'ф';
								//sb.Append("фЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("фм");
								arr[index++] = 'ф';
								//sb.Append("фм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("фМ");
								arr[index++] = 'ф';
								//sb.Append("фМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("фн");
								arr[index++] = 'ф';
								//sb.Append("фн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("фН");
								arr[index++] = 'ф';
								//sb.Append("фН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("фо");
								arr[index++] = 'ф';
								//sb.Append("фо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("фО");
								arr[index++] = 'ф';
								//sb.Append("фО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("фп");
								arr[index++] = 'ф';
								//sb.Append("фп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("фП");
								arr[index++] = 'ф';
								//sb.Append("фП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("фр");
								arr[index++] = 'ф';
								//sb.Append("фр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("фР");
								arr[index++] = 'ф';
								//sb.Append("фР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 7;	// "s";
								break;
							case 'S':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 8;	// "S";
								break;
							case 't':
								//sb.Append("фт");
								arr[index++] = 'ф';
								//sb.Append("фт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("фТ");
								arr[index++] = 'ф';
								//sb.Append("фТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("фу");
								arr[index++] = 'ф';
								//sb.Append("фу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("фУ");
								arr[index++] = 'ф';
								//sb.Append("фУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("фв");
								arr[index++] = 'ф';
								//sb.Append("фв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("фВ");
								arr[index++] = 'ф';
								//sb.Append("фВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("фх");
								arr[index++] = 'ф';
								//sb.Append("фх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("фХ");
								arr[index++] = 'ф';
								//sb.Append("фХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 11;	// "y";
								break;
							case 'Y':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 12;	// "Y";
								break;
							case 'z':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 13;	// "z";
								break;
							case 'Z':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 14;	// "Z";
								break;
							case 'о':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 15;	// "о";
								break;
							case 'О':
								//sb.Append("ф");
								arr[index++] = 'ф';
								state = 16;	// "О";
								break;
							default:
								//sb.Append("ф");
								arr[index++] = 'ф';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 6:	// "F"
						switch (c)
						{
							case '\'':
								//sb.Append("Ф’");
								arr[index++] = 'Ф';
								//sb.Append("Ф’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("Ф№");
								arr[index++] = 'Ф';
								//sb.Append("Ф№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Фь");
								arr[index++] = 'Ф';
								//sb.Append("Фь");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 1;	// "a";
								break;
							case 'A':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 2;	// "A";
								break;
							case 'b':
								//sb.Append("Фб");
								arr[index++] = 'Ф';
								//sb.Append("Фб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("ФБ");
								arr[index++] = 'Ф';
								//sb.Append("ФБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 3;	// "c";
								break;
							case 'C':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 4;	// "C";
								break;
							case 'd':
								//sb.Append("Фд");
								arr[index++] = 'Ф';
								//sb.Append("Фд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("ФД");
								arr[index++] = 'Ф';
								//sb.Append("ФД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("Фе");
								arr[index++] = 'Ф';
								//sb.Append("Фе");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("ФЕ");
								arr[index++] = 'Ф';
								//sb.Append("ФЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 5;	// "f";
								break;
							case 'F':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								break;
							case 'g':
								//sb.Append("Фг");
								arr[index++] = 'Ф';
								//sb.Append("Фг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("ФГ");
								arr[index++] = 'Ф';
								//sb.Append("ФГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("Ѳ");
								arr[index++] = 'Ѳ';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Фи");
								arr[index++] = 'Ф';
								//sb.Append("Фи");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("ФИ");
								arr[index++] = 'Ф';
								//sb.Append("ФИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Фй");
								arr[index++] = 'Ф';
								//sb.Append("Фй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("ФЙ");
								arr[index++] = 'Ф';
								//sb.Append("ФЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Фк");
								arr[index++] = 'Ф';
								//sb.Append("Фк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("ФК");
								arr[index++] = 'Ф';
								//sb.Append("ФК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Фл");
								arr[index++] = 'Ф';
								//sb.Append("Фл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("ФЛ");
								arr[index++] = 'Ф';
								//sb.Append("ФЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("Фм");
								arr[index++] = 'Ф';
								//sb.Append("Фм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("ФМ");
								arr[index++] = 'Ф';
								//sb.Append("ФМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Фн");
								arr[index++] = 'Ф';
								//sb.Append("Фн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("ФН");
								arr[index++] = 'Ф';
								//sb.Append("ФН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Фо");
								arr[index++] = 'Ф';
								//sb.Append("Фо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("ФО");
								arr[index++] = 'Ф';
								//sb.Append("ФО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Фп");
								arr[index++] = 'Ф';
								//sb.Append("Фп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("ФП");
								arr[index++] = 'Ф';
								//sb.Append("ФП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Фр");
								arr[index++] = 'Ф';
								//sb.Append("Фр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("ФР");
								arr[index++] = 'Ф';
								//sb.Append("ФР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 7;	// "s";
								break;
							case 'S':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 8;	// "S";
								break;
							case 't':
								//sb.Append("Фт");
								arr[index++] = 'Ф';
								//sb.Append("Фт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("ФТ");
								arr[index++] = 'Ф';
								//sb.Append("ФТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Фу");
								arr[index++] = 'Ф';
								//sb.Append("Фу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("ФУ");
								arr[index++] = 'Ф';
								//sb.Append("ФУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Фв");
								arr[index++] = 'Ф';
								//sb.Append("Фв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("ФВ");
								arr[index++] = 'Ф';
								//sb.Append("ФВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Фх");
								arr[index++] = 'Ф';
								//sb.Append("Фх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("ФХ");
								arr[index++] = 'Ф';
								//sb.Append("ФХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 11;	// "y";
								break;
							case 'Y':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 12;	// "Y";
								break;
							case 'z':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 13;	// "z";
								break;
							case 'Z':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 14;	// "Z";
								break;
							case 'о':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 15;	// "о";
								break;
							case 'О':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								state = 16;	// "О";
								break;
							default:
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 7:	// "s"
						switch (c)
						{
							case '\'':
								//sb.Append("с’");
								arr[index++] = 'с';
								//sb.Append("с’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("с№");
								arr[index++] = 'с';
								//sb.Append("с№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("сь");
								arr[index++] = 'с';
								//sb.Append("сь");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 1;	// "a";
								break;
							case 'A':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 2;	// "A";
								break;
							case 'b':
								//sb.Append("сб");
								arr[index++] = 'с';
								//sb.Append("сб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("сБ");
								arr[index++] = 'с';
								//sb.Append("сБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 3;	// "c";
								break;
							case 'C':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 4;	// "C";
								break;
							case 'd':
								//sb.Append("сд");
								arr[index++] = 'с';
								//sb.Append("сд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("сД");
								arr[index++] = 'с';
								//sb.Append("сД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("се");
								arr[index++] = 'с';
								//sb.Append("се");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("сЕ");
								arr[index++] = 'с';
								//sb.Append("сЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 5;	// "f";
								break;
							case 'F':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 6;	// "F";
								break;
							case 'g':
								//sb.Append("сг");
								arr[index++] = 'с';
								//sb.Append("сг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("сГ");
								arr[index++] = 'с';
								//sb.Append("сГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'h':
								state = 9;	// "sh";
								break;
							case 'i':
								//sb.Append("си");
								arr[index++] = 'с';
								//sb.Append("си");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("сИ");
								arr[index++] = 'с';
								//sb.Append("сИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("сй");
								arr[index++] = 'с';
								//sb.Append("сй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("сЙ");
								arr[index++] = 'с';
								//sb.Append("сЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("ск");
								arr[index++] = 'с';
								//sb.Append("ск");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("сК");
								arr[index++] = 'с';
								//sb.Append("сК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("сл");
								arr[index++] = 'с';
								//sb.Append("сл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("сЛ");
								arr[index++] = 'с';
								//sb.Append("сЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("см");
								arr[index++] = 'с';
								//sb.Append("см");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("сМ");
								arr[index++] = 'с';
								//sb.Append("сМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("сн");
								arr[index++] = 'с';
								//sb.Append("сн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("сН");
								arr[index++] = 'с';
								//sb.Append("сН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("со");
								arr[index++] = 'с';
								//sb.Append("со");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("сО");
								arr[index++] = 'с';
								//sb.Append("сО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("сп");
								arr[index++] = 'с';
								//sb.Append("сп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("сП");
								arr[index++] = 'с';
								//sb.Append("сП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("ср");
								arr[index++] = 'с';
								//sb.Append("ср");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("сР");
								arr[index++] = 'с';
								//sb.Append("сР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("с");
								arr[index++] = 'с';
								break;
							case 'S':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 8;	// "S";
								break;
							case 't':
								//sb.Append("ст");
								arr[index++] = 'с';
								//sb.Append("ст");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("сТ");
								arr[index++] = 'с';
								//sb.Append("сТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("су");
								arr[index++] = 'с';
								//sb.Append("су");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("сУ");
								arr[index++] = 'с';
								//sb.Append("сУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("св");
								arr[index++] = 'с';
								//sb.Append("св");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("сВ");
								arr[index++] = 'с';
								//sb.Append("сВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("сх");
								arr[index++] = 'с';
								//sb.Append("сх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("сХ");
								arr[index++] = 'с';
								//sb.Append("сХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 11;	// "y";
								break;
							case 'Y':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 12;	// "Y";
								break;
							case 'z':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 13;	// "z";
								break;
							case 'Z':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 14;	// "Z";
								break;
							case 'о':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 15;	// "о";
								break;
							case 'О':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 16;	// "О";
								break;
							default:
								//sb.Append("с");
								arr[index++] = 'с';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 8:	// "S"
						switch (c)
						{
							case '\'':
								//sb.Append("С’");
								arr[index++] = 'С';
								//sb.Append("С’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("С№");
								arr[index++] = 'С';
								//sb.Append("С№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Сь");
								arr[index++] = 'С';
								//sb.Append("Сь");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 1;	// "a";
								break;
							case 'A':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 2;	// "A";
								break;
							case 'b':
								//sb.Append("Сб");
								arr[index++] = 'С';
								//sb.Append("Сб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("СБ");
								arr[index++] = 'С';
								//sb.Append("СБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 3;	// "c";
								break;
							case 'C':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 4;	// "C";
								break;
							case 'd':
								//sb.Append("Сд");
								arr[index++] = 'С';
								//sb.Append("Сд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("СД");
								arr[index++] = 'С';
								//sb.Append("СД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("Се");
								arr[index++] = 'С';
								//sb.Append("Се");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("СЕ");
								arr[index++] = 'С';
								//sb.Append("СЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 5;	// "f";
								break;
							case 'F':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 6;	// "F";
								break;
							case 'g':
								//sb.Append("Сг");
								arr[index++] = 'С';
								//sb.Append("Сг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("СГ");
								arr[index++] = 'С';
								//sb.Append("СГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'h':
								state = 10;	// "Sh";
								break;
							case 'i':
								//sb.Append("Си");
								arr[index++] = 'С';
								//sb.Append("Си");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("СИ");
								arr[index++] = 'С';
								//sb.Append("СИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Сй");
								arr[index++] = 'С';
								//sb.Append("Сй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("СЙ");
								arr[index++] = 'С';
								//sb.Append("СЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Ск");
								arr[index++] = 'С';
								//sb.Append("Ск");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("СК");
								arr[index++] = 'С';
								//sb.Append("СК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Сл");
								arr[index++] = 'С';
								//sb.Append("Сл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("СЛ");
								arr[index++] = 'С';
								//sb.Append("СЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("См");
								arr[index++] = 'С';
								//sb.Append("См");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("СМ");
								arr[index++] = 'С';
								//sb.Append("СМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Сн");
								arr[index++] = 'С';
								//sb.Append("Сн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("СН");
								arr[index++] = 'С';
								//sb.Append("СН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Со");
								arr[index++] = 'С';
								//sb.Append("Со");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("СО");
								arr[index++] = 'С';
								//sb.Append("СО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Сп");
								arr[index++] = 'С';
								//sb.Append("Сп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("СП");
								arr[index++] = 'С';
								//sb.Append("СП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Ср");
								arr[index++] = 'С';
								//sb.Append("Ср");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("СР");
								arr[index++] = 'С';
								//sb.Append("СР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 7;	// "s";
								break;
							case 'S':
								//sb.Append("С");
								arr[index++] = 'С';
								break;
							case 't':
								//sb.Append("Ст");
								arr[index++] = 'С';
								//sb.Append("Ст");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("СТ");
								arr[index++] = 'С';
								//sb.Append("СТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Су");
								arr[index++] = 'С';
								//sb.Append("Су");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("СУ");
								arr[index++] = 'С';
								//sb.Append("СУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Св");
								arr[index++] = 'С';
								//sb.Append("Св");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("СВ");
								arr[index++] = 'С';
								//sb.Append("СВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Сх");
								arr[index++] = 'С';
								//sb.Append("Сх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("СХ");
								arr[index++] = 'С';
								//sb.Append("СХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 11;	// "y";
								break;
							case 'Y':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 12;	// "Y";
								break;
							case 'z':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 13;	// "z";
								break;
							case 'Z':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 14;	// "Z";
								break;
							case 'о':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 15;	// "о";
								break;
							case 'О':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 16;	// "О";
								break;
							default:
								//sb.Append("С");
								arr[index++] = 'С';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 9:	// "sh"
						switch (c)
						{
							case '\'':
								//sb.Append("ш’");
								arr[index++] = 'ш';
								//sb.Append("ш’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("ш№");
								arr[index++] = 'ш';
								//sb.Append("ш№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("шь");
								arr[index++] = 'ш';
								//sb.Append("шь");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 1;	// "a";
								break;
							case 'A':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 2;	// "A";
								break;
							case 'b':
								//sb.Append("шб");
								arr[index++] = 'ш';
								//sb.Append("шб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("шБ");
								arr[index++] = 'ш';
								//sb.Append("шБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 3;	// "c";
								break;
							case 'C':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 4;	// "C";
								break;
							case 'd':
								//sb.Append("шд");
								arr[index++] = 'ш';
								//sb.Append("шд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("шД");
								arr[index++] = 'ш';
								//sb.Append("шД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("ше");
								arr[index++] = 'ш';
								//sb.Append("ше");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("шЕ");
								arr[index++] = 'ш';
								//sb.Append("шЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 5;	// "f";
								break;
							case 'F':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 6;	// "F";
								break;
							case 'g':
								//sb.Append("шг");
								arr[index++] = 'ш';
								//sb.Append("шг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("шГ");
								arr[index++] = 'ш';
								//sb.Append("шГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("ши");
								arr[index++] = 'ш';
								//sb.Append("ши");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("шИ");
								arr[index++] = 'ш';
								//sb.Append("шИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("шй");
								arr[index++] = 'ш';
								//sb.Append("шй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("шЙ");
								arr[index++] = 'ш';
								//sb.Append("шЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("шк");
								arr[index++] = 'ш';
								//sb.Append("шк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("шК");
								arr[index++] = 'ш';
								//sb.Append("шК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("шл");
								arr[index++] = 'ш';
								//sb.Append("шл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("шЛ");
								arr[index++] = 'ш';
								//sb.Append("шЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("шм");
								arr[index++] = 'ш';
								//sb.Append("шм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("шМ");
								arr[index++] = 'ш';
								//sb.Append("шМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("шн");
								arr[index++] = 'ш';
								//sb.Append("шн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("шН");
								arr[index++] = 'ш';
								//sb.Append("шН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("шо");
								arr[index++] = 'ш';
								//sb.Append("шо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("шО");
								arr[index++] = 'ш';
								//sb.Append("шО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("шп");
								arr[index++] = 'ш';
								//sb.Append("шп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("шП");
								arr[index++] = 'ш';
								//sb.Append("шП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("шр");
								arr[index++] = 'ш';
								//sb.Append("шр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("шР");
								arr[index++] = 'ш';
								//sb.Append("шР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 7;	// "s";
								break;
							case 'S':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 8;	// "S";
								break;
							case 't':
								//sb.Append("щ");
								arr[index++] = 'щ';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("шТ");
								arr[index++] = 'ш';
								//sb.Append("шТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("шу");
								arr[index++] = 'ш';
								//sb.Append("шу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("шУ");
								arr[index++] = 'ш';
								//sb.Append("шУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("шв");
								arr[index++] = 'ш';
								//sb.Append("шв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("шВ");
								arr[index++] = 'ш';
								//sb.Append("шВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("шх");
								arr[index++] = 'ш';
								//sb.Append("шх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("шХ");
								arr[index++] = 'ш';
								//sb.Append("шХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 11;	// "y";
								break;
							case 'Y':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 12;	// "Y";
								break;
							case 'z':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 13;	// "z";
								break;
							case 'Z':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 14;	// "Z";
								break;
							case 'о':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 15;	// "о";
								break;
							case 'О':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 16;	// "О";
								break;
							default:
								//sb.Append("ш");
								arr[index++] = 'ш';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 10:	// "Sh"
						switch (c)
						{
							case '\'':
								//sb.Append("Ш’");
								arr[index++] = 'Ш';
								//sb.Append("Ш’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("Ш№");
								arr[index++] = 'Ш';
								//sb.Append("Ш№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Шь");
								arr[index++] = 'Ш';
								//sb.Append("Шь");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 1;	// "a";
								break;
							case 'A':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 2;	// "A";
								break;
							case 'b':
								//sb.Append("Шб");
								arr[index++] = 'Ш';
								//sb.Append("Шб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("ШБ");
								arr[index++] = 'Ш';
								//sb.Append("ШБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 3;	// "c";
								break;
							case 'C':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 4;	// "C";
								break;
							case 'd':
								//sb.Append("Шд");
								arr[index++] = 'Ш';
								//sb.Append("Шд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("ШД");
								arr[index++] = 'Ш';
								//sb.Append("ШД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("Ше");
								arr[index++] = 'Ш';
								//sb.Append("Ше");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("ШЕ");
								arr[index++] = 'Ш';
								//sb.Append("ШЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 5;	// "f";
								break;
							case 'F':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 6;	// "F";
								break;
							case 'g':
								//sb.Append("Шг");
								arr[index++] = 'Ш';
								//sb.Append("Шг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("ШГ");
								arr[index++] = 'Ш';
								//sb.Append("ШГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Ши");
								arr[index++] = 'Ш';
								//sb.Append("Ши");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("ШИ");
								arr[index++] = 'Ш';
								//sb.Append("ШИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Шй");
								arr[index++] = 'Ш';
								//sb.Append("Шй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("ШЙ");
								arr[index++] = 'Ш';
								//sb.Append("ШЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Шк");
								arr[index++] = 'Ш';
								//sb.Append("Шк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("ШК");
								arr[index++] = 'Ш';
								//sb.Append("ШК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Шл");
								arr[index++] = 'Ш';
								//sb.Append("Шл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("ШЛ");
								arr[index++] = 'Ш';
								//sb.Append("ШЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("Шм");
								arr[index++] = 'Ш';
								//sb.Append("Шм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("ШМ");
								arr[index++] = 'Ш';
								//sb.Append("ШМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Шн");
								arr[index++] = 'Ш';
								//sb.Append("Шн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("ШН");
								arr[index++] = 'Ш';
								//sb.Append("ШН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Шо");
								arr[index++] = 'Ш';
								//sb.Append("Шо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("ШО");
								arr[index++] = 'Ш';
								//sb.Append("ШО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Шп");
								arr[index++] = 'Ш';
								//sb.Append("Шп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("ШП");
								arr[index++] = 'Ш';
								//sb.Append("ШП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Шр");
								arr[index++] = 'Ш';
								//sb.Append("Шр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("ШР");
								arr[index++] = 'Ш';
								//sb.Append("ШР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 7;	// "s";
								break;
							case 'S':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 8;	// "S";
								break;
							case 't':
								//sb.Append("Щ");
								arr[index++] = 'Щ';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("ШТ");
								arr[index++] = 'Ш';
								//sb.Append("ШТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Шу");
								arr[index++] = 'Ш';
								//sb.Append("Шу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("ШУ");
								arr[index++] = 'Ш';
								//sb.Append("ШУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Шв");
								arr[index++] = 'Ш';
								//sb.Append("Шв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("ШВ");
								arr[index++] = 'Ш';
								//sb.Append("ШВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Шх");
								arr[index++] = 'Ш';
								//sb.Append("Шх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("ШХ");
								arr[index++] = 'Ш';
								//sb.Append("ШХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 11;	// "y";
								break;
							case 'Y':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 12;	// "Y";
								break;
							case 'z':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 13;	// "z";
								break;
							case 'Z':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 14;	// "Z";
								break;
							case 'о':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 15;	// "о";
								break;
							case 'О':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 16;	// "О";
								break;
							default:
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 11:	// "y"
						switch (c)
						{
							case '\'':
								//sb.Append("y’");
								arr[index++] = 'y';
								//sb.Append("y’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("y№");
								arr[index++] = 'y';
								//sb.Append("y№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("yь");
								arr[index++] = 'y';
								//sb.Append("yь");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("я");
								arr[index++] = 'я';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 2;	// "A";
								break;
							case 'b':
								//sb.Append("yб");
								arr[index++] = 'y';
								//sb.Append("yб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("yБ");
								arr[index++] = 'y';
								//sb.Append("yБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 3;	// "c";
								break;
							case 'C':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 4;	// "C";
								break;
							case 'd':
								//sb.Append("yд");
								arr[index++] = 'y';
								//sb.Append("yд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("yД");
								arr[index++] = 'y';
								//sb.Append("yД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("ѣ");
								arr[index++] = 'ѣ';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("yЕ");
								arr[index++] = 'y';
								//sb.Append("yЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 5;	// "f";
								break;
							case 'F':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 6;	// "F";
								break;
							case 'g':
								//sb.Append("yг");
								arr[index++] = 'y';
								//sb.Append("yг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("yГ");
								arr[index++] = 'y';
								//sb.Append("yГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("ѵ");
								arr[index++] = 'ѵ';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("yи");
								arr[index++] = 'y';
								//sb.Append("yи");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("yИ");
								arr[index++] = 'y';
								//sb.Append("yИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("yй");
								arr[index++] = 'y';
								//sb.Append("yй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("yЙ");
								arr[index++] = 'y';
								//sb.Append("yЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("yк");
								arr[index++] = 'y';
								//sb.Append("yк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("yК");
								arr[index++] = 'y';
								//sb.Append("yК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("yл");
								arr[index++] = 'y';
								//sb.Append("yл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("yЛ");
								arr[index++] = 'y';
								//sb.Append("yЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("yм");
								arr[index++] = 'y';
								//sb.Append("yм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("yМ");
								arr[index++] = 'y';
								//sb.Append("yМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("yн");
								arr[index++] = 'y';
								//sb.Append("yн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("yН");
								arr[index++] = 'y';
								//sb.Append("yН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("yо");
								arr[index++] = 'y';
								//sb.Append("yо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("yО");
								arr[index++] = 'y';
								//sb.Append("yО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("yп");
								arr[index++] = 'y';
								//sb.Append("yп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("yП");
								arr[index++] = 'y';
								//sb.Append("yП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("yр");
								arr[index++] = 'y';
								//sb.Append("yр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("yР");
								arr[index++] = 'y';
								//sb.Append("yР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 7;	// "s";
								break;
							case 'S':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 8;	// "S";
								break;
							case 't':
								//sb.Append("yт");
								arr[index++] = 'y';
								//sb.Append("yт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("yТ");
								arr[index++] = 'y';
								//sb.Append("yТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("ю");
								arr[index++] = 'ю';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("yУ");
								arr[index++] = 'y';
								//sb.Append("yУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("yв");
								arr[index++] = 'y';
								//sb.Append("yв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("yВ");
								arr[index++] = 'y';
								//sb.Append("yВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("yх");
								arr[index++] = 'y';
								//sb.Append("yх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("yХ");
								arr[index++] = 'y';
								//sb.Append("yХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("y");
								arr[index++] = 'y';
								break;
							case 'Y':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 12;	// "Y";
								break;
							case 'z':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 13;	// "z";
								break;
							case 'Z':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 14;	// "Z";
								break;
							case 'о':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 15;	// "о";
								break;
							case 'О':
								//sb.Append("y");
								arr[index++] = 'y';
								state = 16;	// "О";
								break;
							default:
								//sb.Append("y");
								arr[index++] = 'y';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 12:	// "Y"
						switch (c)
						{
							case '\'':
								//sb.Append("Y’");
								arr[index++] = 'Y';
								//sb.Append("Y’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("Y№");
								arr[index++] = 'Y';
								//sb.Append("Y№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Yь");
								arr[index++] = 'Y';
								//sb.Append("Yь");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("Я");
								arr[index++] = 'Я';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 2;	// "A";
								break;
							case 'b':
								//sb.Append("Yб");
								arr[index++] = 'Y';
								//sb.Append("Yб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("YБ");
								arr[index++] = 'Y';
								//sb.Append("YБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 3;	// "c";
								break;
							case 'C':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 4;	// "C";
								break;
							case 'd':
								//sb.Append("Yд");
								arr[index++] = 'Y';
								//sb.Append("Yд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("YД");
								arr[index++] = 'Y';
								//sb.Append("YД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("Ѣ");
								arr[index++] = 'Ѣ';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("YЕ");
								arr[index++] = 'Y';
								//sb.Append("YЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 5;	// "f";
								break;
							case 'F':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 6;	// "F";
								break;
							case 'g':
								//sb.Append("Yг");
								arr[index++] = 'Y';
								//sb.Append("Yг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("YГ");
								arr[index++] = 'Y';
								//sb.Append("YГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("Ѵ");
								arr[index++] = 'Ѵ';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Yи");
								arr[index++] = 'Y';
								//sb.Append("Yи");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("YИ");
								arr[index++] = 'Y';
								//sb.Append("YИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Yй");
								arr[index++] = 'Y';
								//sb.Append("Yй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("YЙ");
								arr[index++] = 'Y';
								//sb.Append("YЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Yк");
								arr[index++] = 'Y';
								//sb.Append("Yк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("YК");
								arr[index++] = 'Y';
								//sb.Append("YК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Yл");
								arr[index++] = 'Y';
								//sb.Append("Yл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("YЛ");
								arr[index++] = 'Y';
								//sb.Append("YЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("Yм");
								arr[index++] = 'Y';
								//sb.Append("Yм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("YМ");
								arr[index++] = 'Y';
								//sb.Append("YМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Yн");
								arr[index++] = 'Y';
								//sb.Append("Yн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("YН");
								arr[index++] = 'Y';
								//sb.Append("YН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Yо");
								arr[index++] = 'Y';
								//sb.Append("Yо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("YО");
								arr[index++] = 'Y';
								//sb.Append("YО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Yп");
								arr[index++] = 'Y';
								//sb.Append("Yп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("YП");
								arr[index++] = 'Y';
								//sb.Append("YП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Yр");
								arr[index++] = 'Y';
								//sb.Append("Yр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("YР");
								arr[index++] = 'Y';
								//sb.Append("YР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 7;	// "s";
								break;
							case 'S':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 8;	// "S";
								break;
							case 't':
								//sb.Append("Yт");
								arr[index++] = 'Y';
								//sb.Append("Yт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("YТ");
								arr[index++] = 'Y';
								//sb.Append("YТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Ю");
								arr[index++] = 'Ю';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("YУ");
								arr[index++] = 'Y';
								//sb.Append("YУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Yв");
								arr[index++] = 'Y';
								//sb.Append("Yв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("YВ");
								arr[index++] = 'Y';
								//sb.Append("YВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Yх");
								arr[index++] = 'Y';
								//sb.Append("Yх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("YХ");
								arr[index++] = 'Y';
								//sb.Append("YХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 11;	// "y";
								break;
							case 'Y':
								//sb.Append("Y");
								arr[index++] = 'Y';
								break;
							case 'z':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 13;	// "z";
								break;
							case 'Z':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 14;	// "Z";
								break;
							case 'о':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 15;	// "о";
								break;
							case 'О':
								//sb.Append("Y");
								arr[index++] = 'Y';
								state = 16;	// "О";
								break;
							default:
								//sb.Append("Y");
								arr[index++] = 'Y';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 13:	// "z"
						switch (c)
						{
							case '\'':
								//sb.Append("з’");
								arr[index++] = 'з';
								//sb.Append("з’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("з№");
								arr[index++] = 'з';
								//sb.Append("з№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("зь");
								arr[index++] = 'з';
								//sb.Append("зь");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 1;	// "a";
								break;
							case 'A':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 2;	// "A";
								break;
							case 'b':
								//sb.Append("зб");
								arr[index++] = 'з';
								//sb.Append("зб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("зБ");
								arr[index++] = 'з';
								//sb.Append("зБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 3;	// "c";
								break;
							case 'C':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 4;	// "C";
								break;
							case 'd':
								//sb.Append("зд");
								arr[index++] = 'з';
								//sb.Append("зд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("зД");
								arr[index++] = 'з';
								//sb.Append("зД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("зе");
								arr[index++] = 'з';
								//sb.Append("зе");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("зЕ");
								arr[index++] = 'з';
								//sb.Append("зЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 5;	// "f";
								break;
							case 'F':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 6;	// "F";
								break;
							case 'g':
								//sb.Append("зг");
								arr[index++] = 'з';
								//sb.Append("зг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("зГ");
								arr[index++] = 'з';
								//sb.Append("зГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("ж");
								arr[index++] = 'ж';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("зи");
								arr[index++] = 'з';
								//sb.Append("зи");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("зИ");
								arr[index++] = 'з';
								//sb.Append("зИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("зй");
								arr[index++] = 'з';
								//sb.Append("зй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("зЙ");
								arr[index++] = 'з';
								//sb.Append("зЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("зк");
								arr[index++] = 'з';
								//sb.Append("зк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("зК");
								arr[index++] = 'з';
								//sb.Append("зК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("зл");
								arr[index++] = 'з';
								//sb.Append("зл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("зЛ");
								arr[index++] = 'з';
								//sb.Append("зЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("зм");
								arr[index++] = 'з';
								//sb.Append("зм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("зМ");
								arr[index++] = 'з';
								//sb.Append("зМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("зн");
								arr[index++] = 'з';
								//sb.Append("зн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("зН");
								arr[index++] = 'з';
								//sb.Append("зН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("зо");
								arr[index++] = 'з';
								//sb.Append("зо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("зО");
								arr[index++] = 'з';
								//sb.Append("зО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("зп");
								arr[index++] = 'з';
								//sb.Append("зп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("зП");
								arr[index++] = 'з';
								//sb.Append("зП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("зр");
								arr[index++] = 'з';
								//sb.Append("зр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("зР");
								arr[index++] = 'з';
								//sb.Append("зР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 7;	// "s";
								break;
							case 'S':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 8;	// "S";
								break;
							case 't':
								//sb.Append("зт");
								arr[index++] = 'з';
								//sb.Append("зт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("зТ");
								arr[index++] = 'з';
								//sb.Append("зТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("зу");
								arr[index++] = 'з';
								//sb.Append("зу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("зУ");
								arr[index++] = 'з';
								//sb.Append("зУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("зв");
								arr[index++] = 'з';
								//sb.Append("зв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("зВ");
								arr[index++] = 'з';
								//sb.Append("зВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("зх");
								arr[index++] = 'з';
								//sb.Append("зх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("зХ");
								arr[index++] = 'з';
								//sb.Append("зХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 11;	// "y";
								break;
							case 'Y':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 12;	// "Y";
								break;
							case 'z':
								//sb.Append("з");
								arr[index++] = 'з';
								break;
							case 'Z':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 14;	// "Z";
								break;
							case 'о':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 15;	// "о";
								break;
							case 'О':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 16;	// "О";
								break;
							default:
								//sb.Append("з");
								arr[index++] = 'з';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 14:	// "Z"
						switch (c)
						{
							case '\'':
								//sb.Append("З’");
								arr[index++] = 'З';
								//sb.Append("З’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("З№");
								arr[index++] = 'З';
								//sb.Append("З№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Зь");
								arr[index++] = 'З';
								//sb.Append("Зь");
								arr[index++] = 'ь';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 1;	// "a";
								break;
							case 'A':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 2;	// "A";
								break;
							case 'b':
								//sb.Append("Зб");
								arr[index++] = 'З';
								//sb.Append("Зб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("ЗБ");
								arr[index++] = 'З';
								//sb.Append("ЗБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 3;	// "c";
								break;
							case 'C':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 4;	// "C";
								break;
							case 'd':
								//sb.Append("Зд");
								arr[index++] = 'З';
								//sb.Append("Зд");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("ЗД");
								arr[index++] = 'З';
								//sb.Append("ЗД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("Зе");
								arr[index++] = 'З';
								//sb.Append("Зе");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("ЗЕ");
								arr[index++] = 'З';
								//sb.Append("ЗЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 5;	// "f";
								break;
							case 'F':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 6;	// "F";
								break;
							case 'g':
								//sb.Append("Зг");
								arr[index++] = 'З';
								//sb.Append("Зг");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("ЗГ");
								arr[index++] = 'З';
								//sb.Append("ЗГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'h':
								//sb.Append("Ж");
								arr[index++] = 'Ж';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Зи");
								arr[index++] = 'З';
								//sb.Append("Зи");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("ЗИ");
								arr[index++] = 'З';
								//sb.Append("ЗИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Зй");
								arr[index++] = 'З';
								//sb.Append("Зй");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("ЗЙ");
								arr[index++] = 'З';
								//sb.Append("ЗЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Зк");
								arr[index++] = 'З';
								//sb.Append("Зк");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("ЗК");
								arr[index++] = 'З';
								//sb.Append("ЗК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Зл");
								arr[index++] = 'З';
								//sb.Append("Зл");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("ЗЛ");
								arr[index++] = 'З';
								//sb.Append("ЗЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("Зм");
								arr[index++] = 'З';
								//sb.Append("Зм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("ЗМ");
								arr[index++] = 'З';
								//sb.Append("ЗМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Зн");
								arr[index++] = 'З';
								//sb.Append("Зн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("ЗН");
								arr[index++] = 'З';
								//sb.Append("ЗН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Зо");
								arr[index++] = 'З';
								//sb.Append("Зо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("ЗО");
								arr[index++] = 'З';
								//sb.Append("ЗО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Зп");
								arr[index++] = 'З';
								//sb.Append("Зп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("ЗП");
								arr[index++] = 'З';
								//sb.Append("ЗП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Зр");
								arr[index++] = 'З';
								//sb.Append("Зр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("ЗР");
								arr[index++] = 'З';
								//sb.Append("ЗР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 7;	// "s";
								break;
							case 'S':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 8;	// "S";
								break;
							case 't':
								//sb.Append("Зт");
								arr[index++] = 'З';
								//sb.Append("Зт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("ЗТ");
								arr[index++] = 'З';
								//sb.Append("ЗТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Зу");
								arr[index++] = 'З';
								//sb.Append("Зу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("ЗУ");
								arr[index++] = 'З';
								//sb.Append("ЗУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Зв");
								arr[index++] = 'З';
								//sb.Append("Зв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("ЗВ");
								arr[index++] = 'З';
								//sb.Append("ЗВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Зх");
								arr[index++] = 'З';
								//sb.Append("Зх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("ЗХ");
								arr[index++] = 'З';
								//sb.Append("ЗХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 11;	// "y";
								break;
							case 'Y':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 12;	// "Y";
								break;
							case 'z':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 13;	// "z";
								break;
							case 'Z':
								//sb.Append("З");
								arr[index++] = 'З';
								break;
							case 'о':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 15;	// "о";
								break;
							case 'О':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 16;	// "О";
								break;
							default:
								//sb.Append("З");
								arr[index++] = 'З';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 15:	// "о"
						switch (c)
						{
							case '\'':
								//sb.Append("о’");
								arr[index++] = 'о';
								//sb.Append("о’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("о№");
								arr[index++] = 'о';
								//sb.Append("о№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("ѫ");
								arr[index++] = 'ѫ';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("о");
								arr[index++] = 'о';
								state = 1;	// "a";
								break;
							case 'A':
								//sb.Append("о");
								arr[index++] = 'о';
								state = 2;	// "A";
								break;
							case 'b':
								//sb.Append("об");
								arr[index++] = 'о';
								//sb.Append("об");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("оБ");
								arr[index++] = 'о';
								//sb.Append("оБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("о");
								arr[index++] = 'о';
								state = 3;	// "c";
								break;
							case 'C':
								//sb.Append("о");
								arr[index++] = 'о';
								state = 4;	// "C";
								break;
							case 'd':
								//sb.Append("од");
								arr[index++] = 'о';
								//sb.Append("од");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("оД");
								arr[index++] = 'о';
								//sb.Append("оД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("ое");
								arr[index++] = 'о';
								//sb.Append("ое");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("оЕ");
								arr[index++] = 'о';
								//sb.Append("оЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("о");
								arr[index++] = 'о';
								state = 5;	// "f";
								break;
							case 'F':
								//sb.Append("о");
								arr[index++] = 'о';
								state = 6;	// "F";
								break;
							case 'g':
								//sb.Append("ог");
								arr[index++] = 'о';
								//sb.Append("ог");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("оГ");
								arr[index++] = 'о';
								//sb.Append("оГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("ои");
								arr[index++] = 'о';
								//sb.Append("ои");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("оИ");
								arr[index++] = 'о';
								//sb.Append("оИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("ой");
								arr[index++] = 'о';
								//sb.Append("ой");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("оЙ");
								arr[index++] = 'о';
								//sb.Append("оЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("ок");
								arr[index++] = 'о';
								//sb.Append("ок");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("оК");
								arr[index++] = 'о';
								//sb.Append("оК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("ол");
								arr[index++] = 'о';
								//sb.Append("ол");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("оЛ");
								arr[index++] = 'о';
								//sb.Append("оЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("ом");
								arr[index++] = 'о';
								//sb.Append("ом");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("оМ");
								arr[index++] = 'о';
								//sb.Append("оМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("он");
								arr[index++] = 'о';
								//sb.Append("он");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("оН");
								arr[index++] = 'о';
								//sb.Append("оН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("оо");
								arr[index++] = 'о';
								//sb.Append("оо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("оО");
								arr[index++] = 'о';
								//sb.Append("оО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("оп");
								arr[index++] = 'о';
								//sb.Append("оп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("оП");
								arr[index++] = 'о';
								//sb.Append("оП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("ор");
								arr[index++] = 'о';
								//sb.Append("ор");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("оР");
								arr[index++] = 'о';
								//sb.Append("оР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("о");
								arr[index++] = 'о';
								state = 7;	// "s";
								break;
							case 'S':
								//sb.Append("о");
								arr[index++] = 'о';
								state = 8;	// "S";
								break;
							case 't':
								//sb.Append("от");
								arr[index++] = 'о';
								//sb.Append("от");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("оТ");
								arr[index++] = 'о';
								//sb.Append("оТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("оу");
								arr[index++] = 'о';
								//sb.Append("оу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("оУ");
								arr[index++] = 'о';
								//sb.Append("оУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("ов");
								arr[index++] = 'о';
								//sb.Append("ов");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("оВ");
								arr[index++] = 'о';
								//sb.Append("оВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("ох");
								arr[index++] = 'о';
								//sb.Append("ох");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("оХ");
								arr[index++] = 'о';
								//sb.Append("оХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("о");
								arr[index++] = 'о';
								state = 11;	// "y";
								break;
							case 'Y':
								//sb.Append("о");
								arr[index++] = 'о';
								state = 12;	// "Y";
								break;
							case 'z':
								//sb.Append("о");
								arr[index++] = 'о';
								state = 13;	// "z";
								break;
							case 'Z':
								//sb.Append("о");
								arr[index++] = 'о';
								state = 14;	// "Z";
								break;
							case 'о':
								//sb.Append("о");
								arr[index++] = 'о';
								break;
							case 'О':
								//sb.Append("о");
								arr[index++] = 'о';
								state = 16;	// "О";
								break;
							default:
								//sb.Append("о");
								arr[index++] = 'о';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 16:	// "О"
						switch (c)
						{
							case '\'':
								//sb.Append("О’");
								arr[index++] = 'О';
								//sb.Append("О’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("О№");
								arr[index++] = 'О';
								//sb.Append("О№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Ѫ");
								arr[index++] = 'Ѫ';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("О");
								arr[index++] = 'О';
								state = 1;	// "a";
								break;
							case 'A':
								//sb.Append("О");
								arr[index++] = 'О';
								state = 2;	// "A";
								break;
							case 'b':
								//sb.Append("Об");
								arr[index++] = 'О';
								//sb.Append("Об");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("ОБ");
								arr[index++] = 'О';
								//sb.Append("ОБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("О");
								arr[index++] = 'О';
								state = 3;	// "c";
								break;
							case 'C':
								//sb.Append("О");
								arr[index++] = 'О';
								state = 4;	// "C";
								break;
							case 'd':
								//sb.Append("Од");
								arr[index++] = 'О';
								//sb.Append("Од");
								arr[index++] = 'д';
								state = 0;	// "";
								break;
							case 'D':
								//sb.Append("ОД");
								arr[index++] = 'О';
								//sb.Append("ОД");
								arr[index++] = 'Д';
								state = 0;	// "";
								break;
							case 'e':
								//sb.Append("Ое");
								arr[index++] = 'О';
								//sb.Append("Ое");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("ОЕ");
								arr[index++] = 'О';
								//sb.Append("ОЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("О");
								arr[index++] = 'О';
								state = 5;	// "f";
								break;
							case 'F':
								//sb.Append("О");
								arr[index++] = 'О';
								state = 6;	// "F";
								break;
							case 'g':
								//sb.Append("Ог");
								arr[index++] = 'О';
								//sb.Append("Ог");
								arr[index++] = 'г';
								state = 0;	// "";
								break;
							case 'G':
								//sb.Append("ОГ");
								arr[index++] = 'О';
								//sb.Append("ОГ");
								arr[index++] = 'Г';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Ои");
								arr[index++] = 'О';
								//sb.Append("Ои");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("ОИ");
								arr[index++] = 'О';
								//sb.Append("ОИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Ой");
								arr[index++] = 'О';
								//sb.Append("Ой");
								arr[index++] = 'й';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("ОЙ");
								arr[index++] = 'О';
								//sb.Append("ОЙ");
								arr[index++] = 'Й';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Ок");
								arr[index++] = 'О';
								//sb.Append("Ок");
								arr[index++] = 'к';
								state = 0;	// "";
								break;
							case 'K':
								//sb.Append("ОК");
								arr[index++] = 'О';
								//sb.Append("ОК");
								arr[index++] = 'К';
								state = 0;	// "";
								break;
							case 'l':
								//sb.Append("Ол");
								arr[index++] = 'О';
								//sb.Append("Ол");
								arr[index++] = 'л';
								state = 0;	// "";
								break;
							case 'L':
								//sb.Append("ОЛ");
								arr[index++] = 'О';
								//sb.Append("ОЛ");
								arr[index++] = 'Л';
								state = 0;	// "";
								break;
							case 'm':
								//sb.Append("Ом");
								arr[index++] = 'О';
								//sb.Append("Ом");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("ОМ");
								arr[index++] = 'О';
								//sb.Append("ОМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Он");
								arr[index++] = 'О';
								//sb.Append("Он");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'N':
								//sb.Append("ОН");
								arr[index++] = 'О';
								//sb.Append("ОН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							case 'o':
								//sb.Append("Оо");
								arr[index++] = 'О';
								//sb.Append("Оо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("ОО");
								arr[index++] = 'О';
								//sb.Append("ОО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Оп");
								arr[index++] = 'О';
								//sb.Append("Оп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("ОП");
								arr[index++] = 'О';
								//sb.Append("ОП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Ор");
								arr[index++] = 'О';
								//sb.Append("Ор");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("ОР");
								arr[index++] = 'О';
								//sb.Append("ОР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("О");
								arr[index++] = 'О';
								state = 7;	// "s";
								break;
							case 'S':
								//sb.Append("О");
								arr[index++] = 'О';
								state = 8;	// "S";
								break;
							case 't':
								//sb.Append("От");
								arr[index++] = 'О';
								//sb.Append("От");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("ОТ");
								arr[index++] = 'О';
								//sb.Append("ОТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Оу");
								arr[index++] = 'О';
								//sb.Append("Оу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("ОУ");
								arr[index++] = 'О';
								//sb.Append("ОУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Ов");
								arr[index++] = 'О';
								//sb.Append("Ов");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("ОВ");
								arr[index++] = 'О';
								//sb.Append("ОВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Ох");
								arr[index++] = 'О';
								//sb.Append("Ох");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("ОХ");
								arr[index++] = 'О';
								//sb.Append("ОХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'y':
								//sb.Append("О");
								arr[index++] = 'О';
								state = 11;	// "y";
								break;
							case 'Y':
								//sb.Append("О");
								arr[index++] = 'О';
								state = 12;	// "Y";
								break;
							case 'z':
								//sb.Append("О");
								arr[index++] = 'О';
								state = 13;	// "z";
								break;
							case 'Z':
								//sb.Append("О");
								arr[index++] = 'О';
								state = 14;	// "Z";
								break;
							case 'о':
								//sb.Append("О");
								arr[index++] = 'О';
								state = 15;	// "о";
								break;
							case 'О':
								//sb.Append("О");
								arr[index++] = 'О';
								break;
							default:
								//sb.Append("О");
								arr[index++] = 'О';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
				}
			}

			switch (state)
			{
				case 0:	// ""
					break;				
				case 1:	// "a"
					//sb.Append("а");
					arr[index++] = 'а';
					break;				
				case 2:	// "A"
					//sb.Append("А");
					arr[index++] = 'А';
					break;				
				case 3:	// "c"
					//sb.Append("ц");
					arr[index++] = 'ц';
					break;				
				case 4:	// "C"
					//sb.Append("Ц");
					arr[index++] = 'Ц';
					break;				
				case 5:	// "f"
					//sb.Append("ф");
					arr[index++] = 'ф';
					break;				
				case 6:	// "F"
					//sb.Append("Ф");
					arr[index++] = 'Ф';
					break;				
				case 7:	// "s"
					//sb.Append("с");
					arr[index++] = 'с';
					break;				
				case 8:	// "S"
					//sb.Append("С");
					arr[index++] = 'С';
					break;				
				case 9:	// "sh"
					//sb.Append("ш");
					arr[index++] = 'ш';
					break;				
				case 10:	// "Sh"
					//sb.Append("Ш");
					arr[index++] = 'Ш';
					break;				
				case 11:	// "y"
					//sb.Append("y");
					arr[index++] = 'y';
					break;				
				case 12:	// "Y"
					//sb.Append("Y");
					arr[index++] = 'Y';
					break;				
				case 13:	// "z"
					//sb.Append("з");
					arr[index++] = 'з';
					break;				
				case 14:	// "Z"
					//sb.Append("З");
					arr[index++] = 'З';
					break;				
				case 15:	// "о"
					//sb.Append("о");
					arr[index++] = 'о';
					break;				
				case 16:	// "О"
					//sb.Append("О");
					arr[index++] = 'О';
					break;				
			}
			//return sb.ToString();
			return new string(arr, 0, index);
		}

		internal static string Cyrillic2LatinMacedonian(string text)
		{
			var sb = new StringBuilder();
			var state = 0;			
			for (var i = 0; i < text.Length; i++)
			{
				var c = text[i];
				switch (state)
				{
					case 0:	// ""
						switch (c)
						{
							case '’':
								sb.Append("\'");
								break;
							case 'j':
								sb.Append("j");
								break;
							case 'J':
								sb.Append("J");
								break;
							case '№':
								sb.Append("#");
								break;
							case 's':
								sb.Append("z`");
								break;
							case 'S':
								sb.Append("Z`");
								break;
							case 'а':
								sb.Append("a");
								break;
							case 'А':
								sb.Append("A");
								break;
							case 'б':
								sb.Append("b");
								break;
							case 'Б':
								sb.Append("B");
								break;
							case 'в':
								sb.Append("v");
								break;
							case 'В':
								sb.Append("V");
								break;
							case 'г':
								sb.Append("g");
								break;
							case 'Г':
								sb.Append("G");
								break;
							case 'ѓ':
								sb.Append("g`");
								break;
							case 'Ѓ':
								sb.Append("G`");
								break;
							case 'д':
								sb.Append("d");
								break;
							case 'Д':
								sb.Append("D");
								break;
							case 'е':
								sb.Append("e");
								break;
							case 'Е':
								sb.Append("E");
								break;
							case 'ж':
								sb.Append("zh");
								break;
							case 'Ж':
								sb.Append("Zh");
								break;
							case 'з':
								sb.Append("z");
								break;
							case 'З':
								sb.Append("Z");
								break;
							case 'и':
								sb.Append("i");
								break;
							case 'И':
								sb.Append("I");
								break;
							case 'к':
								sb.Append("k");
								break;
							case 'К':
								sb.Append("K");
								break;
							case 'ќ':
								sb.Append("k`");
								break;
							case 'Ќ':
								sb.Append("K`");
								break;
							case 'л':
								sb.Append("l");
								break;
							case 'Л':
								sb.Append("L");
								break;
							case 'љ':
								sb.Append("l`");
								break;
							case 'Љ':
								sb.Append("L`");
								break;
							case 'м':
								sb.Append("m");
								break;
							case 'М':
								sb.Append("M");
								break;
							case 'н':
								sb.Append("п");
								break;
							case 'Н':
								sb.Append("П");
								break;
							case 'њ':
								sb.Append("n`");
								break;
							case 'Њ':
								sb.Append("N`");
								break;
							case 'о':
								sb.Append("o");
								break;
							case 'О':
								sb.Append("O");
								break;
							case 'п':
								sb.Append("p");
								break;
							case 'П':
								sb.Append("P");
								break;
							case 'р':
								sb.Append("r");
								break;
							case 'Р':
								sb.Append("R");
								break;
							case 'с':
								sb.Append("s");
								break;
							case 'С':
								sb.Append("S");
								break;
							case 'т':
								sb.Append("t");
								break;
							case 'Т':
								sb.Append("T");
								break;
							case 'у':
								sb.Append("u");
								break;
							case 'У':
								sb.Append("U");
								break;
							case 'ф':
								sb.Append("f");
								break;
							case 'Ф':
								sb.Append("F");
								break;
							case 'х':
								sb.Append("x");
								break;
							case 'Х':
								sb.Append("X");
								break;
							case 'ц':
								state = 1;	// "ц";
								break;
							case 'Ц':
								state = 2;	// "Ц";
								break;
							case 'ч':
								sb.Append("ch");
								break;
							case 'Ч':
								sb.Append("Ch");
								break;
							case 'џ':
								sb.Append("dh");
								break;
							case 'Џ':
								sb.Append("Dh");
								break;
							case 'ш':
								sb.Append("sh");
								break;
							case 'Ш':
								sb.Append("Sh");
								break;
							default:
								sb.Append(c);
								break;
						}
						break;				
					case 1:	// "ц"
						switch (c)
						{
							case '’':
								sb.Append("cz\'");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("ce");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("cE");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("ci");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("cI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("cj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("cJ");
								state = 0;	// "";
								break;
							case '№':
								sb.Append("cz#");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("czz`");
								state = 0;	// "";
								break;
							case 'S':
								sb.Append("czZ`");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("cy");
								state = 0;	// "";
								break;
							case 'Y':
								sb.Append("cY");
								state = 0;	// "";
								break;
							case 'а':
								sb.Append("cza");
								state = 0;	// "";
								break;
							case 'А':
								sb.Append("czA");
								state = 0;	// "";
								break;
							case 'б':
								sb.Append("czb");
								state = 0;	// "";
								break;
							case 'Б':
								sb.Append("czB");
								state = 0;	// "";
								break;
							case 'в':
								sb.Append("czv");
								state = 0;	// "";
								break;
							case 'В':
								sb.Append("czV");
								state = 0;	// "";
								break;
							case 'г':
								sb.Append("czg");
								state = 0;	// "";
								break;
							case 'Г':
								sb.Append("czG");
								state = 0;	// "";
								break;
							case 'ѓ':
								sb.Append("czg`");
								state = 0;	// "";
								break;
							case 'Ѓ':
								sb.Append("czG`");
								state = 0;	// "";
								break;
							case 'д':
								sb.Append("czd");
								state = 0;	// "";
								break;
							case 'Д':
								sb.Append("czD");
								state = 0;	// "";
								break;
							case 'е':
								sb.Append("ce");
								state = 0;	// "";
								break;
							case 'Е':
								sb.Append("cE");
								state = 0;	// "";
								break;
							case 'ж':
								sb.Append("czzh");
								state = 0;	// "";
								break;
							case 'Ж':
								sb.Append("czZh");
								state = 0;	// "";
								break;
							case 'з':
								sb.Append("czz");
								state = 0;	// "";
								break;
							case 'З':
								sb.Append("czZ");
								state = 0;	// "";
								break;
							case 'и':
								sb.Append("ci");
								state = 0;	// "";
								break;
							case 'И':
								sb.Append("cI");
								state = 0;	// "";
								break;
							case 'к':
								sb.Append("czk");
								state = 0;	// "";
								break;
							case 'К':
								sb.Append("czK");
								state = 0;	// "";
								break;
							case 'ќ':
								sb.Append("czk`");
								state = 0;	// "";
								break;
							case 'Ќ':
								sb.Append("czK`");
								state = 0;	// "";
								break;
							case 'л':
								sb.Append("czl");
								state = 0;	// "";
								break;
							case 'Л':
								sb.Append("czL");
								state = 0;	// "";
								break;
							case 'љ':
								sb.Append("czl`");
								state = 0;	// "";
								break;
							case 'Љ':
								sb.Append("czL`");
								state = 0;	// "";
								break;
							case 'м':
								sb.Append("czm");
								state = 0;	// "";
								break;
							case 'М':
								sb.Append("czM");
								state = 0;	// "";
								break;
							case 'н':
								sb.Append("czп");
								state = 0;	// "";
								break;
							case 'Н':
								sb.Append("czП");
								state = 0;	// "";
								break;
							case 'њ':
								sb.Append("czn`");
								state = 0;	// "";
								break;
							case 'Њ':
								sb.Append("czN`");
								state = 0;	// "";
								break;
							case 'о':
								sb.Append("czo");
								state = 0;	// "";
								break;
							case 'О':
								sb.Append("czO");
								state = 0;	// "";
								break;
							case 'п':
								sb.Append("czp");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("czP");
								state = 0;	// "";
								break;
							case 'р':
								sb.Append("czr");
								state = 0;	// "";
								break;
							case 'Р':
								sb.Append("czR");
								state = 0;	// "";
								break;
							case 'с':
								sb.Append("czs");
								state = 0;	// "";
								break;
							case 'С':
								sb.Append("czS");
								state = 0;	// "";
								break;
							case 'т':
								sb.Append("czt");
								state = 0;	// "";
								break;
							case 'Т':
								sb.Append("czT");
								state = 0;	// "";
								break;
							case 'у':
								sb.Append("czu");
								state = 0;	// "";
								break;
							case 'У':
								sb.Append("czU");
								state = 0;	// "";
								break;
							case 'ф':
								sb.Append("czf");
								state = 0;	// "";
								break;
							case 'Ф':
								sb.Append("czF");
								state = 0;	// "";
								break;
							case 'х':
								sb.Append("czx");
								state = 0;	// "";
								break;
							case 'Х':
								sb.Append("czX");
								state = 0;	// "";
								break;
							case 'ц':
								sb.Append("cz");
								break;
							case 'Ц':
								sb.Append("cz");
								state = 2;	// "Ц";
								break;
							case 'ч':
								sb.Append("czch");
								state = 0;	// "";
								break;
							case 'Ч':
								sb.Append("czCh");
								state = 0;	// "";
								break;
							case 'џ':
								sb.Append("czdh");
								state = 0;	// "";
								break;
							case 'Џ':
								sb.Append("czDh");
								state = 0;	// "";
								break;
							case 'ш':
								sb.Append("czsh");
								state = 0;	// "";
								break;
							case 'Ш':
								sb.Append("czSh");
								state = 0;	// "";
								break;
							default:
								sb.Append("cz");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
					case 2:	// "Ц"
						switch (c)
						{
							case '’':
								sb.Append("Cz\'");
								state = 0;	// "";
								break;
							case 'e':
								sb.Append("Ce");
								state = 0;	// "";
								break;
							case 'E':
								sb.Append("CE");
								state = 0;	// "";
								break;
							case 'i':
								sb.Append("Ci");
								state = 0;	// "";
								break;
							case 'I':
								sb.Append("CI");
								state = 0;	// "";
								break;
							case 'j':
								sb.Append("Cj");
								state = 0;	// "";
								break;
							case 'J':
								sb.Append("CJ");
								state = 0;	// "";
								break;
							case '№':
								sb.Append("Cz#");
								state = 0;	// "";
								break;
							case 's':
								sb.Append("Czz`");
								state = 0;	// "";
								break;
							case 'S':
								sb.Append("CzZ`");
								state = 0;	// "";
								break;
							case 'y':
								sb.Append("Cy");
								state = 0;	// "";
								break;
							case 'Y':
								sb.Append("CY");
								state = 0;	// "";
								break;
							case 'а':
								sb.Append("Cza");
								state = 0;	// "";
								break;
							case 'А':
								sb.Append("CzA");
								state = 0;	// "";
								break;
							case 'б':
								sb.Append("Czb");
								state = 0;	// "";
								break;
							case 'Б':
								sb.Append("CzB");
								state = 0;	// "";
								break;
							case 'в':
								sb.Append("Czv");
								state = 0;	// "";
								break;
							case 'В':
								sb.Append("CzV");
								state = 0;	// "";
								break;
							case 'г':
								sb.Append("Czg");
								state = 0;	// "";
								break;
							case 'Г':
								sb.Append("CzG");
								state = 0;	// "";
								break;
							case 'ѓ':
								sb.Append("Czg`");
								state = 0;	// "";
								break;
							case 'Ѓ':
								sb.Append("CzG`");
								state = 0;	// "";
								break;
							case 'д':
								sb.Append("Czd");
								state = 0;	// "";
								break;
							case 'Д':
								sb.Append("CzD");
								state = 0;	// "";
								break;
							case 'е':
								sb.Append("Ce");
								state = 0;	// "";
								break;
							case 'Е':
								sb.Append("CE");
								state = 0;	// "";
								break;
							case 'ж':
								sb.Append("Czzh");
								state = 0;	// "";
								break;
							case 'Ж':
								sb.Append("CzZh");
								state = 0;	// "";
								break;
							case 'з':
								sb.Append("Czz");
								state = 0;	// "";
								break;
							case 'З':
								sb.Append("CzZ");
								state = 0;	// "";
								break;
							case 'и':
								sb.Append("Ci");
								state = 0;	// "";
								break;
							case 'И':
								sb.Append("CI");
								state = 0;	// "";
								break;
							case 'к':
								sb.Append("Czk");
								state = 0;	// "";
								break;
							case 'К':
								sb.Append("CzK");
								state = 0;	// "";
								break;
							case 'ќ':
								sb.Append("Czk`");
								state = 0;	// "";
								break;
							case 'Ќ':
								sb.Append("CzK`");
								state = 0;	// "";
								break;
							case 'л':
								sb.Append("Czl");
								state = 0;	// "";
								break;
							case 'Л':
								sb.Append("CzL");
								state = 0;	// "";
								break;
							case 'љ':
								sb.Append("Czl`");
								state = 0;	// "";
								break;
							case 'Љ':
								sb.Append("CzL`");
								state = 0;	// "";
								break;
							case 'м':
								sb.Append("Czm");
								state = 0;	// "";
								break;
							case 'М':
								sb.Append("CzM");
								state = 0;	// "";
								break;
							case 'н':
								sb.Append("Czп");
								state = 0;	// "";
								break;
							case 'Н':
								sb.Append("CzП");
								state = 0;	// "";
								break;
							case 'њ':
								sb.Append("Czn`");
								state = 0;	// "";
								break;
							case 'Њ':
								sb.Append("CzN`");
								state = 0;	// "";
								break;
							case 'о':
								sb.Append("Czo");
								state = 0;	// "";
								break;
							case 'О':
								sb.Append("CzO");
								state = 0;	// "";
								break;
							case 'п':
								sb.Append("Czp");
								state = 0;	// "";
								break;
							case 'П':
								sb.Append("CzP");
								state = 0;	// "";
								break;
							case 'р':
								sb.Append("Czr");
								state = 0;	// "";
								break;
							case 'Р':
								sb.Append("CzR");
								state = 0;	// "";
								break;
							case 'с':
								sb.Append("Czs");
								state = 0;	// "";
								break;
							case 'С':
								sb.Append("CzS");
								state = 0;	// "";
								break;
							case 'т':
								sb.Append("Czt");
								state = 0;	// "";
								break;
							case 'Т':
								sb.Append("CzT");
								state = 0;	// "";
								break;
							case 'у':
								sb.Append("Czu");
								state = 0;	// "";
								break;
							case 'У':
								sb.Append("CzU");
								state = 0;	// "";
								break;
							case 'ф':
								sb.Append("Czf");
								state = 0;	// "";
								break;
							case 'Ф':
								sb.Append("CzF");
								state = 0;	// "";
								break;
							case 'х':
								sb.Append("Czx");
								state = 0;	// "";
								break;
							case 'Х':
								sb.Append("CzX");
								state = 0;	// "";
								break;
							case 'ц':
								sb.Append("Cz");
								state = 1;	// "ц";
								break;
							case 'Ц':
								sb.Append("Cz");
								break;
							case 'ч':
								sb.Append("Czch");
								state = 0;	// "";
								break;
							case 'Ч':
								sb.Append("CzCh");
								state = 0;	// "";
								break;
							case 'џ':
								sb.Append("Czdh");
								state = 0;	// "";
								break;
							case 'Џ':
								sb.Append("CzDh");
								state = 0;	// "";
								break;
							case 'ш':
								sb.Append("Czsh");
								state = 0;	// "";
								break;
							case 'Ш':
								sb.Append("CzSh");
								state = 0;	// "";
								break;
							default:
								sb.Append("Cz");
								sb.Append(c);
								state = 0;	// "";
								break;
						}
						break;				
				}
			}

			switch (state)
			{
				case 0:	// ""
					break;				
				case 1:	// "ц"
					sb.Append("cz");
					break;				
				case 2:	// "Ц"
					sb.Append("Cz");
					break;				
			}
			return sb.ToString();
		}

        internal static string Latin2CyrillicMacedonian(string text)
		{
			//var sb = new StringBuilder(text.Length);
			var arr = new char[text.Length];
			var index = 0;

			var state = 0;			
			for (var i = 0; i < text.Length; i++)
			{
				var c = text[i];
				switch (state)
				{
					case 0:	// ""
						switch (c)
						{
							case '\'':
								//sb.Append("’");
								arr[index++] = '’';
								break;
							case '#':
								//sb.Append("№");
								arr[index++] = '№';
								break;
							case 'a':
								//sb.Append("а");
								arr[index++] = 'а';
								break;
							case 'A':
								//sb.Append("А");
								arr[index++] = 'А';
								break;
							case 'b':
								//sb.Append("б");
								arr[index++] = 'б';
								break;
							case 'B':
								//sb.Append("Б");
								arr[index++] = 'Б';
								break;
							case 'c':
								state = 1;	// "c";
								break;
							case 'C':
								state = 2;	// "C";
								break;
							case 'd':
								state = 3;	// "d";
								break;
							case 'D':
								state = 4;	// "D";
								break;
							case 'e':
								//sb.Append("е");
								arr[index++] = 'е';
								break;
							case 'E':
								//sb.Append("Е");
								arr[index++] = 'Е';
								break;
							case 'f':
								//sb.Append("ф");
								arr[index++] = 'ф';
								break;
							case 'F':
								//sb.Append("Ф");
								arr[index++] = 'Ф';
								break;
							case 'g':
								state = 5;	// "g";
								break;
							case 'G':
								state = 6;	// "G";
								break;
							case 'i':
								//sb.Append("и");
								arr[index++] = 'и';
								break;
							case 'I':
								//sb.Append("И");
								arr[index++] = 'И';
								break;
							case 'j':
								//sb.Append("j");
								arr[index++] = 'j';
								break;
							case 'J':
								//sb.Append("J");
								arr[index++] = 'J';
								break;
							case 'k':
								state = 7;	// "k";
								break;
							case 'K':
								state = 8;	// "K";
								break;
							case 'l':
								state = 9;	// "l";
								break;
							case 'L':
								state = 10;	// "L";
								break;
							case 'm':
								//sb.Append("м");
								arr[index++] = 'м';
								break;
							case 'M':
								//sb.Append("М");
								arr[index++] = 'М';
								break;
							case 'n':
								state = 11;	// "n";
								break;
							case 'N':
								state = 12;	// "N";
								break;
							case 'o':
								//sb.Append("о");
								arr[index++] = 'о';
								break;
							case 'O':
								//sb.Append("О");
								arr[index++] = 'О';
								break;
							case 'p':
								//sb.Append("п");
								arr[index++] = 'п';
								break;
							case 'P':
								//sb.Append("П");
								arr[index++] = 'П';
								break;
							case 'r':
								//sb.Append("р");
								arr[index++] = 'р';
								break;
							case 'R':
								//sb.Append("Р");
								arr[index++] = 'Р';
								break;
							case 's':
								state = 13;	// "s";
								break;
							case 'S':
								state = 14;	// "S";
								break;
							case 't':
								//sb.Append("т");
								arr[index++] = 'т';
								break;
							case 'T':
								//sb.Append("Т");
								arr[index++] = 'Т';
								break;
							case 'u':
								//sb.Append("у");
								arr[index++] = 'у';
								break;
							case 'U':
								//sb.Append("У");
								arr[index++] = 'У';
								break;
							case 'v':
								//sb.Append("в");
								arr[index++] = 'в';
								break;
							case 'V':
								//sb.Append("В");
								arr[index++] = 'В';
								break;
							case 'x':
								//sb.Append("х");
								arr[index++] = 'х';
								break;
							case 'X':
								//sb.Append("Х");
								arr[index++] = 'Х';
								break;
							case 'z':
								state = 15;	// "z";
								break;
							case 'Z':
								state = 16;	// "Z";
								break;
							case 'п':
								//sb.Append("н");
								arr[index++] = 'н';
								break;
							case 'П':
								//sb.Append("Н");
								arr[index++] = 'Н';
								break;
							default:
								//sb.Append(c);
								arr[index++] = c;
								break;
						}
						break;				
					case 1:	// "c"
						switch (c)
						{
							case '\'':
								//sb.Append("ц’");
								arr[index++] = 'ц';
								//sb.Append("ц’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("ц№");
								arr[index++] = 'ц';
								//sb.Append("ц№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("ца");
								arr[index++] = 'ц';
								//sb.Append("ца");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("цА");
								arr[index++] = 'ц';
								//sb.Append("цА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("цб");
								arr[index++] = 'ц';
								//sb.Append("цб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("цБ");
								arr[index++] = 'ц';
								//sb.Append("цБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("ц");
								arr[index++] = 'ц';
								break;
							case 'C':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 3;	// "d";
								break;
							case 'D':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 4;	// "D";
								break;
							case 'e':
								//sb.Append("це");
								arr[index++] = 'ц';
								//sb.Append("це");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("цЕ");
								arr[index++] = 'ц';
								//sb.Append("цЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("цф");
								arr[index++] = 'ц';
								//sb.Append("цф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("цФ");
								arr[index++] = 'ц';
								//sb.Append("цФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 5;	// "g";
								break;
							case 'G':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 6;	// "G";
								break;
							case 'h':
								//sb.Append("ч");
								arr[index++] = 'ч';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("ци");
								arr[index++] = 'ц';
								//sb.Append("ци");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("цИ");
								arr[index++] = 'ц';
								//sb.Append("цИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("цj");
								arr[index++] = 'ц';
								//sb.Append("цj");
								arr[index++] = 'j';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("цJ");
								arr[index++] = 'ц';
								//sb.Append("цJ");
								arr[index++] = 'J';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 7;	// "k";
								break;
							case 'K':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 8;	// "K";
								break;
							case 'l':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 9;	// "l";
								break;
							case 'L':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 10;	// "L";
								break;
							case 'm':
								//sb.Append("цм");
								arr[index++] = 'ц';
								//sb.Append("цм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("цМ");
								arr[index++] = 'ц';
								//sb.Append("цМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 11;	// "n";
								break;
							case 'N':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 12;	// "N";
								break;
							case 'o':
								//sb.Append("цо");
								arr[index++] = 'ц';
								//sb.Append("цо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("цО");
								arr[index++] = 'ц';
								//sb.Append("цО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("цп");
								arr[index++] = 'ц';
								//sb.Append("цп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("цП");
								arr[index++] = 'ц';
								//sb.Append("цП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("цр");
								arr[index++] = 'ц';
								//sb.Append("цр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("цР");
								arr[index++] = 'ц';
								//sb.Append("цР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 13;	// "s";
								break;
							case 'S':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 14;	// "S";
								break;
							case 't':
								//sb.Append("цт");
								arr[index++] = 'ц';
								//sb.Append("цт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("цТ");
								arr[index++] = 'ц';
								//sb.Append("цТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("цу");
								arr[index++] = 'ц';
								//sb.Append("цу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("цУ");
								arr[index++] = 'ц';
								//sb.Append("цУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("цв");
								arr[index++] = 'ц';
								//sb.Append("цв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("цВ");
								arr[index++] = 'ц';
								//sb.Append("цВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("цх");
								arr[index++] = 'ц';
								//sb.Append("цх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("цХ");
								arr[index++] = 'ц';
								//sb.Append("цХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'z':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 0;	// "";
								break;
							case 'Z':
								//sb.Append("ц");
								arr[index++] = 'ц';
								state = 16;	// "Z";
								break;
							case 'п':
								//sb.Append("цн");
								arr[index++] = 'ц';
								//sb.Append("цн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'П':
								//sb.Append("цН");
								arr[index++] = 'ц';
								//sb.Append("цН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							default:
								//sb.Append("ц");
								arr[index++] = 'ц';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 2:	// "C"
						switch (c)
						{
							case '\'':
								//sb.Append("Ц’");
								arr[index++] = 'Ц';
								//sb.Append("Ц’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("Ц№");
								arr[index++] = 'Ц';
								//sb.Append("Ц№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("Ца");
								arr[index++] = 'Ц';
								//sb.Append("Ца");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("ЦА");
								arr[index++] = 'Ц';
								//sb.Append("ЦА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Цб");
								arr[index++] = 'Ц';
								//sb.Append("Цб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("ЦБ");
								arr[index++] = 'Ц';
								//sb.Append("ЦБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								break;
							case 'd':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 3;	// "d";
								break;
							case 'D':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 4;	// "D";
								break;
							case 'e':
								//sb.Append("Це");
								arr[index++] = 'Ц';
								//sb.Append("Це");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("ЦЕ");
								arr[index++] = 'Ц';
								//sb.Append("ЦЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("Цф");
								arr[index++] = 'Ц';
								//sb.Append("Цф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("ЦФ");
								arr[index++] = 'Ц';
								//sb.Append("ЦФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 5;	// "g";
								break;
							case 'G':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 6;	// "G";
								break;
							case 'h':
								//sb.Append("Ч");
								arr[index++] = 'Ч';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Ци");
								arr[index++] = 'Ц';
								//sb.Append("Ци");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("ЦИ");
								arr[index++] = 'Ц';
								//sb.Append("ЦИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Цj");
								arr[index++] = 'Ц';
								//sb.Append("Цj");
								arr[index++] = 'j';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("ЦJ");
								arr[index++] = 'Ц';
								//sb.Append("ЦJ");
								arr[index++] = 'J';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 7;	// "k";
								break;
							case 'K':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 8;	// "K";
								break;
							case 'l':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 9;	// "l";
								break;
							case 'L':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 10;	// "L";
								break;
							case 'm':
								//sb.Append("Цм");
								arr[index++] = 'Ц';
								//sb.Append("Цм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("ЦМ");
								arr[index++] = 'Ц';
								//sb.Append("ЦМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 11;	// "n";
								break;
							case 'N':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 12;	// "N";
								break;
							case 'o':
								//sb.Append("Цо");
								arr[index++] = 'Ц';
								//sb.Append("Цо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("ЦО");
								arr[index++] = 'Ц';
								//sb.Append("ЦО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Цп");
								arr[index++] = 'Ц';
								//sb.Append("Цп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("ЦП");
								arr[index++] = 'Ц';
								//sb.Append("ЦП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Цр");
								arr[index++] = 'Ц';
								//sb.Append("Цр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("ЦР");
								arr[index++] = 'Ц';
								//sb.Append("ЦР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 13;	// "s";
								break;
							case 'S':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 14;	// "S";
								break;
							case 't':
								//sb.Append("Цт");
								arr[index++] = 'Ц';
								//sb.Append("Цт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("ЦТ");
								arr[index++] = 'Ц';
								//sb.Append("ЦТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Цу");
								arr[index++] = 'Ц';
								//sb.Append("Цу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("ЦУ");
								arr[index++] = 'Ц';
								//sb.Append("ЦУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Цв");
								arr[index++] = 'Ц';
								//sb.Append("Цв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("ЦВ");
								arr[index++] = 'Ц';
								//sb.Append("ЦВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Цх");
								arr[index++] = 'Ц';
								//sb.Append("Цх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("ЦХ");
								arr[index++] = 'Ц';
								//sb.Append("ЦХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'z':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 0;	// "";
								break;
							case 'Z':
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								state = 16;	// "Z";
								break;
							case 'п':
								//sb.Append("Цн");
								arr[index++] = 'Ц';
								//sb.Append("Цн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'П':
								//sb.Append("ЦН");
								arr[index++] = 'Ц';
								//sb.Append("ЦН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							default:
								//sb.Append("Ц");
								arr[index++] = 'Ц';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 3:	// "d"
						switch (c)
						{
							case '\'':
								//sb.Append("д’");
								arr[index++] = 'д';
								//sb.Append("д’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("д№");
								arr[index++] = 'д';
								//sb.Append("д№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("да");
								arr[index++] = 'д';
								//sb.Append("да");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("дА");
								arr[index++] = 'д';
								//sb.Append("дА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("дб");
								arr[index++] = 'д';
								//sb.Append("дб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("дБ");
								arr[index++] = 'д';
								//sb.Append("дБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("д");
								arr[index++] = 'д';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("д");
								arr[index++] = 'д';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("д");
								arr[index++] = 'д';
								break;
							case 'D':
								//sb.Append("д");
								arr[index++] = 'д';
								state = 4;	// "D";
								break;
							case 'e':
								//sb.Append("де");
								arr[index++] = 'д';
								//sb.Append("де");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("дЕ");
								arr[index++] = 'д';
								//sb.Append("дЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("дф");
								arr[index++] = 'д';
								//sb.Append("дф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("дФ");
								arr[index++] = 'д';
								//sb.Append("дФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("д");
								arr[index++] = 'д';
								state = 5;	// "g";
								break;
							case 'G':
								//sb.Append("д");
								arr[index++] = 'д';
								state = 6;	// "G";
								break;
							case 'h':
								//sb.Append("џ");
								arr[index++] = 'џ';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("ди");
								arr[index++] = 'д';
								//sb.Append("ди");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("дИ");
								arr[index++] = 'д';
								//sb.Append("дИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("дj");
								arr[index++] = 'д';
								//sb.Append("дj");
								arr[index++] = 'j';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("дJ");
								arr[index++] = 'д';
								//sb.Append("дJ");
								arr[index++] = 'J';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("д");
								arr[index++] = 'д';
								state = 7;	// "k";
								break;
							case 'K':
								//sb.Append("д");
								arr[index++] = 'д';
								state = 8;	// "K";
								break;
							case 'l':
								//sb.Append("д");
								arr[index++] = 'д';
								state = 9;	// "l";
								break;
							case 'L':
								//sb.Append("д");
								arr[index++] = 'д';
								state = 10;	// "L";
								break;
							case 'm':
								//sb.Append("дм");
								arr[index++] = 'д';
								//sb.Append("дм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("дМ");
								arr[index++] = 'д';
								//sb.Append("дМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("д");
								arr[index++] = 'д';
								state = 11;	// "n";
								break;
							case 'N':
								//sb.Append("д");
								arr[index++] = 'д';
								state = 12;	// "N";
								break;
							case 'o':
								//sb.Append("до");
								arr[index++] = 'д';
								//sb.Append("до");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("дО");
								arr[index++] = 'д';
								//sb.Append("дО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("дп");
								arr[index++] = 'д';
								//sb.Append("дп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("дП");
								arr[index++] = 'д';
								//sb.Append("дП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("др");
								arr[index++] = 'д';
								//sb.Append("др");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("дР");
								arr[index++] = 'д';
								//sb.Append("дР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("д");
								arr[index++] = 'д';
								state = 13;	// "s";
								break;
							case 'S':
								//sb.Append("д");
								arr[index++] = 'д';
								state = 14;	// "S";
								break;
							case 't':
								//sb.Append("дт");
								arr[index++] = 'д';
								//sb.Append("дт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("дТ");
								arr[index++] = 'д';
								//sb.Append("дТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("ду");
								arr[index++] = 'д';
								//sb.Append("ду");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("дУ");
								arr[index++] = 'д';
								//sb.Append("дУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("дв");
								arr[index++] = 'д';
								//sb.Append("дв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("дВ");
								arr[index++] = 'д';
								//sb.Append("дВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("дх");
								arr[index++] = 'д';
								//sb.Append("дх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("дХ");
								arr[index++] = 'д';
								//sb.Append("дХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'z':
								//sb.Append("д");
								arr[index++] = 'д';
								state = 15;	// "z";
								break;
							case 'Z':
								//sb.Append("д");
								arr[index++] = 'д';
								state = 16;	// "Z";
								break;
							case 'п':
								//sb.Append("дн");
								arr[index++] = 'д';
								//sb.Append("дн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'П':
								//sb.Append("дН");
								arr[index++] = 'д';
								//sb.Append("дН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							default:
								//sb.Append("д");
								arr[index++] = 'д';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 4:	// "D"
						switch (c)
						{
							case '\'':
								//sb.Append("Д’");
								arr[index++] = 'Д';
								//sb.Append("Д’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("Д№");
								arr[index++] = 'Д';
								//sb.Append("Д№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("Да");
								arr[index++] = 'Д';
								//sb.Append("Да");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("ДА");
								arr[index++] = 'Д';
								//sb.Append("ДА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Дб");
								arr[index++] = 'Д';
								//sb.Append("Дб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("ДБ");
								arr[index++] = 'Д';
								//sb.Append("ДБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("Д");
								arr[index++] = 'Д';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("Д");
								arr[index++] = 'Д';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("Д");
								arr[index++] = 'Д';
								state = 3;	// "d";
								break;
							case 'D':
								//sb.Append("Д");
								arr[index++] = 'Д';
								break;
							case 'e':
								//sb.Append("Де");
								arr[index++] = 'Д';
								//sb.Append("Де");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("ДЕ");
								arr[index++] = 'Д';
								//sb.Append("ДЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("Дф");
								arr[index++] = 'Д';
								//sb.Append("Дф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("ДФ");
								arr[index++] = 'Д';
								//sb.Append("ДФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("Д");
								arr[index++] = 'Д';
								state = 5;	// "g";
								break;
							case 'G':
								//sb.Append("Д");
								arr[index++] = 'Д';
								state = 6;	// "G";
								break;
							case 'h':
								//sb.Append("Џ");
								arr[index++] = 'Џ';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Ди");
								arr[index++] = 'Д';
								//sb.Append("Ди");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("ДИ");
								arr[index++] = 'Д';
								//sb.Append("ДИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Дj");
								arr[index++] = 'Д';
								//sb.Append("Дj");
								arr[index++] = 'j';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("ДJ");
								arr[index++] = 'Д';
								//sb.Append("ДJ");
								arr[index++] = 'J';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Д");
								arr[index++] = 'Д';
								state = 7;	// "k";
								break;
							case 'K':
								//sb.Append("Д");
								arr[index++] = 'Д';
								state = 8;	// "K";
								break;
							case 'l':
								//sb.Append("Д");
								arr[index++] = 'Д';
								state = 9;	// "l";
								break;
							case 'L':
								//sb.Append("Д");
								arr[index++] = 'Д';
								state = 10;	// "L";
								break;
							case 'm':
								//sb.Append("Дм");
								arr[index++] = 'Д';
								//sb.Append("Дм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("ДМ");
								arr[index++] = 'Д';
								//sb.Append("ДМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Д");
								arr[index++] = 'Д';
								state = 11;	// "n";
								break;
							case 'N':
								//sb.Append("Д");
								arr[index++] = 'Д';
								state = 12;	// "N";
								break;
							case 'o':
								//sb.Append("До");
								arr[index++] = 'Д';
								//sb.Append("До");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("ДО");
								arr[index++] = 'Д';
								//sb.Append("ДО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Дп");
								arr[index++] = 'Д';
								//sb.Append("Дп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("ДП");
								arr[index++] = 'Д';
								//sb.Append("ДП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Др");
								arr[index++] = 'Д';
								//sb.Append("Др");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("ДР");
								arr[index++] = 'Д';
								//sb.Append("ДР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("Д");
								arr[index++] = 'Д';
								state = 13;	// "s";
								break;
							case 'S':
								//sb.Append("Д");
								arr[index++] = 'Д';
								state = 14;	// "S";
								break;
							case 't':
								//sb.Append("Дт");
								arr[index++] = 'Д';
								//sb.Append("Дт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("ДТ");
								arr[index++] = 'Д';
								//sb.Append("ДТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Ду");
								arr[index++] = 'Д';
								//sb.Append("Ду");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("ДУ");
								arr[index++] = 'Д';
								//sb.Append("ДУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Дв");
								arr[index++] = 'Д';
								//sb.Append("Дв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("ДВ");
								arr[index++] = 'Д';
								//sb.Append("ДВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Дх");
								arr[index++] = 'Д';
								//sb.Append("Дх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("ДХ");
								arr[index++] = 'Д';
								//sb.Append("ДХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'z':
								//sb.Append("Д");
								arr[index++] = 'Д';
								state = 15;	// "z";
								break;
							case 'Z':
								//sb.Append("Д");
								arr[index++] = 'Д';
								state = 16;	// "Z";
								break;
							case 'п':
								//sb.Append("Дн");
								arr[index++] = 'Д';
								//sb.Append("Дн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'П':
								//sb.Append("ДН");
								arr[index++] = 'Д';
								//sb.Append("ДН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							default:
								//sb.Append("Д");
								arr[index++] = 'Д';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 5:	// "g"
						switch (c)
						{
							case '\'':
								//sb.Append("г’");
								arr[index++] = 'г';
								//sb.Append("г’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("г№");
								arr[index++] = 'г';
								//sb.Append("г№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("ѓ");
								arr[index++] = 'ѓ';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("га");
								arr[index++] = 'г';
								//sb.Append("га");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("гА");
								arr[index++] = 'г';
								//sb.Append("гА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("гб");
								arr[index++] = 'г';
								//sb.Append("гб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("гБ");
								arr[index++] = 'г';
								//sb.Append("гБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("г");
								arr[index++] = 'г';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("г");
								arr[index++] = 'г';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("г");
								arr[index++] = 'г';
								state = 3;	// "d";
								break;
							case 'D':
								//sb.Append("г");
								arr[index++] = 'г';
								state = 4;	// "D";
								break;
							case 'e':
								//sb.Append("ге");
								arr[index++] = 'г';
								//sb.Append("ге");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("гЕ");
								arr[index++] = 'г';
								//sb.Append("гЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("гф");
								arr[index++] = 'г';
								//sb.Append("гф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("гФ");
								arr[index++] = 'г';
								//sb.Append("гФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("г");
								arr[index++] = 'г';
								break;
							case 'G':
								//sb.Append("г");
								arr[index++] = 'г';
								state = 6;	// "G";
								break;
							case 'i':
								//sb.Append("ги");
								arr[index++] = 'г';
								//sb.Append("ги");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("гИ");
								arr[index++] = 'г';
								//sb.Append("гИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("гj");
								arr[index++] = 'г';
								//sb.Append("гj");
								arr[index++] = 'j';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("гJ");
								arr[index++] = 'г';
								//sb.Append("гJ");
								arr[index++] = 'J';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("г");
								arr[index++] = 'г';
								state = 7;	// "k";
								break;
							case 'K':
								//sb.Append("г");
								arr[index++] = 'г';
								state = 8;	// "K";
								break;
							case 'l':
								//sb.Append("г");
								arr[index++] = 'г';
								state = 9;	// "l";
								break;
							case 'L':
								//sb.Append("г");
								arr[index++] = 'г';
								state = 10;	// "L";
								break;
							case 'm':
								//sb.Append("гм");
								arr[index++] = 'г';
								//sb.Append("гм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("гМ");
								arr[index++] = 'г';
								//sb.Append("гМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("г");
								arr[index++] = 'г';
								state = 11;	// "n";
								break;
							case 'N':
								//sb.Append("г");
								arr[index++] = 'г';
								state = 12;	// "N";
								break;
							case 'o':
								//sb.Append("го");
								arr[index++] = 'г';
								//sb.Append("го");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("гО");
								arr[index++] = 'г';
								//sb.Append("гО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("гп");
								arr[index++] = 'г';
								//sb.Append("гп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("гП");
								arr[index++] = 'г';
								//sb.Append("гП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("гр");
								arr[index++] = 'г';
								//sb.Append("гр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("гР");
								arr[index++] = 'г';
								//sb.Append("гР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("г");
								arr[index++] = 'г';
								state = 13;	// "s";
								break;
							case 'S':
								//sb.Append("г");
								arr[index++] = 'г';
								state = 14;	// "S";
								break;
							case 't':
								//sb.Append("гт");
								arr[index++] = 'г';
								//sb.Append("гт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("гТ");
								arr[index++] = 'г';
								//sb.Append("гТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("гу");
								arr[index++] = 'г';
								//sb.Append("гу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("гУ");
								arr[index++] = 'г';
								//sb.Append("гУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("гв");
								arr[index++] = 'г';
								//sb.Append("гв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("гВ");
								arr[index++] = 'г';
								//sb.Append("гВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("гх");
								arr[index++] = 'г';
								//sb.Append("гх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("гХ");
								arr[index++] = 'г';
								//sb.Append("гХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'z':
								//sb.Append("г");
								arr[index++] = 'г';
								state = 15;	// "z";
								break;
							case 'Z':
								//sb.Append("г");
								arr[index++] = 'г';
								state = 16;	// "Z";
								break;
							case 'п':
								//sb.Append("гн");
								arr[index++] = 'г';
								//sb.Append("гн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'П':
								//sb.Append("гН");
								arr[index++] = 'г';
								//sb.Append("гН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							default:
								//sb.Append("г");
								arr[index++] = 'г';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 6:	// "G"
						switch (c)
						{
							case '\'':
								//sb.Append("Г’");
								arr[index++] = 'Г';
								//sb.Append("Г’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("Г№");
								arr[index++] = 'Г';
								//sb.Append("Г№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Ѓ");
								arr[index++] = 'Ѓ';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("Га");
								arr[index++] = 'Г';
								//sb.Append("Га");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("ГА");
								arr[index++] = 'Г';
								//sb.Append("ГА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Гб");
								arr[index++] = 'Г';
								//sb.Append("Гб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("ГБ");
								arr[index++] = 'Г';
								//sb.Append("ГБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("Г");
								arr[index++] = 'Г';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("Г");
								arr[index++] = 'Г';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("Г");
								arr[index++] = 'Г';
								state = 3;	// "d";
								break;
							case 'D':
								//sb.Append("Г");
								arr[index++] = 'Г';
								state = 4;	// "D";
								break;
							case 'e':
								//sb.Append("Ге");
								arr[index++] = 'Г';
								//sb.Append("Ге");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("ГЕ");
								arr[index++] = 'Г';
								//sb.Append("ГЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("Гф");
								arr[index++] = 'Г';
								//sb.Append("Гф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("ГФ");
								arr[index++] = 'Г';
								//sb.Append("ГФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("Г");
								arr[index++] = 'Г';
								state = 5;	// "g";
								break;
							case 'G':
								//sb.Append("Г");
								arr[index++] = 'Г';
								break;
							case 'i':
								//sb.Append("Ги");
								arr[index++] = 'Г';
								//sb.Append("Ги");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("ГИ");
								arr[index++] = 'Г';
								//sb.Append("ГИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Гj");
								arr[index++] = 'Г';
								//sb.Append("Гj");
								arr[index++] = 'j';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("ГJ");
								arr[index++] = 'Г';
								//sb.Append("ГJ");
								arr[index++] = 'J';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Г");
								arr[index++] = 'Г';
								state = 7;	// "k";
								break;
							case 'K':
								//sb.Append("Г");
								arr[index++] = 'Г';
								state = 8;	// "K";
								break;
							case 'l':
								//sb.Append("Г");
								arr[index++] = 'Г';
								state = 9;	// "l";
								break;
							case 'L':
								//sb.Append("Г");
								arr[index++] = 'Г';
								state = 10;	// "L";
								break;
							case 'm':
								//sb.Append("Гм");
								arr[index++] = 'Г';
								//sb.Append("Гм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("ГМ");
								arr[index++] = 'Г';
								//sb.Append("ГМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Г");
								arr[index++] = 'Г';
								state = 11;	// "n";
								break;
							case 'N':
								//sb.Append("Г");
								arr[index++] = 'Г';
								state = 12;	// "N";
								break;
							case 'o':
								//sb.Append("Го");
								arr[index++] = 'Г';
								//sb.Append("Го");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("ГО");
								arr[index++] = 'Г';
								//sb.Append("ГО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Гп");
								arr[index++] = 'Г';
								//sb.Append("Гп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("ГП");
								arr[index++] = 'Г';
								//sb.Append("ГП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Гр");
								arr[index++] = 'Г';
								//sb.Append("Гр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("ГР");
								arr[index++] = 'Г';
								//sb.Append("ГР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("Г");
								arr[index++] = 'Г';
								state = 13;	// "s";
								break;
							case 'S':
								//sb.Append("Г");
								arr[index++] = 'Г';
								state = 14;	// "S";
								break;
							case 't':
								//sb.Append("Гт");
								arr[index++] = 'Г';
								//sb.Append("Гт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("ГТ");
								arr[index++] = 'Г';
								//sb.Append("ГТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Гу");
								arr[index++] = 'Г';
								//sb.Append("Гу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("ГУ");
								arr[index++] = 'Г';
								//sb.Append("ГУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Гв");
								arr[index++] = 'Г';
								//sb.Append("Гв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("ГВ");
								arr[index++] = 'Г';
								//sb.Append("ГВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Гх");
								arr[index++] = 'Г';
								//sb.Append("Гх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("ГХ");
								arr[index++] = 'Г';
								//sb.Append("ГХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'z':
								//sb.Append("Г");
								arr[index++] = 'Г';
								state = 15;	// "z";
								break;
							case 'Z':
								//sb.Append("Г");
								arr[index++] = 'Г';
								state = 16;	// "Z";
								break;
							case 'п':
								//sb.Append("Гн");
								arr[index++] = 'Г';
								//sb.Append("Гн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'П':
								//sb.Append("ГН");
								arr[index++] = 'Г';
								//sb.Append("ГН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							default:
								//sb.Append("Г");
								arr[index++] = 'Г';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 7:	// "k"
						switch (c)
						{
							case '\'':
								//sb.Append("к’");
								arr[index++] = 'к';
								//sb.Append("к’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("к№");
								arr[index++] = 'к';
								//sb.Append("к№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("ќ");
								arr[index++] = 'ќ';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("ка");
								arr[index++] = 'к';
								//sb.Append("ка");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("кА");
								arr[index++] = 'к';
								//sb.Append("кА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("кб");
								arr[index++] = 'к';
								//sb.Append("кб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("кБ");
								arr[index++] = 'к';
								//sb.Append("кБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("к");
								arr[index++] = 'к';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("к");
								arr[index++] = 'к';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("к");
								arr[index++] = 'к';
								state = 3;	// "d";
								break;
							case 'D':
								//sb.Append("к");
								arr[index++] = 'к';
								state = 4;	// "D";
								break;
							case 'e':
								//sb.Append("ке");
								arr[index++] = 'к';
								//sb.Append("ке");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("кЕ");
								arr[index++] = 'к';
								//sb.Append("кЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("кф");
								arr[index++] = 'к';
								//sb.Append("кф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("кФ");
								arr[index++] = 'к';
								//sb.Append("кФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("к");
								arr[index++] = 'к';
								state = 5;	// "g";
								break;
							case 'G':
								//sb.Append("к");
								arr[index++] = 'к';
								state = 6;	// "G";
								break;
							case 'i':
								//sb.Append("ки");
								arr[index++] = 'к';
								//sb.Append("ки");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("кИ");
								arr[index++] = 'к';
								//sb.Append("кИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("кj");
								arr[index++] = 'к';
								//sb.Append("кj");
								arr[index++] = 'j';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("кJ");
								arr[index++] = 'к';
								//sb.Append("кJ");
								arr[index++] = 'J';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("к");
								arr[index++] = 'к';
								break;
							case 'K':
								//sb.Append("к");
								arr[index++] = 'к';
								state = 8;	// "K";
								break;
							case 'l':
								//sb.Append("к");
								arr[index++] = 'к';
								state = 9;	// "l";
								break;
							case 'L':
								//sb.Append("к");
								arr[index++] = 'к';
								state = 10;	// "L";
								break;
							case 'm':
								//sb.Append("км");
								arr[index++] = 'к';
								//sb.Append("км");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("кМ");
								arr[index++] = 'к';
								//sb.Append("кМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("к");
								arr[index++] = 'к';
								state = 11;	// "n";
								break;
							case 'N':
								//sb.Append("к");
								arr[index++] = 'к';
								state = 12;	// "N";
								break;
							case 'o':
								//sb.Append("ко");
								arr[index++] = 'к';
								//sb.Append("ко");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("кО");
								arr[index++] = 'к';
								//sb.Append("кО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("кп");
								arr[index++] = 'к';
								//sb.Append("кп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("кП");
								arr[index++] = 'к';
								//sb.Append("кП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("кр");
								arr[index++] = 'к';
								//sb.Append("кр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("кР");
								arr[index++] = 'к';
								//sb.Append("кР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("к");
								arr[index++] = 'к';
								state = 13;	// "s";
								break;
							case 'S':
								//sb.Append("к");
								arr[index++] = 'к';
								state = 14;	// "S";
								break;
							case 't':
								//sb.Append("кт");
								arr[index++] = 'к';
								//sb.Append("кт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("кТ");
								arr[index++] = 'к';
								//sb.Append("кТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("ку");
								arr[index++] = 'к';
								//sb.Append("ку");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("кУ");
								arr[index++] = 'к';
								//sb.Append("кУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("кв");
								arr[index++] = 'к';
								//sb.Append("кв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("кВ");
								arr[index++] = 'к';
								//sb.Append("кВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("кх");
								arr[index++] = 'к';
								//sb.Append("кх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("кХ");
								arr[index++] = 'к';
								//sb.Append("кХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'z':
								//sb.Append("к");
								arr[index++] = 'к';
								state = 15;	// "z";
								break;
							case 'Z':
								//sb.Append("к");
								arr[index++] = 'к';
								state = 16;	// "Z";
								break;
							case 'п':
								//sb.Append("кн");
								arr[index++] = 'к';
								//sb.Append("кн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'П':
								//sb.Append("кН");
								arr[index++] = 'к';
								//sb.Append("кН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							default:
								//sb.Append("к");
								arr[index++] = 'к';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 8:	// "K"
						switch (c)
						{
							case '\'':
								//sb.Append("К’");
								arr[index++] = 'К';
								//sb.Append("К’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("К№");
								arr[index++] = 'К';
								//sb.Append("К№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Ќ");
								arr[index++] = 'Ќ';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("Ка");
								arr[index++] = 'К';
								//sb.Append("Ка");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("КА");
								arr[index++] = 'К';
								//sb.Append("КА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Кб");
								arr[index++] = 'К';
								//sb.Append("Кб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("КБ");
								arr[index++] = 'К';
								//sb.Append("КБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("К");
								arr[index++] = 'К';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("К");
								arr[index++] = 'К';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("К");
								arr[index++] = 'К';
								state = 3;	// "d";
								break;
							case 'D':
								//sb.Append("К");
								arr[index++] = 'К';
								state = 4;	// "D";
								break;
							case 'e':
								//sb.Append("Ке");
								arr[index++] = 'К';
								//sb.Append("Ке");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("КЕ");
								arr[index++] = 'К';
								//sb.Append("КЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("Кф");
								arr[index++] = 'К';
								//sb.Append("Кф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("КФ");
								arr[index++] = 'К';
								//sb.Append("КФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("К");
								arr[index++] = 'К';
								state = 5;	// "g";
								break;
							case 'G':
								//sb.Append("К");
								arr[index++] = 'К';
								state = 6;	// "G";
								break;
							case 'i':
								//sb.Append("Ки");
								arr[index++] = 'К';
								//sb.Append("Ки");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("КИ");
								arr[index++] = 'К';
								//sb.Append("КИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Кj");
								arr[index++] = 'К';
								//sb.Append("Кj");
								arr[index++] = 'j';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("КJ");
								arr[index++] = 'К';
								//sb.Append("КJ");
								arr[index++] = 'J';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("К");
								arr[index++] = 'К';
								state = 7;	// "k";
								break;
							case 'K':
								//sb.Append("К");
								arr[index++] = 'К';
								break;
							case 'l':
								//sb.Append("К");
								arr[index++] = 'К';
								state = 9;	// "l";
								break;
							case 'L':
								//sb.Append("К");
								arr[index++] = 'К';
								state = 10;	// "L";
								break;
							case 'm':
								//sb.Append("Км");
								arr[index++] = 'К';
								//sb.Append("Км");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("КМ");
								arr[index++] = 'К';
								//sb.Append("КМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("К");
								arr[index++] = 'К';
								state = 11;	// "n";
								break;
							case 'N':
								//sb.Append("К");
								arr[index++] = 'К';
								state = 12;	// "N";
								break;
							case 'o':
								//sb.Append("Ко");
								arr[index++] = 'К';
								//sb.Append("Ко");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("КО");
								arr[index++] = 'К';
								//sb.Append("КО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Кп");
								arr[index++] = 'К';
								//sb.Append("Кп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("КП");
								arr[index++] = 'К';
								//sb.Append("КП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Кр");
								arr[index++] = 'К';
								//sb.Append("Кр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("КР");
								arr[index++] = 'К';
								//sb.Append("КР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("К");
								arr[index++] = 'К';
								state = 13;	// "s";
								break;
							case 'S':
								//sb.Append("К");
								arr[index++] = 'К';
								state = 14;	// "S";
								break;
							case 't':
								//sb.Append("Кт");
								arr[index++] = 'К';
								//sb.Append("Кт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("КТ");
								arr[index++] = 'К';
								//sb.Append("КТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Ку");
								arr[index++] = 'К';
								//sb.Append("Ку");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("КУ");
								arr[index++] = 'К';
								//sb.Append("КУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Кв");
								arr[index++] = 'К';
								//sb.Append("Кв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("КВ");
								arr[index++] = 'К';
								//sb.Append("КВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Кх");
								arr[index++] = 'К';
								//sb.Append("Кх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("КХ");
								arr[index++] = 'К';
								//sb.Append("КХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'z':
								//sb.Append("К");
								arr[index++] = 'К';
								state = 15;	// "z";
								break;
							case 'Z':
								//sb.Append("К");
								arr[index++] = 'К';
								state = 16;	// "Z";
								break;
							case 'п':
								//sb.Append("Кн");
								arr[index++] = 'К';
								//sb.Append("Кн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'П':
								//sb.Append("КН");
								arr[index++] = 'К';
								//sb.Append("КН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							default:
								//sb.Append("К");
								arr[index++] = 'К';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 9:	// "l"
						switch (c)
						{
							case '\'':
								//sb.Append("л’");
								arr[index++] = 'л';
								//sb.Append("л’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("л№");
								arr[index++] = 'л';
								//sb.Append("л№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("љ");
								arr[index++] = 'љ';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("ла");
								arr[index++] = 'л';
								//sb.Append("ла");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("лА");
								arr[index++] = 'л';
								//sb.Append("лА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("лб");
								arr[index++] = 'л';
								//sb.Append("лб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("лБ");
								arr[index++] = 'л';
								//sb.Append("лБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("л");
								arr[index++] = 'л';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("л");
								arr[index++] = 'л';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("л");
								arr[index++] = 'л';
								state = 3;	// "d";
								break;
							case 'D':
								//sb.Append("л");
								arr[index++] = 'л';
								state = 4;	// "D";
								break;
							case 'e':
								//sb.Append("ле");
								arr[index++] = 'л';
								//sb.Append("ле");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("лЕ");
								arr[index++] = 'л';
								//sb.Append("лЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("лф");
								arr[index++] = 'л';
								//sb.Append("лф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("лФ");
								arr[index++] = 'л';
								//sb.Append("лФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("л");
								arr[index++] = 'л';
								state = 5;	// "g";
								break;
							case 'G':
								//sb.Append("л");
								arr[index++] = 'л';
								state = 6;	// "G";
								break;
							case 'i':
								//sb.Append("ли");
								arr[index++] = 'л';
								//sb.Append("ли");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("лИ");
								arr[index++] = 'л';
								//sb.Append("лИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("лj");
								arr[index++] = 'л';
								//sb.Append("лj");
								arr[index++] = 'j';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("лJ");
								arr[index++] = 'л';
								//sb.Append("лJ");
								arr[index++] = 'J';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("л");
								arr[index++] = 'л';
								state = 7;	// "k";
								break;
							case 'K':
								//sb.Append("л");
								arr[index++] = 'л';
								state = 8;	// "K";
								break;
							case 'l':
								//sb.Append("л");
								arr[index++] = 'л';
								break;
							case 'L':
								//sb.Append("л");
								arr[index++] = 'л';
								state = 10;	// "L";
								break;
							case 'm':
								//sb.Append("лм");
								arr[index++] = 'л';
								//sb.Append("лм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("лМ");
								arr[index++] = 'л';
								//sb.Append("лМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("л");
								arr[index++] = 'л';
								state = 11;	// "n";
								break;
							case 'N':
								//sb.Append("л");
								arr[index++] = 'л';
								state = 12;	// "N";
								break;
							case 'o':
								//sb.Append("ло");
								arr[index++] = 'л';
								//sb.Append("ло");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("лО");
								arr[index++] = 'л';
								//sb.Append("лО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("лп");
								arr[index++] = 'л';
								//sb.Append("лп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("лП");
								arr[index++] = 'л';
								//sb.Append("лП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("лр");
								arr[index++] = 'л';
								//sb.Append("лр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("лР");
								arr[index++] = 'л';
								//sb.Append("лР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("л");
								arr[index++] = 'л';
								state = 13;	// "s";
								break;
							case 'S':
								//sb.Append("л");
								arr[index++] = 'л';
								state = 14;	// "S";
								break;
							case 't':
								//sb.Append("лт");
								arr[index++] = 'л';
								//sb.Append("лт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("лТ");
								arr[index++] = 'л';
								//sb.Append("лТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("лу");
								arr[index++] = 'л';
								//sb.Append("лу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("лУ");
								arr[index++] = 'л';
								//sb.Append("лУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("лв");
								arr[index++] = 'л';
								//sb.Append("лв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("лВ");
								arr[index++] = 'л';
								//sb.Append("лВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("лх");
								arr[index++] = 'л';
								//sb.Append("лх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("лХ");
								arr[index++] = 'л';
								//sb.Append("лХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'z':
								//sb.Append("л");
								arr[index++] = 'л';
								state = 15;	// "z";
								break;
							case 'Z':
								//sb.Append("л");
								arr[index++] = 'л';
								state = 16;	// "Z";
								break;
							case 'п':
								//sb.Append("лн");
								arr[index++] = 'л';
								//sb.Append("лн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'П':
								//sb.Append("лН");
								arr[index++] = 'л';
								//sb.Append("лН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							default:
								//sb.Append("л");
								arr[index++] = 'л';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 10:	// "L"
						switch (c)
						{
							case '\'':
								//sb.Append("Л’");
								arr[index++] = 'Л';
								//sb.Append("Л’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("Л№");
								arr[index++] = 'Л';
								//sb.Append("Л№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Љ");
								arr[index++] = 'Љ';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("Ла");
								arr[index++] = 'Л';
								//sb.Append("Ла");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("ЛА");
								arr[index++] = 'Л';
								//sb.Append("ЛА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Лб");
								arr[index++] = 'Л';
								//sb.Append("Лб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("ЛБ");
								arr[index++] = 'Л';
								//sb.Append("ЛБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("Л");
								arr[index++] = 'Л';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("Л");
								arr[index++] = 'Л';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("Л");
								arr[index++] = 'Л';
								state = 3;	// "d";
								break;
							case 'D':
								//sb.Append("Л");
								arr[index++] = 'Л';
								state = 4;	// "D";
								break;
							case 'e':
								//sb.Append("Ле");
								arr[index++] = 'Л';
								//sb.Append("Ле");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("ЛЕ");
								arr[index++] = 'Л';
								//sb.Append("ЛЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("Лф");
								arr[index++] = 'Л';
								//sb.Append("Лф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("ЛФ");
								arr[index++] = 'Л';
								//sb.Append("ЛФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("Л");
								arr[index++] = 'Л';
								state = 5;	// "g";
								break;
							case 'G':
								//sb.Append("Л");
								arr[index++] = 'Л';
								state = 6;	// "G";
								break;
							case 'i':
								//sb.Append("Ли");
								arr[index++] = 'Л';
								//sb.Append("Ли");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("ЛИ");
								arr[index++] = 'Л';
								//sb.Append("ЛИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Лj");
								arr[index++] = 'Л';
								//sb.Append("Лj");
								arr[index++] = 'j';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("ЛJ");
								arr[index++] = 'Л';
								//sb.Append("ЛJ");
								arr[index++] = 'J';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("Л");
								arr[index++] = 'Л';
								state = 7;	// "k";
								break;
							case 'K':
								//sb.Append("Л");
								arr[index++] = 'Л';
								state = 8;	// "K";
								break;
							case 'l':
								//sb.Append("Л");
								arr[index++] = 'Л';
								state = 9;	// "l";
								break;
							case 'L':
								//sb.Append("Л");
								arr[index++] = 'Л';
								break;
							case 'm':
								//sb.Append("Лм");
								arr[index++] = 'Л';
								//sb.Append("Лм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("ЛМ");
								arr[index++] = 'Л';
								//sb.Append("ЛМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("Л");
								arr[index++] = 'Л';
								state = 11;	// "n";
								break;
							case 'N':
								//sb.Append("Л");
								arr[index++] = 'Л';
								state = 12;	// "N";
								break;
							case 'o':
								//sb.Append("Ло");
								arr[index++] = 'Л';
								//sb.Append("Ло");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("ЛО");
								arr[index++] = 'Л';
								//sb.Append("ЛО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Лп");
								arr[index++] = 'Л';
								//sb.Append("Лп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("ЛП");
								arr[index++] = 'Л';
								//sb.Append("ЛП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Лр");
								arr[index++] = 'Л';
								//sb.Append("Лр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("ЛР");
								arr[index++] = 'Л';
								//sb.Append("ЛР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("Л");
								arr[index++] = 'Л';
								state = 13;	// "s";
								break;
							case 'S':
								//sb.Append("Л");
								arr[index++] = 'Л';
								state = 14;	// "S";
								break;
							case 't':
								//sb.Append("Лт");
								arr[index++] = 'Л';
								//sb.Append("Лт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("ЛТ");
								arr[index++] = 'Л';
								//sb.Append("ЛТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Лу");
								arr[index++] = 'Л';
								//sb.Append("Лу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("ЛУ");
								arr[index++] = 'Л';
								//sb.Append("ЛУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Лв");
								arr[index++] = 'Л';
								//sb.Append("Лв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("ЛВ");
								arr[index++] = 'Л';
								//sb.Append("ЛВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Лх");
								arr[index++] = 'Л';
								//sb.Append("Лх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("ЛХ");
								arr[index++] = 'Л';
								//sb.Append("ЛХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'z':
								//sb.Append("Л");
								arr[index++] = 'Л';
								state = 15;	// "z";
								break;
							case 'Z':
								//sb.Append("Л");
								arr[index++] = 'Л';
								state = 16;	// "Z";
								break;
							case 'п':
								//sb.Append("Лн");
								arr[index++] = 'Л';
								//sb.Append("Лн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'П':
								//sb.Append("ЛН");
								arr[index++] = 'Л';
								//sb.Append("ЛН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							default:
								//sb.Append("Л");
								arr[index++] = 'Л';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 11:	// "n"
						switch (c)
						{
							case '\'':
								//sb.Append("n’");
								arr[index++] = 'n';
								//sb.Append("n’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("n№");
								arr[index++] = 'n';
								//sb.Append("n№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("њ");
								arr[index++] = 'њ';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("nа");
								arr[index++] = 'n';
								//sb.Append("nа");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("nА");
								arr[index++] = 'n';
								//sb.Append("nА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("nб");
								arr[index++] = 'n';
								//sb.Append("nб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("nБ");
								arr[index++] = 'n';
								//sb.Append("nБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("n");
								arr[index++] = 'n';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("n");
								arr[index++] = 'n';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("n");
								arr[index++] = 'n';
								state = 3;	// "d";
								break;
							case 'D':
								//sb.Append("n");
								arr[index++] = 'n';
								state = 4;	// "D";
								break;
							case 'e':
								//sb.Append("nе");
								arr[index++] = 'n';
								//sb.Append("nе");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("nЕ");
								arr[index++] = 'n';
								//sb.Append("nЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("nф");
								arr[index++] = 'n';
								//sb.Append("nф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("nФ");
								arr[index++] = 'n';
								//sb.Append("nФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("n");
								arr[index++] = 'n';
								state = 5;	// "g";
								break;
							case 'G':
								//sb.Append("n");
								arr[index++] = 'n';
								state = 6;	// "G";
								break;
							case 'i':
								//sb.Append("nи");
								arr[index++] = 'n';
								//sb.Append("nи");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("nИ");
								arr[index++] = 'n';
								//sb.Append("nИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("nj");
								arr[index++] = 'n';
								//sb.Append("nj");
								arr[index++] = 'j';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("nJ");
								arr[index++] = 'n';
								//sb.Append("nJ");
								arr[index++] = 'J';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("n");
								arr[index++] = 'n';
								state = 7;	// "k";
								break;
							case 'K':
								//sb.Append("n");
								arr[index++] = 'n';
								state = 8;	// "K";
								break;
							case 'l':
								//sb.Append("n");
								arr[index++] = 'n';
								state = 9;	// "l";
								break;
							case 'L':
								//sb.Append("n");
								arr[index++] = 'n';
								state = 10;	// "L";
								break;
							case 'm':
								//sb.Append("nм");
								arr[index++] = 'n';
								//sb.Append("nм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("nМ");
								arr[index++] = 'n';
								//sb.Append("nМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("n");
								arr[index++] = 'n';
								break;
							case 'N':
								//sb.Append("n");
								arr[index++] = 'n';
								state = 12;	// "N";
								break;
							case 'o':
								//sb.Append("nо");
								arr[index++] = 'n';
								//sb.Append("nо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("nО");
								arr[index++] = 'n';
								//sb.Append("nО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("nп");
								arr[index++] = 'n';
								//sb.Append("nп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("nП");
								arr[index++] = 'n';
								//sb.Append("nП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("nр");
								arr[index++] = 'n';
								//sb.Append("nр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("nР");
								arr[index++] = 'n';
								//sb.Append("nР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("n");
								arr[index++] = 'n';
								state = 13;	// "s";
								break;
							case 'S':
								//sb.Append("n");
								arr[index++] = 'n';
								state = 14;	// "S";
								break;
							case 't':
								//sb.Append("nт");
								arr[index++] = 'n';
								//sb.Append("nт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("nТ");
								arr[index++] = 'n';
								//sb.Append("nТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("nу");
								arr[index++] = 'n';
								//sb.Append("nу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("nУ");
								arr[index++] = 'n';
								//sb.Append("nУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("nв");
								arr[index++] = 'n';
								//sb.Append("nв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("nВ");
								arr[index++] = 'n';
								//sb.Append("nВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("nх");
								arr[index++] = 'n';
								//sb.Append("nх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("nХ");
								arr[index++] = 'n';
								//sb.Append("nХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'z':
								//sb.Append("n");
								arr[index++] = 'n';
								state = 15;	// "z";
								break;
							case 'Z':
								//sb.Append("n");
								arr[index++] = 'n';
								state = 16;	// "Z";
								break;
							case 'п':
								//sb.Append("nн");
								arr[index++] = 'n';
								//sb.Append("nн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'П':
								//sb.Append("nН");
								arr[index++] = 'n';
								//sb.Append("nН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							default:
								//sb.Append("n");
								arr[index++] = 'n';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 12:	// "N"
						switch (c)
						{
							case '\'':
								//sb.Append("N’");
								arr[index++] = 'N';
								//sb.Append("N’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("N№");
								arr[index++] = 'N';
								//sb.Append("N№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("Њ");
								arr[index++] = 'Њ';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("Nа");
								arr[index++] = 'N';
								//sb.Append("Nа");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("NА");
								arr[index++] = 'N';
								//sb.Append("NА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Nб");
								arr[index++] = 'N';
								//sb.Append("Nб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("NБ");
								arr[index++] = 'N';
								//sb.Append("NБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("N");
								arr[index++] = 'N';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("N");
								arr[index++] = 'N';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("N");
								arr[index++] = 'N';
								state = 3;	// "d";
								break;
							case 'D':
								//sb.Append("N");
								arr[index++] = 'N';
								state = 4;	// "D";
								break;
							case 'e':
								//sb.Append("Nе");
								arr[index++] = 'N';
								//sb.Append("Nе");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("NЕ");
								arr[index++] = 'N';
								//sb.Append("NЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("Nф");
								arr[index++] = 'N';
								//sb.Append("Nф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("NФ");
								arr[index++] = 'N';
								//sb.Append("NФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("N");
								arr[index++] = 'N';
								state = 5;	// "g";
								break;
							case 'G':
								//sb.Append("N");
								arr[index++] = 'N';
								state = 6;	// "G";
								break;
							case 'i':
								//sb.Append("Nи");
								arr[index++] = 'N';
								//sb.Append("Nи");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("NИ");
								arr[index++] = 'N';
								//sb.Append("NИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Nj");
								arr[index++] = 'N';
								//sb.Append("Nj");
								arr[index++] = 'j';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("NJ");
								arr[index++] = 'N';
								//sb.Append("NJ");
								arr[index++] = 'J';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("N");
								arr[index++] = 'N';
								state = 7;	// "k";
								break;
							case 'K':
								//sb.Append("N");
								arr[index++] = 'N';
								state = 8;	// "K";
								break;
							case 'l':
								//sb.Append("N");
								arr[index++] = 'N';
								state = 9;	// "l";
								break;
							case 'L':
								//sb.Append("N");
								arr[index++] = 'N';
								state = 10;	// "L";
								break;
							case 'm':
								//sb.Append("Nм");
								arr[index++] = 'N';
								//sb.Append("Nм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("NМ");
								arr[index++] = 'N';
								//sb.Append("NМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("N");
								arr[index++] = 'N';
								state = 11;	// "n";
								break;
							case 'N':
								//sb.Append("N");
								arr[index++] = 'N';
								break;
							case 'o':
								//sb.Append("Nо");
								arr[index++] = 'N';
								//sb.Append("Nо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("NО");
								arr[index++] = 'N';
								//sb.Append("NО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Nп");
								arr[index++] = 'N';
								//sb.Append("Nп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("NП");
								arr[index++] = 'N';
								//sb.Append("NП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Nр");
								arr[index++] = 'N';
								//sb.Append("Nр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("NР");
								arr[index++] = 'N';
								//sb.Append("NР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("N");
								arr[index++] = 'N';
								state = 13;	// "s";
								break;
							case 'S':
								//sb.Append("N");
								arr[index++] = 'N';
								state = 14;	// "S";
								break;
							case 't':
								//sb.Append("Nт");
								arr[index++] = 'N';
								//sb.Append("Nт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("NТ");
								arr[index++] = 'N';
								//sb.Append("NТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Nу");
								arr[index++] = 'N';
								//sb.Append("Nу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("NУ");
								arr[index++] = 'N';
								//sb.Append("NУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Nв");
								arr[index++] = 'N';
								//sb.Append("Nв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("NВ");
								arr[index++] = 'N';
								//sb.Append("NВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Nх");
								arr[index++] = 'N';
								//sb.Append("Nх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("NХ");
								arr[index++] = 'N';
								//sb.Append("NХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'z':
								//sb.Append("N");
								arr[index++] = 'N';
								state = 15;	// "z";
								break;
							case 'Z':
								//sb.Append("N");
								arr[index++] = 'N';
								state = 16;	// "Z";
								break;
							case 'п':
								//sb.Append("Nн");
								arr[index++] = 'N';
								//sb.Append("Nн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'П':
								//sb.Append("NН");
								arr[index++] = 'N';
								//sb.Append("NН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							default:
								//sb.Append("N");
								arr[index++] = 'N';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 13:	// "s"
						switch (c)
						{
							case '\'':
								//sb.Append("с’");
								arr[index++] = 'с';
								//sb.Append("с’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("с№");
								arr[index++] = 'с';
								//sb.Append("с№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("са");
								arr[index++] = 'с';
								//sb.Append("са");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("сА");
								arr[index++] = 'с';
								//sb.Append("сА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("сб");
								arr[index++] = 'с';
								//sb.Append("сб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("сБ");
								arr[index++] = 'с';
								//sb.Append("сБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 3;	// "d";
								break;
							case 'D':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 4;	// "D";
								break;
							case 'e':
								//sb.Append("се");
								arr[index++] = 'с';
								//sb.Append("се");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("сЕ");
								arr[index++] = 'с';
								//sb.Append("сЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("сф");
								arr[index++] = 'с';
								//sb.Append("сф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("сФ");
								arr[index++] = 'с';
								//sb.Append("сФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 5;	// "g";
								break;
							case 'G':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 6;	// "G";
								break;
							case 'h':
								//sb.Append("ш");
								arr[index++] = 'ш';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("си");
								arr[index++] = 'с';
								//sb.Append("си");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("сИ");
								arr[index++] = 'с';
								//sb.Append("сИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("сj");
								arr[index++] = 'с';
								//sb.Append("сj");
								arr[index++] = 'j';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("сJ");
								arr[index++] = 'с';
								//sb.Append("сJ");
								arr[index++] = 'J';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 7;	// "k";
								break;
							case 'K':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 8;	// "K";
								break;
							case 'l':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 9;	// "l";
								break;
							case 'L':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 10;	// "L";
								break;
							case 'm':
								//sb.Append("см");
								arr[index++] = 'с';
								//sb.Append("см");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("сМ");
								arr[index++] = 'с';
								//sb.Append("сМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 11;	// "n";
								break;
							case 'N':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 12;	// "N";
								break;
							case 'o':
								//sb.Append("со");
								arr[index++] = 'с';
								//sb.Append("со");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("сО");
								arr[index++] = 'с';
								//sb.Append("сО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("сп");
								arr[index++] = 'с';
								//sb.Append("сп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("сП");
								arr[index++] = 'с';
								//sb.Append("сП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("ср");
								arr[index++] = 'с';
								//sb.Append("ср");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("сР");
								arr[index++] = 'с';
								//sb.Append("сР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("с");
								arr[index++] = 'с';
								break;
							case 'S':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 14;	// "S";
								break;
							case 't':
								//sb.Append("ст");
								arr[index++] = 'с';
								//sb.Append("ст");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("сТ");
								arr[index++] = 'с';
								//sb.Append("сТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("су");
								arr[index++] = 'с';
								//sb.Append("су");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("сУ");
								arr[index++] = 'с';
								//sb.Append("сУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("св");
								arr[index++] = 'с';
								//sb.Append("св");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("сВ");
								arr[index++] = 'с';
								//sb.Append("сВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("сх");
								arr[index++] = 'с';
								//sb.Append("сх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("сХ");
								arr[index++] = 'с';
								//sb.Append("сХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'z':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 15;	// "z";
								break;
							case 'Z':
								//sb.Append("с");
								arr[index++] = 'с';
								state = 16;	// "Z";
								break;
							case 'п':
								//sb.Append("сн");
								arr[index++] = 'с';
								//sb.Append("сн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'П':
								//sb.Append("сН");
								arr[index++] = 'с';
								//sb.Append("сН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							default:
								//sb.Append("с");
								arr[index++] = 'с';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 14:	// "S"
						switch (c)
						{
							case '\'':
								//sb.Append("С’");
								arr[index++] = 'С';
								//sb.Append("С’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("С№");
								arr[index++] = 'С';
								//sb.Append("С№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("Са");
								arr[index++] = 'С';
								//sb.Append("Са");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("СА");
								arr[index++] = 'С';
								//sb.Append("СА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Сб");
								arr[index++] = 'С';
								//sb.Append("Сб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("СБ");
								arr[index++] = 'С';
								//sb.Append("СБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 3;	// "d";
								break;
							case 'D':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 4;	// "D";
								break;
							case 'e':
								//sb.Append("Се");
								arr[index++] = 'С';
								//sb.Append("Се");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("СЕ");
								arr[index++] = 'С';
								//sb.Append("СЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("Сф");
								arr[index++] = 'С';
								//sb.Append("Сф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("СФ");
								arr[index++] = 'С';
								//sb.Append("СФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 5;	// "g";
								break;
							case 'G':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 6;	// "G";
								break;
							case 'h':
								//sb.Append("Ш");
								arr[index++] = 'Ш';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Си");
								arr[index++] = 'С';
								//sb.Append("Си");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("СИ");
								arr[index++] = 'С';
								//sb.Append("СИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Сj");
								arr[index++] = 'С';
								//sb.Append("Сj");
								arr[index++] = 'j';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("СJ");
								arr[index++] = 'С';
								//sb.Append("СJ");
								arr[index++] = 'J';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 7;	// "k";
								break;
							case 'K':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 8;	// "K";
								break;
							case 'l':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 9;	// "l";
								break;
							case 'L':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 10;	// "L";
								break;
							case 'm':
								//sb.Append("См");
								arr[index++] = 'С';
								//sb.Append("См");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("СМ");
								arr[index++] = 'С';
								//sb.Append("СМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 11;	// "n";
								break;
							case 'N':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 12;	// "N";
								break;
							case 'o':
								//sb.Append("Со");
								arr[index++] = 'С';
								//sb.Append("Со");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("СО");
								arr[index++] = 'С';
								//sb.Append("СО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Сп");
								arr[index++] = 'С';
								//sb.Append("Сп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("СП");
								arr[index++] = 'С';
								//sb.Append("СП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Ср");
								arr[index++] = 'С';
								//sb.Append("Ср");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("СР");
								arr[index++] = 'С';
								//sb.Append("СР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 13;	// "s";
								break;
							case 'S':
								//sb.Append("С");
								arr[index++] = 'С';
								break;
							case 't':
								//sb.Append("Ст");
								arr[index++] = 'С';
								//sb.Append("Ст");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("СТ");
								arr[index++] = 'С';
								//sb.Append("СТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Су");
								arr[index++] = 'С';
								//sb.Append("Су");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("СУ");
								arr[index++] = 'С';
								//sb.Append("СУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Св");
								arr[index++] = 'С';
								//sb.Append("Св");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("СВ");
								arr[index++] = 'С';
								//sb.Append("СВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Сх");
								arr[index++] = 'С';
								//sb.Append("Сх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("СХ");
								arr[index++] = 'С';
								//sb.Append("СХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'z':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 15;	// "z";
								break;
							case 'Z':
								//sb.Append("С");
								arr[index++] = 'С';
								state = 16;	// "Z";
								break;
							case 'п':
								//sb.Append("Сн");
								arr[index++] = 'С';
								//sb.Append("Сн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'П':
								//sb.Append("СН");
								arr[index++] = 'С';
								//sb.Append("СН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							default:
								//sb.Append("С");
								arr[index++] = 'С';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 15:	// "z"
						switch (c)
						{
							case '\'':
								//sb.Append("з’");
								arr[index++] = 'з';
								//sb.Append("з’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("з№");
								arr[index++] = 'з';
								//sb.Append("з№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("s");
								arr[index++] = 's';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("за");
								arr[index++] = 'з';
								//sb.Append("за");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("зА");
								arr[index++] = 'з';
								//sb.Append("зА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("зб");
								arr[index++] = 'з';
								//sb.Append("зб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("зБ");
								arr[index++] = 'з';
								//sb.Append("зБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 3;	// "d";
								break;
							case 'D':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 4;	// "D";
								break;
							case 'e':
								//sb.Append("зе");
								arr[index++] = 'з';
								//sb.Append("зе");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("зЕ");
								arr[index++] = 'з';
								//sb.Append("зЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("зф");
								arr[index++] = 'з';
								//sb.Append("зф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("зФ");
								arr[index++] = 'з';
								//sb.Append("зФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 5;	// "g";
								break;
							case 'G':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 6;	// "G";
								break;
							case 'h':
								//sb.Append("ж");
								arr[index++] = 'ж';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("зи");
								arr[index++] = 'з';
								//sb.Append("зи");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("зИ");
								arr[index++] = 'з';
								//sb.Append("зИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("зj");
								arr[index++] = 'з';
								//sb.Append("зj");
								arr[index++] = 'j';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("зJ");
								arr[index++] = 'з';
								//sb.Append("зJ");
								arr[index++] = 'J';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 7;	// "k";
								break;
							case 'K':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 8;	// "K";
								break;
							case 'l':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 9;	// "l";
								break;
							case 'L':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 10;	// "L";
								break;
							case 'm':
								//sb.Append("зм");
								arr[index++] = 'з';
								//sb.Append("зм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("зМ");
								arr[index++] = 'з';
								//sb.Append("зМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 11;	// "n";
								break;
							case 'N':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 12;	// "N";
								break;
							case 'o':
								//sb.Append("зо");
								arr[index++] = 'з';
								//sb.Append("зо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("зО");
								arr[index++] = 'з';
								//sb.Append("зО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("зп");
								arr[index++] = 'з';
								//sb.Append("зп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("зП");
								arr[index++] = 'з';
								//sb.Append("зП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("зр");
								arr[index++] = 'з';
								//sb.Append("зр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("зР");
								arr[index++] = 'з';
								//sb.Append("зР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 13;	// "s";
								break;
							case 'S':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 14;	// "S";
								break;
							case 't':
								//sb.Append("зт");
								arr[index++] = 'з';
								//sb.Append("зт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("зТ");
								arr[index++] = 'з';
								//sb.Append("зТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("зу");
								arr[index++] = 'з';
								//sb.Append("зу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("зУ");
								arr[index++] = 'з';
								//sb.Append("зУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("зв");
								arr[index++] = 'з';
								//sb.Append("зв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("зВ");
								arr[index++] = 'з';
								//sb.Append("зВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("зх");
								arr[index++] = 'з';
								//sb.Append("зх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("зХ");
								arr[index++] = 'з';
								//sb.Append("зХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'z':
								//sb.Append("з");
								arr[index++] = 'з';
								break;
							case 'Z':
								//sb.Append("з");
								arr[index++] = 'з';
								state = 16;	// "Z";
								break;
							case 'п':
								//sb.Append("зн");
								arr[index++] = 'з';
								//sb.Append("зн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'П':
								//sb.Append("зН");
								arr[index++] = 'з';
								//sb.Append("зН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							default:
								//sb.Append("з");
								arr[index++] = 'з';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
					case 16:	// "Z"
						switch (c)
						{
							case '\'':
								//sb.Append("З’");
								arr[index++] = 'З';
								//sb.Append("З’");
								arr[index++] = '’';
								state = 0;	// "";
								break;
							case '#':
								//sb.Append("З№");
								arr[index++] = 'З';
								//sb.Append("З№");
								arr[index++] = '№';
								state = 0;	// "";
								break;
							case '`':
								//sb.Append("S");
								arr[index++] = 'S';
								state = 0;	// "";
								break;
							case 'a':
								//sb.Append("За");
								arr[index++] = 'З';
								//sb.Append("За");
								arr[index++] = 'а';
								state = 0;	// "";
								break;
							case 'A':
								//sb.Append("ЗА");
								arr[index++] = 'З';
								//sb.Append("ЗА");
								arr[index++] = 'А';
								state = 0;	// "";
								break;
							case 'b':
								//sb.Append("Зб");
								arr[index++] = 'З';
								//sb.Append("Зб");
								arr[index++] = 'б';
								state = 0;	// "";
								break;
							case 'B':
								//sb.Append("ЗБ");
								arr[index++] = 'З';
								//sb.Append("ЗБ");
								arr[index++] = 'Б';
								state = 0;	// "";
								break;
							case 'c':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 1;	// "c";
								break;
							case 'C':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 2;	// "C";
								break;
							case 'd':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 3;	// "d";
								break;
							case 'D':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 4;	// "D";
								break;
							case 'e':
								//sb.Append("Зе");
								arr[index++] = 'З';
								//sb.Append("Зе");
								arr[index++] = 'е';
								state = 0;	// "";
								break;
							case 'E':
								//sb.Append("ЗЕ");
								arr[index++] = 'З';
								//sb.Append("ЗЕ");
								arr[index++] = 'Е';
								state = 0;	// "";
								break;
							case 'f':
								//sb.Append("Зф");
								arr[index++] = 'З';
								//sb.Append("Зф");
								arr[index++] = 'ф';
								state = 0;	// "";
								break;
							case 'F':
								//sb.Append("ЗФ");
								arr[index++] = 'З';
								//sb.Append("ЗФ");
								arr[index++] = 'Ф';
								state = 0;	// "";
								break;
							case 'g':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 5;	// "g";
								break;
							case 'G':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 6;	// "G";
								break;
							case 'h':
								//sb.Append("Ж");
								arr[index++] = 'Ж';
								state = 0;	// "";
								break;
							case 'i':
								//sb.Append("Зи");
								arr[index++] = 'З';
								//sb.Append("Зи");
								arr[index++] = 'и';
								state = 0;	// "";
								break;
							case 'I':
								//sb.Append("ЗИ");
								arr[index++] = 'З';
								//sb.Append("ЗИ");
								arr[index++] = 'И';
								state = 0;	// "";
								break;
							case 'j':
								//sb.Append("Зj");
								arr[index++] = 'З';
								//sb.Append("Зj");
								arr[index++] = 'j';
								state = 0;	// "";
								break;
							case 'J':
								//sb.Append("ЗJ");
								arr[index++] = 'З';
								//sb.Append("ЗJ");
								arr[index++] = 'J';
								state = 0;	// "";
								break;
							case 'k':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 7;	// "k";
								break;
							case 'K':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 8;	// "K";
								break;
							case 'l':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 9;	// "l";
								break;
							case 'L':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 10;	// "L";
								break;
							case 'm':
								//sb.Append("Зм");
								arr[index++] = 'З';
								//sb.Append("Зм");
								arr[index++] = 'м';
								state = 0;	// "";
								break;
							case 'M':
								//sb.Append("ЗМ");
								arr[index++] = 'З';
								//sb.Append("ЗМ");
								arr[index++] = 'М';
								state = 0;	// "";
								break;
							case 'n':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 11;	// "n";
								break;
							case 'N':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 12;	// "N";
								break;
							case 'o':
								//sb.Append("Зо");
								arr[index++] = 'З';
								//sb.Append("Зо");
								arr[index++] = 'о';
								state = 0;	// "";
								break;
							case 'O':
								//sb.Append("ЗО");
								arr[index++] = 'З';
								//sb.Append("ЗО");
								arr[index++] = 'О';
								state = 0;	// "";
								break;
							case 'p':
								//sb.Append("Зп");
								arr[index++] = 'З';
								//sb.Append("Зп");
								arr[index++] = 'п';
								state = 0;	// "";
								break;
							case 'P':
								//sb.Append("ЗП");
								arr[index++] = 'З';
								//sb.Append("ЗП");
								arr[index++] = 'П';
								state = 0;	// "";
								break;
							case 'r':
								//sb.Append("Зр");
								arr[index++] = 'З';
								//sb.Append("Зр");
								arr[index++] = 'р';
								state = 0;	// "";
								break;
							case 'R':
								//sb.Append("ЗР");
								arr[index++] = 'З';
								//sb.Append("ЗР");
								arr[index++] = 'Р';
								state = 0;	// "";
								break;
							case 's':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 13;	// "s";
								break;
							case 'S':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 14;	// "S";
								break;
							case 't':
								//sb.Append("Зт");
								arr[index++] = 'З';
								//sb.Append("Зт");
								arr[index++] = 'т';
								state = 0;	// "";
								break;
							case 'T':
								//sb.Append("ЗТ");
								arr[index++] = 'З';
								//sb.Append("ЗТ");
								arr[index++] = 'Т';
								state = 0;	// "";
								break;
							case 'u':
								//sb.Append("Зу");
								arr[index++] = 'З';
								//sb.Append("Зу");
								arr[index++] = 'у';
								state = 0;	// "";
								break;
							case 'U':
								//sb.Append("ЗУ");
								arr[index++] = 'З';
								//sb.Append("ЗУ");
								arr[index++] = 'У';
								state = 0;	// "";
								break;
							case 'v':
								//sb.Append("Зв");
								arr[index++] = 'З';
								//sb.Append("Зв");
								arr[index++] = 'в';
								state = 0;	// "";
								break;
							case 'V':
								//sb.Append("ЗВ");
								arr[index++] = 'З';
								//sb.Append("ЗВ");
								arr[index++] = 'В';
								state = 0;	// "";
								break;
							case 'x':
								//sb.Append("Зх");
								arr[index++] = 'З';
								//sb.Append("Зх");
								arr[index++] = 'х';
								state = 0;	// "";
								break;
							case 'X':
								//sb.Append("ЗХ");
								arr[index++] = 'З';
								//sb.Append("ЗХ");
								arr[index++] = 'Х';
								state = 0;	// "";
								break;
							case 'z':
								//sb.Append("З");
								arr[index++] = 'З';
								state = 15;	// "z";
								break;
							case 'Z':
								//sb.Append("З");
								arr[index++] = 'З';
								break;
							case 'п':
								//sb.Append("Зн");
								arr[index++] = 'З';
								//sb.Append("Зн");
								arr[index++] = 'н';
								state = 0;	// "";
								break;
							case 'П':
								//sb.Append("ЗН");
								arr[index++] = 'З';
								//sb.Append("ЗН");
								arr[index++] = 'Н';
								state = 0;	// "";
								break;
							default:
								//sb.Append("З");
								arr[index++] = 'З';
								//sb.Append(c);
								arr[index++] = c;
								state = 0;	// "";
								break;
						}
						break;				
				}
			}

			switch (state)
			{
				case 0:	// ""
					break;				
				case 1:	// "c"
					//sb.Append("ц");
					arr[index++] = 'ц';
					break;				
				case 2:	// "C"
					//sb.Append("Ц");
					arr[index++] = 'Ц';
					break;				
				case 3:	// "d"
					//sb.Append("д");
					arr[index++] = 'д';
					break;				
				case 4:	// "D"
					//sb.Append("Д");
					arr[index++] = 'Д';
					break;				
				case 5:	// "g"
					//sb.Append("г");
					arr[index++] = 'г';
					break;				
				case 6:	// "G"
					//sb.Append("Г");
					arr[index++] = 'Г';
					break;				
				case 7:	// "k"
					//sb.Append("к");
					arr[index++] = 'к';
					break;				
				case 8:	// "K"
					//sb.Append("К");
					arr[index++] = 'К';
					break;				
				case 9:	// "l"
					//sb.Append("л");
					arr[index++] = 'л';
					break;				
				case 10:	// "L"
					//sb.Append("Л");
					arr[index++] = 'Л';
					break;				
				case 11:	// "n"
					//sb.Append("n");
					arr[index++] = 'n';
					break;				
				case 12:	// "N"
					//sb.Append("N");
					arr[index++] = 'N';
					break;				
				case 13:	// "s"
					//sb.Append("с");
					arr[index++] = 'с';
					break;				
				case 14:	// "S"
					//sb.Append("С");
					arr[index++] = 'С';
					break;				
				case 15:	// "z"
					//sb.Append("з");
					arr[index++] = 'з';
					break;				
				case 16:	// "Z"
					//sb.Append("З");
					arr[index++] = 'З';
					break;				
			}
			//return sb.ToString();
			return new string(arr, 0, index);
		}
	}
}






