using System.Text;

// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Generated at 2018-09-18 00:26:09Z
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace NickBuhro.Translit
{
	partial class Transliteration
	{
		public static void Append(StringBuilder sb, string text)
		{
			var state = "";			
			for (var i = 0; i < text.Length; i++)
			{
				var c = text[i];
				switch (state)
				{
					case "":
						switch (c)
						{
							case 'a':
								state = "a";
								break;
							case 'b':
								state = "b";
								break;
							default:
								sb.Append(c);
								break;
						}
						break;				
					case "a":
						switch (c)
						{
							case 'a':
								sb.Append("a");
								break;
							case 'b':
								state = "ab";
								break;
							default:
								sb.Append("a");
								sb.Append(c);
								state = "";
								break;
						}
						break;				
					case "ab":
						switch (c)
						{
							case 'a':
								sb.Append("3");
								state = "a";
								break;
							case 'b':
								sb.Append("3");
								state = "b";
								break;
							case 'c':
								sb.Append("1");
								state = "";
								break;
							default:
								sb.Append("3");
								sb.Append(c);
								state = "";
								break;
						}
						break;				
					case "b":
						switch (c)
						{
							case 'a':
								sb.Append("b");
								state = "a";
								break;
							case 'b':
								sb.Append("b");
								break;
							case 'c':
								state = "bc";
								break;
							default:
								sb.Append("b");
								sb.Append(c);
								state = "";
								break;
						}
						break;				
					case "bc":
						switch (c)
						{
							case 'a':
								sb.Append("bc");
								state = "a";
								break;
							case 'b':
								sb.Append("bc");
								state = "b";
								break;
							case 'd':
								sb.Append("2");
								state = "";
								break;
							default:
								sb.Append("bc");
								sb.Append(c);
								state = "";
								break;
						}
						break;				
				}
			}

			switch (state)
			{
				case "":
					break;				
				case "a":
					sb.Append("a");
					break;				
				case "ab":
					sb.Append("3");
					break;				
				case "b":
					sb.Append("b");
					break;				
				case "bc":
					sb.Append("bc");
					break;				
			}
		}
	}
}






